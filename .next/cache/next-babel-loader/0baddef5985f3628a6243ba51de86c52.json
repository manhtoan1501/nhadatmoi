{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\toan\\\\Desktop\\\\NDM\\\\chat\\\\components\\\\Home\\\\Header.jsx\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport InfoIcon from '@material-ui/icons/Info';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { I18n } from 'react-redux-i18n';\nimport { IconButton, Icon, Tooltip, Button, Card, Grid, CardContent, CardActions, Typography, AppBar, Toolbar, Hidden, Popover } from '@material-ui/core';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport { titles } from '../../constants/index';\nimport moment from 'moment';\nimport _ from 'lodash';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    rootList: {\n      width: '100%',\n      maxWidth: 360,\n      padding: 0,\n      backgroundColor: theme.palette.background.paper\n    },\n    title: {\n      display: 'inline',\n      cursor: 'default',\n      fontWeight: 500,\n      fontSize: 16,\n      padding: '0 8px'\n    },\n    rootPopover: {\n      pointerEvents: 'none',\n      marginTop: 10\n    }\n  };\n});\n\nvar Actions = function Actions(props) {\n  var classes = useStyles();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      indexOpen = _React$useState4[0],\n      setIndex = _React$useState4[1];\n\n  var popoverOpen = function popoverOpen(event, index) {\n    setOpen(event.currentTarget);\n    setIndex(index);\n  };\n\n  var popoverClose = function popoverClose() {\n    setOpen(null);\n    setIndex(null);\n  };\n\n  return __jsx(Grid, {\n    container: true,\n    spacing: 0,\n    style: {\n      height: 40,\n      width: '100%',\n      backgroundColor: '#1976d2'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    style: {\n      padding: '8px 80px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, titles.map(function (item, index) {\n    return __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }\n    }, __jsx(Typography, {\n      key: index,\n      color: \"inherit\",\n      className: classes.title,\n      onMouseEnter: function onMouseEnter(event) {\n        return popoverOpen(event, index);\n      } // onMouseLeave={popoverClose}\n      ,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 29\n      }\n    }, item.title), __jsx(\"div\", {\n      style: {\n        width: 2,\n        height: 40,\n        backgroundColor: 'white',\n        display: 'inline'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 29\n      }\n    }), indexOpen === index && __jsx(Popover, {\n      id: \"mouse-over-popover\" + index,\n      className: classes.rootPopover,\n      open: open,\n      anchorEl: open // Vị trí ghim, Theo chieu doc, theo chieu ngang\n      ,\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'left'\n      } // Biến đổi\n      ,\n      transformOrigin: {\n        vertical: 'top',\n        horizontal: 'bottom'\n      },\n      onClose: popoverClose,\n      disableRestoreFocus: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 53\n      }\n    }, item.elements.map(function (element, count) {\n      return __jsx(List, {\n        component: \"nav\",\n        className: classes.rootList,\n        \"aria-labelledby\": \"nested-list-subheader\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 41\n        }\n      }, __jsx(ListItem, {\n        button: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 45\n        }\n      }, element.children), count + 1 !== item.elements.length && __jsx(Divider, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 84\n        }\n      }));\n    })));\n  })));\n};\n\nexport default Actions;","map":{"version":3,"sources":["C:/Users/toan/Desktop/NDM/chat/components/Home/Header.jsx"],"names":["React","makeStyles","GridList","GridListTile","GridListTileBar","ListSubheader","InfoIcon","PropTypes","withStyles","I18n","IconButton","Icon","Tooltip","Button","Card","Grid","CardContent","CardActions","Typography","AppBar","Toolbar","Hidden","Popover","StarBorderIcon","List","ListItem","ListItemText","Divider","titles","moment","_","useStyles","theme","rootList","width","maxWidth","padding","backgroundColor","palette","background","paper","title","display","cursor","fontWeight","fontSize","rootPopover","pointerEvents","marginTop","Actions","props","classes","useState","open","setOpen","indexOpen","setIndex","popoverOpen","event","index","currentTarget","popoverClose","height","map","item","vertical","horizontal","elements","element","count","children","length"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport { I18n } from 'react-redux-i18n';\r\nimport {\r\n    IconButton,\r\n    Icon,\r\n    Tooltip,\r\n    Button,\r\n    Card,\r\n    Grid,\r\n    CardContent,\r\n    CardActions,\r\n    Typography,\r\n    AppBar,\r\n    Toolbar,\r\n    Hidden,\r\n    Popover,\r\n\r\n} from '@material-ui/core';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { titles } from '../../constants/index';\r\nimport moment from 'moment'\r\nimport _ from 'lodash'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    rootList: {\r\n        width: '100%',\r\n        maxWidth: 360,\r\n        padding: 0,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    title: {\r\n        display: 'inline',\r\n        cursor: 'default',\r\n        fontWeight: 500,\r\n        fontSize: 16,\r\n        padding: '0 8px'\r\n    },\r\n    rootPopover: {\r\n        pointerEvents: 'none',\r\n        marginTop: 10,\r\n    },\r\n\r\n}));\r\n\r\n\r\nconst Actions = (props) => {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [indexOpen, setIndex] = React.useState(null);\r\n\r\n    const popoverOpen = (event, index) => {\r\n        setOpen(event.currentTarget);\r\n        setIndex(index);\r\n    };\r\n\r\n    const popoverClose = () => {\r\n        setOpen(null);\r\n        setIndex(null);\r\n    };\r\n\r\n    return (\r\n        <Grid container spacing={0} style={{ height: 40, width: '100%', backgroundColor: '#1976d2' }}>\r\n            <Grid item xs={12} style={{ padding: '8px 80px' }}>\r\n                {titles.map((item, index) => {\r\n                    return (\r\n                        <span>\r\n                            <Typography\r\n                                key={index}\r\n                                color='inherit'\r\n                                className={classes.title}\r\n                                onMouseEnter={(event) => popoverOpen(event, index)}\r\n                            // onMouseLeave={popoverClose}\r\n                            >\r\n                                {item.title}\r\n                            </Typography>\r\n                            <div style={{ width: 2, height: 40, backgroundColor: 'white', display: 'inline' }} />\r\n                            {indexOpen === index && <Popover\r\n                                id={\"mouse-over-popover\" + index}\r\n                                className={classes.rootPopover}\r\n                                open={open}\r\n                                anchorEl={open}\r\n                                // Vị trí ghim, Theo chieu doc, theo chieu ngang\r\n                                anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\r\n                                // Biến đổi\r\n                                transformOrigin={{ vertical: 'top', horizontal: 'bottom' }}\r\n                                onClose={popoverClose}\r\n                                disableRestoreFocus\r\n                            >\r\n                                {item.elements.map((element, count) => {\r\n                                    return (\r\n                                        <List component=\"nav\" className={classes.rootList} aria-labelledby=\"nested-list-subheader\">\r\n                                            <ListItem button>\r\n                                                {element.children}\r\n                                            </ListItem>\r\n                                            {count + 1 !== item.elements.length && <Divider />}\r\n                                        </List>\r\n                                    )\r\n                                }\r\n                                )}\r\n                            </Popover>}\r\n                        </span>\r\n                    )\r\n                })}\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n};\r\n\r\nexport default Actions;\r\n"]},"metadata":{},"sourceType":"module"}
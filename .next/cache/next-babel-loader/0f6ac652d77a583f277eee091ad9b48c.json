{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manh nhan\\\\Desktop\\\\Nhadatmoi\\\\components\\\\Chat\\\\Index.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport Popper from '@material-ui/core/Popper';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { Grid, InputBase, Fade, Typography, Paper, CardHeader, Avatar, TextField, Divider, Tooltip, Input, IconButton } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport TagFacesIcon from '@material-ui/icons/TagFaces';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SendIcon from '@material-ui/icons/Send';\nimport { dataEmoji, arrChat, giphyDefault, theme, useStyles, themeTextfieldAdmin, themeTextfieldUser, StyledBadge } from \"./constant\";\nimport { create } from 'jss';\nimport rtl from 'jss-rtl';\nimport axios from \"axios\";\nimport { apiBaseURL } from \"../../constants\";\nimport \"cross-fetch/polyfill\";\nconst client = axios.create({\n  baseURL: apiBaseURL,\n  timeout: 30000\n});\nimport moment from \"moment\";\nimport 'moment/locale/es';\nmoment.locale('vi');\nimport { jssPreset } from '@material-ui/core/styles';\nconst jss = create({\n  plugins: [...jssPreset().plugins, rtl()]\n});\nexport default function PositionedPopper() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [open, setOpen] = React.useState(false);\n  const [placement, setPlacement] = React.useState();\n  const [online, setOnline] = React.useState(true);\n  const [internet, setInternet] = React.useState(true);\n  const [texting, setTexting] = React.useState(false);\n  const [giphyData, setGiphyData] = React.useState();\n  const [openEmojiGiphy, setOpenEmojiGiphy] = React.useState(false);\n  const [valueSearchGiphy, setValueSearchGiphy] = React.useState(\"\");\n  const [loading, setLoading] = React.useState(false);\n  const [completed, setCompleted] = React.useState(1);\n  const [avatarImage, setAvatarImage] = React.useState(\"https://image.crisp.chat/avatar/operator/da8d4459-5ea3-4119-bca1-9170f49ee69c/240/?1585999578742&quot\");\n  const [nameAdmin, setNameAdmin] = React.useState(\"Nguyễn Thanh Hương\");\n  let [valueInput, setValueInput] = React.useState(\"\");\n  const [viewEmoji, setViewEmoji] = React.useState(false);\n  const xxx = React.useRef(null);\n\n  const onCloseChat = () => {\n    setOpen(false);\n  };\n\n  const setOnKeyPress = event => {// setTexting(true)\n  };\n\n  const setOnBlur = event => {// setTexting(true)\n  };\n\n  const setOnKeyDown = event => {\n    if (event.keyCode == 13) {\n      arrChat.push({\n        message: event.target.value,\n        type: 'user',\n        image: {\n          url: \"\",\n          width: \"\",\n          height: \"\"\n        },\n        date: String(new Date().getTime())\n      });\n      setValueInput(\"\");\n    }\n  };\n\n  const senMesssage = () => {\n    arrChat.push({\n      message: valueInput,\n      type: 'user',\n      image: {\n        url: \"\",\n        width: \"\",\n        height: \"\"\n      },\n      date: String(new Date().getTime())\n    });\n    setValueInput(\"\");\n  };\n\n  const renderHeader = () => {\n    return __jsx(CardHeader, {\n      className: classes.hearder,\n      avatar: __jsx(StyledBadge, {\n        overlap: \"circle\",\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right'\n        },\n        variant: online ? \"dot\" : \"standard\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }\n      }, __jsx(Avatar, {\n        src: avatarImage,\n        className: classes.sizeAvatarSmall,\n        alt: \"nhadatmoi.net\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }\n      })),\n      title: nameAdmin,\n      action: __jsx(IconButton, {\n        color: \"inherit\",\n        \"aria-label\": \"settings\",\n        onClick: () => onCloseChat(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }\n      }, __jsx(CloseIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }\n    });\n  };\n\n  const setChangeInput = value => {\n    setValueInput(value);\n  };\n\n  const searchGiphy = async event => {\n    setValueSearchGiphy(event.target.value);\n    let url = `https://api.giphy.com/v1/gifs/search?api_key=UgTMyvovmg74m8fPN6qYiB623nwS1IPc&q=${event.target.value}&limit=20&offset=0&rating=G&lang=vi`;\n    let getData = await axios.get(url, {}).then(function (response) {\n      setGiphyData(response.data.data);\n    });\n  };\n\n  let dataSearch = [];\n\n  if (Array.isArray(giphyData)) {\n    giphyData.map((item, index) => {\n      dataSearch.push({\n        image: {\n          url: item.images.fixed_width.url,\n          height: item.images.fixed_width.height,\n          width: item.images.fixed_width.width\n        }\n      });\n    });\n  }\n\n  ;\n\n  const setItemGiphy = (index, name) => {\n    setOpenEmojiGiphy(!openEmojiGiphy);\n\n    if (name == \"giphyDefault\") {\n      arrChat.push({\n        message: \"\",\n        type: 'user',\n        image: {\n          url: giphyDefault[index].image.url,\n          width: giphyDefault[index].image.width,\n          height: giphyDefault[index].image.height\n        },\n        date: String(new Date().getTime())\n      });\n    } else if (name == \"dataSearch\") {\n      arrChat.push({\n        message: \"\",\n        type: 'user',\n        image: {\n          url: dataSearch[index].image.url,\n          width: dataSearch[index].image.width,\n          height: dataSearch[index].image.height\n        },\n        date: String(new Date().getTime())\n      });\n    }\n  };\n\n  const onClickEmoji = index => {\n    valueInput = valueInput + dataEmoji[index].native;\n    setValueInput(valueInput);\n  };\n\n  const renderEmojiGiphy = () => {\n    return __jsx(\"div\", {\n      className: classes.emojiGiphy,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      className: classes.marinButtonEmojiGiphy,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }\n    }, __jsx(\"button\", {\n      className: classes.buttonEmojiGiphy,\n      onClick: () => setViewEmoji(true),\n      style: {\n        backgroundColor: !viewEmoji ? \"#aaa\" : \"\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }\n    }, \" Bi\\u1EC3u t\\u01B0\\u1EE3ng\"), __jsx(\"button\", {\n      className: classes.buttonEmojiGiphy,\n      onClick: () => setViewEmoji(false),\n      style: {\n        backgroundColor: viewEmoji ? \"#aaa\" : \"\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }\n    }, \" \\u1EA2nh \\u0111\\u1ED9ng\")), !viewEmoji && __jsx(Paper, {\n      component: \"form\",\n      className: classes.rootPaper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 25\n      }\n    }, __jsx(IconButton, {\n      type: \"submit\",\n      className: classes.iconButton,\n      \"aria-label\": \"search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 13\n      }\n    }, __jsx(SearchIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 15\n      }\n    })), __jsx(InputBase, {\n      onChange: e => searchGiphy(e),\n      className: classes.inputBaseGiphy,\n      placeholder: \"T\\xECm ki\\u1EBFm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 13\n      }\n    })), viewEmoji ? __jsx(\"div\", {\n      className: classes.overflowHeightEmoji,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 13\n      }\n    }, dataEmoji.map((item, index) => {\n      return __jsx(\"div\", {\n        onClick: () => onClickEmoji(index),\n        key: index,\n        className: classes.itemEmoji,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 17\n        }\n      }, item.native);\n    })) : __jsx(\"div\", {\n      className: classes.overflowHeightGiphy,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 13\n      }\n    }, valueSearchGiphy ? dataSearch.map((item, index) => {\n      return __jsx(\"div\", {\n        className: classes.dispalyImageGiphy,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 23\n        }\n      }, __jsx(\"img\", {\n        className: classes.imgListGiphy,\n        alt: \"giphy\",\n        src: item.image.url,\n        onClick: () => setItemGiphy(index, \"dataSearch\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 25\n        }\n      }));\n    }) : giphyDefault.map((item, index) => {\n      return __jsx(\"div\", {\n        className: classes.dispalyImageGiphy,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 23\n        }\n      }, __jsx(\"img\", {\n        className: classes.imgListGiphy,\n        alt: \"giphy\",\n        src: item.image.url,\n        onClick: () => setItemGiphy(index, \"giphyDefault\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 25\n        }\n      }));\n    })));\n  };\n\n  const buttonClick = () => {\n    let info = document.getElementById(\"xxxx\");\n    console.log(\"scrollWin\", xxx); // \n\n    console.log(\"scrollWin\");\n    window.scrollTo(0, 500); // let toTop = document.getElementById(\"xxxx\")\n    // console.log(\">>>>>> \", window, \"toTop\", toTop)\n    // $(document).ready(function() {\n    //   $('.abouta').click(function(){\n    //       $('html, body').animate({scrollTop:308}, 'slow');\n    //       return false;\n    //   });\n    // });\n    // ('xxxx').animate({scrollTop: 400 }, 'slow');\n  };\n\n  const renderContentChat = () => {\n    return __jsx(\"div\", {\n      className: classes.overflowHeightEmojiGiphy,\n      style: {\n        height: openEmojiGiphy ? '230px' : '430px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 7\n      }\n    }, __jsx(Typography, {\n      align: \"center\",\n      className: classes.textSizeNewDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }\n    }, moment().format('LLL')), __jsx(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }\n    }), __jsx(\"button\", {\n      onClick: () => buttonClick(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }\n    }, \"Button\"), arrChat.map((item, index) => {\n      let checkNewDate = false;\n      let setViewAvatar = false;\n      let oldDate = index > 0 ? moment(Number(arrChat[index - 1].date)).format('YYYY-MM-DD') : '';\n      let newDate = moment(Number(arrChat[index].date)).format('YYYY-MM-DD');\n\n      if (index > 0 && oldDate !== newDate) {\n        checkNewDate = true;\n      }\n\n      if (item.type === 'admin' && index > 0) {\n        if (index === arrChat.length || arrChat[index - 1].type != arrChat[index].type || oldDate !== newDate) {\n          setViewAvatar = true;\n        }\n      } else if (item.type === 'admin' && index === 0) {\n        setViewAvatar = true;\n      }\n\n      let width = item.image.width;\n      let height = item.image.height;\n      let focus = index + 1 == arrChat.length ? true : false;\n      return __jsx(\"div\", {\n        key: index,\n        style: {\n          display: \"block\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 15\n        }\n      }, checkNewDate && __jsx(Typography, {\n        align: \"center\",\n        className: classes.textSizeNewDate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 35\n        }\n      }, moment(Number(item.date)).format(\"LLL\"), \" \", __jsx(Divider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 61\n        }\n      })), item.type === 'admin' ? __jsx(ThemeProvider, {\n        theme: themeTextfieldAdmin,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 19\n        }\n      }, __jsx(\"div\", {\n        className: classes.viewAvatarChatContent,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 21\n        }\n      }, setViewAvatar && __jsx(Avatar, {\n        className: classes.avatarAdminText,\n        alt: \"nhadatmoi.net\",\n        src: avatarImage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 42\n        }\n      })), __jsx(\"div\", {\n        className: classes.textFieldChatContent,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 21\n        }\n      }, item.image.url ? __jsx(Tooltip, {\n        title: moment(Number(item.date)).fromNow(),\n        placement: \"top\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 27\n        }\n      }, __jsx(\"div\", {\n        className: classes.viewContentImageGiphy,\n        style: {\n          width: `${width}px`,\n          height: `${height}px`,\n          float: \"left\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 29\n        }\n      }, __jsx(\"img\", {\n        className: classes.imgGiphy,\n        alt: \"giphy\",\n        src: item.image.url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 31\n        }\n      }))) : __jsx(Tooltip, {\n        title: moment(Number(item.date)).fromNow(),\n        placement: \"top\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 27\n        }\n      }, __jsx(\"div\", {\n        className: classes.textAdminLeft,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 29\n        }\n      }, __jsx(TextField, {\n        fullWidth: item.message.length > 15 ? true : false,\n        label: \"\" // autoFocus={focus}\n        ,\n        className: classes.textAdmin,\n        value: item.message.trim(),\n        margin: \"dense\",\n        id: \"outlined-basic\",\n        multiline: true,\n        InputProps: {\n          readOnly: true\n        },\n        variant: \"outlined\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 31\n        }\n      }))))) : __jsx(ThemeProvider, {\n        theme: themeTextfieldUser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 19\n        }\n      }, item.image.url ? __jsx(Tooltip, {\n        title: moment(Number(item.date)).fromNow(),\n        placement: \"top\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 25\n        }\n      }, __jsx(\"div\", {\n        className: classes.viewContentImageGiphy,\n        style: {\n          width: `${width}px`,\n          height: `${height}px`,\n          float: \"right\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 27\n        }\n      }, __jsx(\"img\", {\n        className: classes.imgGiphy,\n        alt: \"giphy\",\n        src: item.image.url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 29\n        }\n      }))) : __jsx(Tooltip, {\n        title: moment(Number(item.date)).fromNow(),\n        placement: \"top\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 25\n        }\n      }, __jsx(\"div\", {\n        className: classes.textFieldUserChatContent,\n        style: {\n          textAlign: \"right\"\n        },\n        dir: `${item.message.length < 45 ? 'rtl' : \"\"}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 27\n        }\n      }, __jsx(TextField, {\n        fullWidth: item.message.length > 15 ? true : false,\n        label: \"\" // autoFocus={focus}\n        ,\n        className: classes.textUser,\n        value: item.message.trim(),\n        margin: \"dense\",\n        id: \"outlined-basic\",\n        multiline: true,\n        InputProps: {\n          readOnly: true\n        },\n        variant: \"outlined\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 29\n        }\n      })))), __jsx(\"div\", {\n        style: {\n          clear: \"both\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 17\n        }\n      }));\n    }), __jsx(\"div\", {\n      id: \"xxxx\",\n      ref: xxx,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }\n    }), !internet && __jsx(\"p\", {\n      className: classes.errInternet,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 23\n      }\n    }, \" \", __jsx(\"u\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 59\n      }\n    }, \"Kh\\xF4ng th\\u1EC3 g\\u1EEDi tin nh\\u1EAFn n\\xE0y. Ki\\u1EC3m tra k\\u1EBFt n\\u1ED1i internet v\\xE0 th\\u1EED l\\u1EA1i\")), texting && __jsx(\"p\", {\n      className: classes.texting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 21\n      }\n    }, \"\\u0110ang nh\\u1EADp ...\"));\n  };\n\n  const onClickOpenEmojiGiphy = () => {\n    setOpenEmojiGiphy(!openEmojiGiphy);\n    setViewEmoji(true);\n  }; // https://graph.nhadatmoi.net/private_upload_image_app\n\n\n  const apiBaseURL = \"https://graph.nhadatmoi.net\";\n  const googleLogin = `${apiBaseURL}/auth/google`;\n  const apiGraphQLURL = `${apiBaseURL}/graphql`;\n  const apiUpload = `${apiBaseURL}/private_upload_image_app`;\n\n  const api = (method, url, data) => client.request({\n    data: JSON.stringify(data),\n    headers: {\n      \"Accept\": \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    method,\n    url,\n    withCredentials: true\n  }).then(response => response.data);\n\n  const upLoadImage = files => {\n    const reader = new FileReader();\n    let file = files.target.files[0];\n    reader.readAsDataURL(file);\n\n    reader.onload = () => {\n      setLoading(true);\n      setCompleted(0);\n      api(\"POST\", `${apiUpload}`, {\n        base64image: reader.result,\n        fileName: new Date().getTime() + \"\" + file.name,\n        typeUpload: \"ad_sell_lease\"\n      }).then(function (res) {\n        console.log(\"res\", res); // if(res){\n        //   pustImageChat(res)\n        // }\n        // getFile(res.location, file.name, file.size);\n\n        setLoading(false);\n      }).catch(function (err) {\n        alert('HTTP Error: ' + err.message);\n      });\n    };\n  };\n\n  const pustImageChat = url => {\n    arrChat.push({\n      message: \"\",\n      type: 'user',\n      image: {\n        url: url,\n        width: \"250px\",\n        height: \"200px\"\n      },\n      date: String(new Date().getTime())\n    });\n  };\n\n  const renderInput = () => {\n    return __jsx(Paper, {\n      component: \"form\",\n      className: classes.inputBase,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 7\n      }\n    }, __jsx(ThemeProvider, {\n      theme: theme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 9\n      }\n    }, __jsx(Input, {\n      fullWidth: true,\n      disabled: !internet,\n      margin: \"dense\",\n      id: \"outlined-basic\",\n      autoFocus: true,\n      value: valueInput,\n      multiline: true,\n      onChange: e => setChangeInput(e.target.value),\n      onKeyPress: e => setOnKeyPress(e),\n      onBlur: e => setOnBlur(e),\n      onKeyDown: e => setOnKeyDown(e),\n      placeholder: \"Nh\\u1EADp tin nh\\u1EAFn ...\",\n      autoComplete: \"false\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 11\n      }\n    }), openEmojiGiphy ? __jsx(Tooltip, {\n      title: \"Ch\\xE8n bi\\u1EC3u t\\u01B0\\u1EE3ng\",\n      placement: \"top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 15\n      }\n    }, __jsx(ExpandMoreIcon, {\n      className: classes.sizeIcon,\n      onClick: onClickOpenEmojiGiphy,\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 17\n      }\n    })) : __jsx(Tooltip, {\n      title: \"Ch\\xE8n bi\\u1EC3u t\\u01B0\\u1EE3ng\",\n      placement: \"top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 15\n      }\n    }, __jsx(TagFacesIcon, {\n      className: classes.sizeIcon,\n      onClick: onClickOpenEmojiGiphy,\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 17\n      }\n    })), valueInput ? __jsx(Tooltip, {\n      title: \"G\\u1EEDi tin nh\\u1EAFn\",\n      placement: \"top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 15\n      }\n    }, __jsx(SendIcon, {\n      onClick: senMesssage,\n      className: classes.sizeIcon,\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 17\n      }\n    })) : __jsx(Tooltip, {\n      title: \"Th\\xEAm t\\u1EADp tin\",\n      placement: \"top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 15\n      }\n    }, __jsx(\"div\", {\n      className: classes.inputWrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 17\n      }\n    }, __jsx(AddCircleOutlineIcon, {\n      className: classes.sizeIcon,\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 19\n      }\n    }), __jsx(\"input\", {\n      type: \"file\",\n      className: classes.fileInput,\n      onChange: upLoadImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 19\n      }\n    })))));\n  };\n\n  const viewChat = () => {\n    return __jsx(Popper, {\n      open: open,\n      anchorEl: anchorEl,\n      placement: placement,\n      transition: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 7\n      }\n    }, ({\n      TransitionProps\n    }) => __jsx(Fade, _extends({}, TransitionProps, {\n      timeout: 300,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 11\n      }\n    }), __jsx(Paper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: classes.positionSizeViewChat,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 15\n      }\n    }, renderHeader(), renderContentChat(), openEmojiGiphy && renderEmojiGiphy(), renderInput()))));\n  };\n\n  const handleClick = newPlacement => {\n    setOpen(true);\n    setPlacement(newPlacement);\n  };\n\n  const renderAvatar = () => {\n    return __jsx(\"div\", {\n      className: classes.positionAvatar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 7\n      }\n    }, __jsx(StyledBadge, {\n      overlap: \"circle\",\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'right'\n      },\n      variant: online ? \"dot\" : \"standard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 9\n      }\n    }, __jsx(Avatar, {\n      src: avatarImage,\n      onClick: () => handleClick(\"top-start\"),\n      className: classes.large,\n      alt: \"nhadatmoi.net\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 11\n      }\n    })));\n  };\n\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 5\n    }\n  }, viewChat(), __jsx(Grid, {\n    container: true,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 9\n    }\n  }, !open && renderAvatar())));\n}\n;","map":{"version":3,"sources":["C:/Users/manh nhan/Desktop/Nhadatmoi/components/Chat/Index.tsx"],"names":["React","Popper","ThemeProvider","Grid","InputBase","Fade","Typography","Paper","CardHeader","Avatar","TextField","Divider","Tooltip","Input","IconButton","SearchIcon","AddCircleOutlineIcon","TagFacesIcon","ExpandMoreIcon","CloseIcon","SendIcon","dataEmoji","arrChat","giphyDefault","theme","useStyles","themeTextfieldAdmin","themeTextfieldUser","StyledBadge","create","rtl","axios","apiBaseURL","client","baseURL","timeout","moment","locale","jssPreset","jss","plugins","PositionedPopper","classes","anchorEl","setAnchorEl","useState","open","setOpen","placement","setPlacement","online","setOnline","internet","setInternet","texting","setTexting","giphyData","setGiphyData","openEmojiGiphy","setOpenEmojiGiphy","valueSearchGiphy","setValueSearchGiphy","loading","setLoading","completed","setCompleted","avatarImage","setAvatarImage","nameAdmin","setNameAdmin","valueInput","setValueInput","viewEmoji","setViewEmoji","xxx","useRef","onCloseChat","setOnKeyPress","event","setOnBlur","setOnKeyDown","keyCode","push","message","target","value","type","image","url","width","height","date","String","Date","getTime","senMesssage","renderHeader","hearder","vertical","horizontal","sizeAvatarSmall","setChangeInput","searchGiphy","getData","get","then","response","data","dataSearch","Array","isArray","map","item","index","images","fixed_width","setItemGiphy","name","onClickEmoji","native","renderEmojiGiphy","emojiGiphy","marinButtonEmojiGiphy","buttonEmojiGiphy","backgroundColor","rootPaper","iconButton","e","inputBaseGiphy","overflowHeightEmoji","itemEmoji","overflowHeightGiphy","dispalyImageGiphy","imgListGiphy","buttonClick","info","document","getElementById","console","log","window","scrollTo","renderContentChat","overflowHeightEmojiGiphy","textSizeNewDate","format","checkNewDate","setViewAvatar","oldDate","Number","newDate","length","focus","display","viewAvatarChatContent","avatarAdminText","textFieldChatContent","fromNow","viewContentImageGiphy","float","imgGiphy","textAdminLeft","textAdmin","trim","readOnly","textFieldUserChatContent","textAlign","textUser","clear","errInternet","onClickOpenEmojiGiphy","googleLogin","apiGraphQLURL","apiUpload","api","method","request","JSON","stringify","headers","withCredentials","upLoadImage","files","reader","FileReader","file","readAsDataURL","onload","base64image","result","fileName","typeUpload","res","catch","err","alert","pustImageChat","renderInput","inputBase","sizeIcon","inputWrapper","fileInput","viewChat","TransitionProps","positionSizeViewChat","handleClick","newPlacement","renderAvatar","positionAvatar","large","root"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport Popper, { PopperPlacementType } from '@material-ui/core/Popper';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport { \r\n  Grid, \r\n  InputBase, \r\n  Fade,\r\n  Typography, \r\n  Paper, \r\n  CardHeader,\r\n  CardActionArea, \r\n  CardMedia, \r\n  Avatar, \r\n  TextField,\r\n  Badge, \r\n  Divider, \r\n  Tooltip, \r\n  Input, \r\n  Chip, \r\n  IconButton\r\n} from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport TagFacesIcon from '@material-ui/icons/TagFaces';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport { \r\n  Theme, \r\n  makeStyles, \r\n  withStyles, \r\n  createStyles\r\n} from '@material-ui/core/styles';\r\nimport { \r\n  dataEmoji, \r\n  arrChat, \r\n  giphyDefault, \r\n  theme, \r\n  useStyles,\r\n  themeTextfieldAdmin, \r\n  themeTextfieldUser, \r\n  StyledBadge\r\n} from \"./constant\"\r\nimport { create } from 'jss';\r\nimport rtl from 'jss-rtl';\r\nimport axios, {Method} from \"axios\";\r\nimport {apiBaseURL, apiGraphQLURL} from \"../../constants\";\r\nimport \"cross-fetch/polyfill\";\r\nimport ApolloClient from \"apollo-boost\";\r\nconst client = axios.create({ baseURL: apiBaseURL, timeout: 30000 });\r\nimport moment from \"moment\"\r\nimport 'moment/locale/es'   \r\nmoment.locale('vi')\r\nimport { StylesProvider, jssPreset } from '@material-ui/core/styles';\r\nconst jss = create({ plugins: [...jssPreset().plugins, rtl()] });\r\n\r\nexport default function PositionedPopper() {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(null);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [placement, setPlacement] = React.useState<PopperPlacementType>();\r\n  const [online, setOnline] = React.useState<boolean>(true);\r\n  const [internet, setInternet] = React.useState<boolean>(true);\r\n  const [texting, setTexting] = React.useState<boolean>(false);\r\n  const [giphyData, setGiphyData] = React.useState<any>();\r\n  const [openEmojiGiphy, setOpenEmojiGiphy] = React.useState<boolean>(false);\r\n  const [valueSearchGiphy, setValueSearchGiphy] = React.useState(\"\");\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [completed, setCompleted] = React.useState(1);\r\n  const [avatarImage, setAvatarImage] = React.useState(\"https://image.crisp.chat/avatar/operator/da8d4459-5ea3-4119-bca1-9170f49ee69c/240/?1585999578742&quot\")\r\n  const [nameAdmin, setNameAdmin] = React.useState(\"Nguyễn Thanh Hương\");\r\n  let   [valueInput, setValueInput] = React.useState(\"\");\r\n  const [viewEmoji, setViewEmoji] = React.useState(false);\r\n  const xxx = React.useRef(null);\r\n  const onCloseChat = () => {\r\n    setOpen(false)\r\n  };\r\n\r\n  const setOnKeyPress = (event: any) => {\r\n    // setTexting(true)\r\n  };\r\n\r\n  const setOnBlur = (event: any) => {\r\n    // setTexting(true)\r\n  };\r\n\r\n  const setOnKeyDown = (event: any) => {\r\n    if(event.keyCode == 13){\r\n      arrChat.push({ message: event.target.value, type: 'user', image: { url: \"\", width: \"\", height: \"\" }, date: String(new Date().getTime()) })\r\n      setValueInput(\"\")\r\n    }\r\n  };\r\n\r\n  const senMesssage = () => {\r\n    arrChat.push({ message: valueInput, type: 'user', image: { url: \"\", width: \"\", height: \"\" }, date: String(new Date().getTime()) })\r\n    setValueInput(\"\")\r\n  };\r\n\r\n  const renderHeader = () => {\r\n    return (\r\n      <CardHeader\r\n        className={classes.hearder}\r\n        avatar={\r\n          <StyledBadge\r\n            overlap=\"circle\"\r\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n            variant= { online ? \"dot\" : \"standard\" }\r\n          >\r\n            <Avatar src={avatarImage} className={classes.sizeAvatarSmall} alt=\"nhadatmoi.net\" />\r\n          </StyledBadge>\r\n        }\r\n        title={nameAdmin}\r\n        action={\r\n          <IconButton color='inherit' aria-label=\"settings\" onClick={() => onCloseChat()} >\r\n            <CloseIcon/>\r\n          </IconButton>\r\n        }\r\n      />\r\n    )\r\n  };\r\n\r\n  const setChangeInput = (value: any) => {\r\n    setValueInput(value)\r\n  };\r\n\r\n  const searchGiphy = async (event: any)=>  { \r\n    setValueSearchGiphy(event.target.value)\r\n    let url = `https://api.giphy.com/v1/gifs/search?api_key=UgTMyvovmg74m8fPN6qYiB623nwS1IPc&q=${event.target.value}&limit=20&offset=0&rating=G&lang=vi`\r\n    let getData = await axios.get(url, {})\r\n    .then(function (response) {\r\n      setGiphyData(response.data.data)\r\n    })\r\n  };\r\n\r\n  let dataSearch: any = [];\r\n  if(Array.isArray(giphyData)){\r\n    giphyData.map((item: any, index: number) => {\r\n      dataSearch.push({ \r\n        image: {\r\n          url: item.images.fixed_width.url,\r\n          height: item.images.fixed_width.height,\r\n          width: item.images.fixed_width.width,\r\n        }})\r\n    })\r\n  };\r\n\r\n  const setItemGiphy = (index: number, name: string) => {\r\n    setOpenEmojiGiphy(!openEmojiGiphy)\r\n    if(name == \"giphyDefault\") {\r\n      arrChat.push({ \r\n        message: \"\", \r\n        type: 'user', \r\n        image: {\r\n          url: giphyDefault[index].image.url,\r\n          width: giphyDefault[index].image.width,\r\n          height: giphyDefault[index].image.height,\r\n        },\r\n        date: String(new Date().getTime()) \r\n      })\r\n    } else if ( name == \"dataSearch\") {\r\n      arrChat.push({ \r\n        message: \"\", \r\n        type: 'user', \r\n        image: {\r\n          url: dataSearch[index].image.url,\r\n          width: dataSearch[index].image.width,\r\n          height: dataSearch[index].image.height,\r\n        },\r\n        date: String(new Date().getTime())\r\n      })\r\n    }\r\n  };\r\n\r\n  const onClickEmoji = (index: number) => {\r\n    valueInput = valueInput +  dataEmoji[index].native\r\n    setValueInput(valueInput)\r\n  };\r\n\r\n  const renderEmojiGiphy = () => {\r\n    return (\r\n      <div className={classes.emojiGiphy}>\r\n        <div className={classes.marinButtonEmojiGiphy}>\r\n          <button \r\n            className={classes.buttonEmojiGiphy} \r\n            onClick={() => setViewEmoji(true)} \r\n            style={{ backgroundColor: !viewEmoji ? \"#aaa\" : \"\" }}\r\n          > Biểu tượng</button>\r\n          <button \r\n            className={classes.buttonEmojiGiphy} \r\n            onClick={() => setViewEmoji(false)} \r\n            style={{ backgroundColor: viewEmoji ? \"#aaa\" : \"\" }}\r\n          > Ảnh động</button>\r\n        </div>\r\n        { !viewEmoji && <Paper component=\"form\" className={classes.rootPaper}>\r\n            <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\">\r\n              <SearchIcon />\r\n            </IconButton>\r\n            <InputBase\r\n              onChange={(e) => searchGiphy(e)}\r\n              className={classes.inputBaseGiphy}\r\n              placeholder=\"Tìm kiếm\"\r\n            />\r\n          </Paper>}\r\n        { viewEmoji \r\n          ? <div className={classes.overflowHeightEmoji}>\r\n            {dataEmoji.map((item: any, index: number) => {\r\n              return (\r\n                <div \r\n                  onClick={() => onClickEmoji(index)} \r\n                  key={index} className={classes.itemEmoji}\r\n                >{item.native}</div>\r\n              )\r\n            })}\r\n          </div>\r\n          : <div className={classes.overflowHeightGiphy}>\r\n              {valueSearchGiphy \r\n                ? dataSearch.map((item: any, index: number) => {\r\n                    return (\r\n                      <div className={classes.dispalyImageGiphy} >\r\n                        <img \r\n                          className={classes.imgListGiphy} \r\n                          alt=\"giphy\" \r\n                          src={item.image.url} \r\n                          onClick={() => setItemGiphy(index, \"dataSearch\")} \r\n                        />\r\n                      </div>\r\n                    )\r\n                  })\r\n                : giphyDefault.map((item: any, index: number) => {\r\n                    return (\r\n                      <div className={classes.dispalyImageGiphy} >\r\n                        <img \r\n                          className={classes.imgListGiphy} \r\n                          alt=\"giphy\" \r\n                          src={item.image.url} \r\n                          onClick={() => setItemGiphy(index, \"giphyDefault\")} \r\n                        />\r\n                      </div>\r\n                    )\r\n                  })\r\n              }\r\n            </div>\r\n        }\r\n      </div>\r\n    )\r\n  };\r\n\r\n  const buttonClick = () => {\r\n    let info = document.getElementById(\"xxxx\")\r\n    console.log(\"scrollWin\", xxx)\r\n// \r\n    console.log(\"scrollWin\")\r\n    window.scrollTo(0, 500);\r\n    // let toTop = document.getElementById(\"xxxx\")\r\n    // console.log(\">>>>>> \", window, \"toTop\", toTop)\r\n    // $(document).ready(function() {\r\n    //   $('.abouta').click(function(){\r\n    //       $('html, body').animate({scrollTop:308}, 'slow');\r\n    //       return false;\r\n    //   });\r\n    // });\r\n    // ('xxxx').animate({scrollTop: 400 }, 'slow');\r\n  }\r\n\r\n  const renderContentChat = () => {\r\n\r\n    return (\r\n      <div className={classes.overflowHeightEmojiGiphy} style={{ height: openEmojiGiphy ? '230px' : '430px' }}>\r\n        <Typography align=\"center\" className={classes.textSizeNewDate}>\r\n          {moment().format('LLL')}\r\n        </Typography>\r\n        <Divider />\r\n        <button onClick={() => buttonClick()} >Button</button>\r\n        \r\n          {arrChat.map((item: any, index: number) => {\r\n            let checkNewDate = false\r\n            let setViewAvatar = false\r\n            let oldDate = index > 0 ? moment(Number(arrChat[index - 1].date)).format('YYYY-MM-DD') : ''\r\n            let newDate = moment(Number(arrChat[index].date)).format('YYYY-MM-DD')\r\n            if(index > 0 && (oldDate !== newDate)) { \r\n              checkNewDate = true\r\n            }\r\n            \r\n            if(item.type === 'admin' && index > 0) {\r\n              if((index === arrChat.length) || (arrChat[index - 1].type != arrChat[index].type) || (oldDate !== newDate)){\r\n                setViewAvatar = true\r\n              }\r\n            } else if(item.type === 'admin' && index === 0 ) {\r\n              setViewAvatar = true\r\n            }\r\n            let width = item.image.width \r\n            let height = item.image.height \r\n            let focus = index + 1 == arrChat.length ? true : false\r\n            return (\r\n              <div key={index} style={{ display: \"block\" }}>\r\n                { checkNewDate && <Typography align=\"center\" className={classes.textSizeNewDate}>\r\n                  {moment(Number(item.date)).format(\"LLL\")} <Divider /></Typography>}\r\n                { item.type === 'admin' \r\n                ? <ThemeProvider theme={themeTextfieldAdmin}>\r\n                    <div className={classes.viewAvatarChatContent}>\r\n                      { setViewAvatar && <Avatar className={classes.avatarAdminText} alt=\"nhadatmoi.net\" src={avatarImage} /> }\r\n                    </div>\r\n                    <div className={classes.textFieldChatContent}>\r\n                      {\r\n                        item.image.url \r\n                        ? <Tooltip title={moment(Number(item.date)).fromNow()} placement=\"top\">\r\n                            <div className={classes.viewContentImageGiphy} style={{width: `${width}px`, height: `${height}px`, float: \"left\" }} >\r\n                              <img className={classes.imgGiphy} alt=\"giphy\" src={item.image.url} />\r\n                            </div>\r\n                          </Tooltip>\r\n                        : <Tooltip title={moment(Number(item.date)).fromNow()} placement=\"top\">\r\n                            <div className={classes.textAdminLeft}>\r\n                              <TextField \r\n                                fullWidth={item.message.length > 15 ? true : false}\r\n                                label=\"\"\r\n                                // autoFocus={focus}\r\n                                className={classes.textAdmin}\r\n                                value={item.message.trim()}\r\n                                margin=\"dense\"\r\n                                id=\"outlined-basic\" \r\n                                multiline={true}\r\n                                InputProps={{\r\n                                  readOnly: true\r\n                                }}\r\n                                variant=\"outlined\" \r\n                              />\r\n                            </div>\r\n                          </Tooltip>\r\n                      }\r\n                    </div>\r\n                  </ThemeProvider>\r\n                : <ThemeProvider theme={themeTextfieldUser}>\r\n                    {\r\n                      item.image.url\r\n                      ? <Tooltip title={moment(Number(item.date)).fromNow()} placement=\"top\">\r\n                          <div className={classes.viewContentImageGiphy} style={{ width: `${width}px`, height: `${height}px`, float: \"right\" }} >\r\n                            <img className={classes.imgGiphy} alt=\"giphy\" src={item.image.url} />\r\n                          </div>\r\n                        </Tooltip>\r\n                      : <Tooltip title={moment(Number(item.date)).fromNow()} placement=\"top\">\r\n                          <div \r\n                            className={classes.textFieldUserChatContent}\r\n                            style={{ textAlign: \"right\" }}\r\n                            dir={`${item.message.length < 45 ? 'rtl' : \"\"}`}\r\n                          >\r\n                            <TextField \r\n                              fullWidth={item.message.length > 15 ? true : false}\r\n                              label=\"\"\r\n                              // autoFocus={focus}\r\n                              className={classes.textUser}\r\n                              value={item.message.trim()}\r\n                              margin=\"dense\"\r\n                              id=\"outlined-basic\" \r\n                              multiline={true}\r\n                              InputProps={{\r\n                                readOnly: true\r\n                              }}\r\n                              variant=\"outlined\" \r\n                            />\r\n                          </div>\r\n                        </Tooltip>\r\n                    }\r\n                  </ThemeProvider>\r\n                }\r\n                <div style={{ clear: \"both\" }} />\r\n              </div>\r\n            )\r\n          })}\r\n        <div id=\"xxxx\" ref={xxx}></div>\r\n        {/* {openEmojiGiphy && renderEmojiGiphy()} */}\r\n        {!internet && <p className={classes.errInternet}> <u>Không thể gửi tin nhắn này. Kiểm tra kết nối internet và thử lại</u></p> }\r\n        {texting && <p className={classes.texting}>Đang nhập ...</p>}\r\n      </div>\r\n    )\r\n  };\r\n\r\n  const onClickOpenEmojiGiphy = () => {\r\n    setOpenEmojiGiphy(!openEmojiGiphy) \r\n    setViewEmoji(true)\r\n  };\r\n  // https://graph.nhadatmoi.net/private_upload_image_app\r\n  const apiBaseURL = \"https://graph.nhadatmoi.net\";\r\n  const googleLogin = `${apiBaseURL}/auth/google`;\r\n  const apiGraphQLURL = `${apiBaseURL}/graphql`;\r\n  const apiUpload = `${apiBaseURL}/private_upload_image_app`;\r\n  const api = (method: Method, url: string, data?: any) => client\r\n    .request(\r\n    { data: JSON.stringify(data), \r\n      headers: { \"Accept\": \"application/json\",\"Content-Type\": \"application/json\",\r\n    }, method, url,  withCredentials: true,\r\n  }).then((response: any) => response.data);\r\n\r\n  const upLoadImage = (files: any) => {\r\n    const reader = new FileReader;\r\n    let file = files.target.files[0]\r\n    reader.readAsDataURL(file)\r\n    reader.onload = () => {\r\n      setLoading(true);\r\n      setCompleted(0);\r\n      api(\"POST\", `${apiUpload}`, { \r\n        base64image: reader.result, \r\n        fileName: (new Date()).getTime() + \"\" + file.name,\r\n        typeUpload: \"ad_sell_lease\",\r\n      })\r\n      .then(function (res) {\r\n        console.log(\"res\", res)\r\n        // if(res){\r\n        //   pustImageChat(res)\r\n        // }\r\n        // getFile(res.location, file.name, file.size);\r\n        setLoading(false);\r\n      })\r\n      .catch(function (err) {\r\n        alert('HTTP Error: ' + err.message);\r\n      });\r\n    };\r\n  };\r\n\r\n  const pustImageChat = (url: string) => {\r\n    arrChat.push({ \r\n      message:\"\", \r\n      type: 'user', \r\n      image: { url: url, width: \"250px\", height: \"200px\" }, \r\n      date: String(new Date().getTime()) })\r\n  }\r\n\r\n  const renderInput = () => {\r\n    return (\r\n      <Paper component=\"form\" className={classes.inputBase}>\r\n        <ThemeProvider theme={theme}>\r\n          <Input \r\n            fullWidth\r\n            disabled={!internet}\r\n            margin=\"dense\"\r\n            id=\"outlined-basic\" \r\n            autoFocus={true}\r\n            value={valueInput}\r\n            multiline={true}\r\n            onChange={(e) => setChangeInput(e.target.value)}\r\n            onKeyPress={(e) => setOnKeyPress(e)}\r\n            onBlur={(e) => setOnBlur(e)}\r\n            onKeyDown={(e) => setOnKeyDown(e)}\r\n            placeholder=\"Nhập tin nhắn ...\"\r\n            autoComplete=\"false\"\r\n          />\r\n          { openEmojiGiphy \r\n            ? <Tooltip title=\"Chèn biểu tượng\" placement=\"top\"> \r\n                <ExpandMoreIcon className={classes.sizeIcon} onClick={onClickOpenEmojiGiphy} color=\"primary\" />\r\n              </Tooltip> \r\n            : <Tooltip title=\"Chèn biểu tượng\" placement=\"top\"> \r\n                <TagFacesIcon className={classes.sizeIcon} onClick={onClickOpenEmojiGiphy} color=\"primary\" />\r\n              </Tooltip>\r\n          }\r\n          { valueInput\r\n            ? <Tooltip title=\"Gửi tin nhắn\" placement=\"top\">\r\n                <SendIcon onClick={senMesssage} className={classes.sizeIcon} color=\"primary\" />\r\n              </Tooltip>\r\n            : <Tooltip title=\"Thêm tập tin\" placement=\"top\">\r\n                <div className={classes.inputWrapper}> \r\n                  <AddCircleOutlineIcon className={classes.sizeIcon} color=\"primary\"/> \r\n                  <input type=\"file\" className={classes.fileInput}  onChange={upLoadImage} /> \r\n                </div>\r\n              </Tooltip>\r\n          }\r\n        </ThemeProvider>\r\n      </Paper>\r\n    )\r\n  };\r\n \r\n  const viewChat = () => {\r\n    return (\r\n      <Popper open={open} anchorEl={anchorEl} placement={placement} transition >\r\n        {({ TransitionProps }) => (\r\n          <Fade {...TransitionProps} timeout={300}>\r\n            <Paper>\r\n              <div className={classes.positionSizeViewChat}> \r\n                {renderHeader()}\r\n                {renderContentChat()}\r\n                {openEmojiGiphy && renderEmojiGiphy()}\r\n                {renderInput()}\r\n              </div>\r\n            </Paper>\r\n          </Fade>\r\n        )}\r\n      </Popper>\r\n    )\r\n  };\r\n\r\n  const handleClick = (newPlacement: PopperPlacementType) => {\r\n    setOpen(true)\r\n    setPlacement(newPlacement);\r\n  };\r\n\r\n  const renderAvatar = () => {\r\n    return (\r\n      <div className={classes.positionAvatar}>\r\n        <StyledBadge\r\n          overlap=\"circle\"\r\n          anchorOrigin={{ vertical: 'bottom', horizontal: 'right', }}\r\n          variant= { online ? \"dot\" : \"standard\" }\r\n        >\r\n          <Avatar src={avatarImage} onClick={() => handleClick(\"top-start\")} className={classes.large} alt=\"nhadatmoi.net\"/>\r\n        </StyledBadge>\r\n      </div>\r\n    )\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {viewChat()}\r\n      <Grid container justify=\"center\">\r\n        <Grid item>\r\n          { !open && renderAvatar()}\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
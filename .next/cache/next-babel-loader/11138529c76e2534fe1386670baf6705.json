{"ast":null,"code":"import _Array$isArray from \"@babel/runtime-corejs2/core-js/array/is-array\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\manh nhan\\\\Desktop\\\\new_ndm\\\\components\\\\Channel\\\\Header.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport { headerStyles } from './Constant';\nimport { FOLLOW_CHANNEL, UN_FOLLOWED_CHANNEL } from \"../../graphql/channel/mutation\";\nimport { apolloClient } from \"../../utils\";\nimport _ from \"lodash\";\n;\n;\n\nvar Header = function Header(props) {\n  var classes = headerStyles();\n  var avatar = \"https://sf.co.ua/14/07/wallpaper-117233.jpg\"; // \"https://news.mogi.vn/wp-content/uploads/2018/08/anh-nha-dep-13.jpg\"\n\n  var follow_value = _.get(props, \"channel.follow_value\", \"\");\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      followValue = _React$useState2[0],\n      setFollowValue = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      checkFollow = _React$useState4[0],\n      setCheckFollow = _React$useState4[1];\n\n  var addFollow = function addFollow() {\n    var follow;\n    return _regeneratorRuntime.async(function addFollow$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setFollowValue(follow_value + 1);\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(apolloClient.mutate({\n              mutation: FOLLOW_CHANNEL,\n              variables: {\n                \"input\": {\n                  \"id\": _.get(props, \"channel.id\", \"\")\n                }\n              }\n            }).then(function (response) {\n              setCheckFollow(true);\n            }));\n\n          case 3:\n            follow = _context.sent;\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, _Promise);\n  };\n\n  var unFollowed = function unFollowed() {\n    var follow;\n    return _regeneratorRuntime.async(function unFollowed$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            setFollowValue(follow_value - 1);\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(apolloClient.mutate({\n              mutation: UN_FOLLOWED_CHANNEL,\n              variables: {\n                \"input\": {\n                  \"id\": _.get(props, \"channel.id\", \"\")\n                }\n              }\n            }).then(function (response) {\n              setCheckFollow(false);\n            }));\n\n          case 3:\n            follow = _context2.sent;\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, _Promise);\n  };\n\n  var follow = followValue || follow_value;\n\n  var followers = _.get(props, \"channel.followers\", \"\");\n\n  var check = false;\n\n  if (_Array$isArray(followers)) {\n    followers.map(function (item) {\n      if (props.userLogin == item.user_id) {\n        check = true;\n      }\n    });\n  }\n\n  ;\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.cover,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: classes.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: {\n      backgroundColor: \"gray\",\n      width: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.channelAvatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    // className={classes.titleChannel}\n    style: {\n      \"float\": \"left\",\n      backgroundColor: \"orange\",\n      width: \"calc(100%-100px)\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    style: {\n      clear: \"both\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: classes.followStyle,\n    style: {\n      \"float\": \"right\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, checkFollow || check ? __jsx(Button, {\n    onClick: function onClick() {\n      return unFollowed();\n    },\n    fullWidth: true,\n    color: \"primary\",\n    variant: \"contained\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"B\\u1ECF theo d\\xF5i\") : __jsx(Button, {\n    onClick: function onClick() {\n      return addFollow();\n    },\n    fullWidth: true,\n    color: \"primary\",\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"Theo d\\xF5i\"))));\n};\n\nexport default Header;","map":{"version":3,"sources":["C:/Users/manh nhan/Desktop/new_ndm/components/Channel/Header.tsx"],"names":["React","Button","headerStyles","FOLLOW_CHANNEL","UN_FOLLOWED_CHANNEL","apolloClient","_","Header","props","classes","avatar","follow_value","get","useState","followValue","setFollowValue","checkFollow","setCheckFollow","addFollow","mutate","mutation","variables","then","response","follow","unFollowed","followers","check","map","item","userLogin","user_id","cover","container","backgroundColor","width","channelAvatar","clear","followStyle"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Avatar, Typography, Button, Grid } from \"@material-ui/core\";\r\nimport { headerStyles } from './Constant';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport { FOLLOW_CHANNEL, UN_FOLLOWED_CHANNEL } from \"../../graphql/channel/mutation\";\r\nimport { apolloClient } from \"../../utils\";\r\nimport _ from \"lodash\";\r\n\r\ninterface HeaderProps {\r\n  userLogin: string\r\n  slug: string\r\n  channel: ChannelProp\r\n};\r\n\r\ninterface ChannelProp {\r\n  id: string\r\n  name: string\r\n  slug: string\r\n  avatar: string\r\n  cover: string\r\n  description: string\r\n  nation: string\r\n  language: string\r\n  telephone: string\r\n  address: string\r\n  facebook: string\r\n  youtube: string\r\n  website: string\r\n  official_status: number\r\n  follow_value: number\r\n  followers: {\r\n    user_id: string\r\n  }[]\r\n  created_at: string\r\n};\r\n\r\nconst Header: React.FunctionComponent<HeaderProps> = (props: HeaderProps) => {\r\n  const classes = headerStyles();\r\n  const avatar = \"https://sf.co.ua/14/07/wallpaper-117233.jpg\"; // \"https://news.mogi.vn/wp-content/uploads/2018/08/anh-nha-dep-13.jpg\"\r\n  let follow_value = _.get(props, \"channel.follow_value\", \"\");\r\n  let [followValue, setFollowValue] = React.useState(0);\r\n  const [checkFollow, setCheckFollow] = React.useState(false);\r\n\r\n  const addFollow = async ()=> { \r\n    setFollowValue(follow_value + 1 )\r\n    let follow = await apolloClient.mutate({ mutation: FOLLOW_CHANNEL, variables: {\r\n      \"input\": {\r\n        \"id\": _.get(props, \"channel.id\", \"\")\r\n      }\r\n    }})\r\n    .then((response: any) => {\r\n      setCheckFollow(true)\r\n    });\r\n  };\r\n\r\n  const unFollowed = async ()=> { \r\n    setFollowValue(follow_value - 1)\r\n    let follow = await apolloClient.mutate({ mutation: UN_FOLLOWED_CHANNEL, variables: {\r\n      \"input\": {\r\n        \"id\": _.get(props, \"channel.id\", \"\")\r\n      }\r\n    }})\r\n    .then((response: any) => {\r\n      setCheckFollow(false)\r\n    });\r\n  };\r\n\r\n  let follow = followValue || follow_value;\r\n  let followers = _.get(props, \"channel.followers\", \"\");\r\n  let check = false;\r\n  if(Array.isArray(followers)) {\r\n    followers.map((item: any) => {\r\n      if(props.userLogin == item.user_id) {\r\n        check = true\r\n      }\r\n    })\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.cover}></div>\r\n      <div className={classes.container}>\r\n        {/* <Grid container spacing={0} alignContent=\"center\"> */}\r\n          {/* <Grid item xs={12} sm={8} > */}\r\n            <div style={{ backgroundColor: \"gray\", width: \"100%\"}}>\r\n              <div className={classes.channelAvatar}>\r\n                {/* <Avatar src={avatar} className={classes.sideAvatar} alt=\"ndm\"/>  */}\r\n              </div>\r\n              <div \r\n              // className={classes.titleChannel}\r\n                style={{\r\n                  float: \"left\", \r\n                  backgroundColor: \"orange\",\r\n                  width: \"calc(100%-100px)\",\r\n                }}\r\n              >\r\n                  {/* {_.get(props, \"channel.name\", \"\")} kenh giai tri kenh giai tri kenh giai tri kenh giai tri kenh giai tri kenh giai tri kenh giai tri kenh giai tri */}\r\n                {/* <Typography className={classes.contentTitle} > \r\n                  { _.get(props, \"channel.official_status\", \"\") ? <CheckCircleIcon className={classes.checkOfficial}/> : \"\"} \r\n                </Typography> */}\r\n                {/* <Typography component=\"h3\" variant=\"body2\" className={classes.follow}>\r\n                  {follow > 0 ? follow : 0} lượt theo dõi \r\n                </Typography> */}\r\n              </div>\r\n              <div style={{ clear: \"both\" }}></div>\r\n            </div>\r\n          {/* </Grid> */}\r\n          {/* <Grid item xs={12} sm={4}> */}\r\n            <div className={classes.followStyle} style={{ float: \"right\" }}>\r\n              {checkFollow || check\r\n                ? <Button onClick={() => unFollowed()} fullWidth color=\"primary\" variant=\"contained\">Bỏ theo dõi</Button>\r\n                : <Button onClick={() => addFollow()} fullWidth color=\"primary\" variant=\"outlined\">Theo dõi</Button>  \r\n              }\r\n            </div>\r\n          {/* </Grid> */}\r\n        {/* </Grid> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n"]},"metadata":{},"sourceType":"module"}
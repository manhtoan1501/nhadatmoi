{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\manh nhan\\\\Desktop\\\\Nhadatmoi\\\\components\\\\Channel\\\\Index.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Agency from \"./Tabs/Agency\";\nimport Rating from \"./Tabs/Rating\";\nimport Introduce from \"./Tabs/Introduce\";\nimport AdSellLeases from \"./Tabs/AdSellLeases\";\nimport Paper from \"@material-ui/core/Paper\";\nimport StyledCheckbox from \"./StyledCheckbox\";\nimport { Tabs, Tab, Grid, Button, Typography, Avatar, Hidden } from \"@material-ui/core\";\nimport { relatedChannel, indexStyles } from \"./Constant\";\n\nvar Index = function Index(props) {\n  var classes = indexStyles();\n\n  var _React$useState = React.useState(\"introduce\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      itemTab = _React$useState2[0],\n      setItemTab = _React$useState2[1];\n\n  var _React$useState3 = React.useState(0),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      count = _React$useState4[0],\n      setCount = _React$useState4[1];\n\n  var tabs = [{\n    value: \"ad\",\n    label: \"Tin rao\"\n  }, {\n    value: \"introduce\",\n    label: \"Giới thiệu\"\n  }, {\n    value: \"agency\",\n    label: \"Môi giới\"\n  }, {\n    value: \"rating\",\n    label: \"Đánh giá\"\n  }];\n\n  var handleTabsChange = function handleTabsChange(event, value) {\n    setItemTab(value);\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.paddingIndex,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, __jsx(Paper, {\n    square: true,\n    className: classes.rootTabs,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, __jsx(Hidden, {\n    mdUp: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, __jsx(Tabs, {\n    onChange: handleTabsChange,\n    scrollButtons: \"auto\",\n    indicatorColor: \"primary\",\n    textColor: \"primary\",\n    variant: \"fullWidth\",\n    value: itemTab,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, tabs.map(function (tab) {\n    return __jsx(Tab, {\n      key: tab.value,\n      label: tab.label,\n      value: tab.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    });\n  }))), __jsx(Hidden, {\n    smDown: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, __jsx(Tabs, {\n    onChange: handleTabsChange,\n    scrollButtons: \"auto\",\n    indicatorColor: \"primary\",\n    textColor: \"primary\",\n    variant: \"standard\",\n    value: itemTab,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, tabs.map(function (tab) {\n    return __jsx(Tab, {\n      key: tab.value,\n      label: tab.label,\n      value: tab.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    });\n  }))))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 9,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"body_container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, itemTab === \"ad\" && __jsx(AdSellLeases, {\n    userId: props.infoUser.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }), itemTab === \"introduce\" && __jsx(Introduce, {\n    infoUser: props.infoUser,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }), itemTab === \"agency\" && __jsx(Agency, {\n    infoUser: props.infoUser,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }), itemTab === \"rating\" && __jsx(Rating, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    className: classes.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, \"K\\xEAnh li\\xEAn quan\"), relatedChannel.map(function (item, index) {\n    if (index < count * 6 + 6) {\n      return __jsx(\"div\", {\n        className: classes.contentChannel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, __jsx(Grid, {\n        key: index,\n        container: true,\n        spacing: 4,\n        alignItems: \"center\",\n        justify: \"center\",\n        className: classes.padingContent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, __jsx(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: classes.avatarLeft,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, __jsx(Avatar, {\n        src: item.image,\n        className: classes.large,\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      })), __jsx(\"div\", {\n        className: classes.contentFollow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, __jsx(Typography, {\n        className: classes.titleFollow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, item.title), __jsx(Typography, {\n        className: classes.follow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, item.numberfollow, \" L\\u01B0\\u1EE3t theo d\\xF5i\"), item.follow && __jsx(StyledCheckbox, {\n        defaultChecked: item.follow,\n        className: classes.checkbox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      })), __jsx(\"div\", {\n        className: classes.clearFloat,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }))));\n    } else {\n      return \"\";\n    }\n  }), __jsx(Grid, {\n    container: true,\n    spacing: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, __jsx(Button, {\n    onClick: function onClick() {\n      return setCount(count + 1);\n    },\n    fullWidth: true,\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, \"Xem th\\xEAm\")))))));\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/manh nhan/Desktop/Nhadatmoi/components/Channel/Index.tsx"],"names":["React","Agency","Rating","Introduce","AdSellLeases","Paper","StyledCheckbox","Tabs","Tab","Grid","Button","Typography","Avatar","Hidden","relatedChannel","indexStyles","Index","props","classes","useState","itemTab","setItemTab","count","setCount","tabs","value","label","handleTabsChange","event","paddingIndex","rootTabs","map","tab","infoUser","id","title","item","index","contentChannel","padingContent","avatarLeft","image","large","contentFollow","titleFollow","follow","numberfollow","checkbox","clearFloat","button"],"mappings":"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","sourcesContent":["import React, { FunctionComponent } from \"react\";\r\nimport Agency from \"./Tabs/Agency\";\r\nimport Rating from \"./Tabs/Rating\";\r\nimport Introduce from \"./Tabs/Introduce\";\r\nimport AdSellLeases from \"./Tabs/AdSellLeases\";\r\nimport Header from \"./Header\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport StyledCheckbox from \"./StyledCheckbox\";\r\nimport _ from 'lodash'\r\nimport {\r\n  Tabs,\r\n  Tab,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  Typography,\r\n  Avatar,\r\n  Hidden,\r\n} from \"@material-ui/core\";\r\nimport { relatedChannel, indexStyles } from \"./Constant\";\r\n\r\ninterface IndexProps {\r\n  comments: CommentsProp[];\r\n  infoUser: UserProps;\r\n  ratings: RatingsProp[];\r\n}\r\n\r\ninterface CommentsProp {\r\n  node: {\r\n    id: string;\r\n    ad_sell_lease_id: string;\r\n    content: string;\r\n    user_id: string;\r\n    media: string;\r\n    user: {\r\n      first_name: string;\r\n      last_name: string;\r\n      avatar: string;\r\n    };\r\n    like_number: string;\r\n    created_at: string;\r\n  };\r\n}\r\n\r\ninterface UserProps {\r\n  address: string;\r\n  avatar: string;\r\n  birthday: string;\r\n  email: string;\r\n  facebook: string;\r\n  first_name: string;\r\n  gender: string;\r\n  google_id: string;\r\n  intro: string;\r\n  id: string;\r\n  last_name: string;\r\n  phone: string;\r\n  mobile: string;\r\n  skype: string;\r\n  username: string;\r\n  viber: string;\r\n  website: string;\r\n  zalo: string;\r\n  created_at: string;\r\n  updated_at: string;\r\n}\r\n\r\ninterface RatingsProp {\r\n  node: {\r\n    id: string;\r\n    ad_sell_lease_id: string;\r\n    content: string;\r\n    user_id: string;\r\n    media: string;\r\n    user: {\r\n      first_name: string;\r\n      last_name: string;\r\n      avatar: string;\r\n    };\r\n    rate: number;\r\n    like_number: string;\r\n    created_at: string;\r\n  };\r\n}\r\n\r\nconst Index: FunctionComponent<IndexProps> = (props: any) => {\r\n  const classes = indexStyles();\r\n  const [itemTab, setItemTab] = React.useState(\"introduce\");\r\n  const [count, setCount] = React.useState<number>(0);\r\n  const tabs = [\r\n    { value: \"ad\", label: \"Tin rao\" },\r\n    { value: \"introduce\", label: \"Giới thiệu\" },\r\n    { value: \"agency\", label: \"Môi giới\" },\r\n    { value: \"rating\", label: \"Đánh giá\" },\r\n  ];\r\n\r\n  const handleTabsChange = (event: any, value: any) => {\r\n    setItemTab(value);\r\n  };\r\n  return (\r\n    <div>\r\n      {/* <Header /> */}\r\n      <div className={classes.paddingIndex}>\r\n        <Grid container spacing={4}>\r\n          <Grid item xs={12} md={12}>\r\n            <Paper square className={classes.rootTabs}>\r\n              <Hidden mdUp>\r\n                <Tabs\r\n                  onChange={handleTabsChange}\r\n                  scrollButtons=\"auto\"\r\n                  indicatorColor=\"primary\"\r\n                  textColor=\"primary\"\r\n                  variant={\"fullWidth\"}\r\n                  value={itemTab}\r\n                >\r\n                  {tabs.map((tab) => <Tab key={tab.value} label={tab.label} value={tab.value}/> )}\r\n                </Tabs>\r\n              </Hidden>\r\n              <Hidden smDown>\r\n                <Tabs\r\n                  onChange={handleTabsChange}\r\n                  scrollButtons=\"auto\"\r\n                  indicatorColor=\"primary\"\r\n                  textColor=\"primary\"\r\n                  variant={ \"standard\" }\r\n                  value={itemTab}\r\n                >\r\n                  {tabs.map((tab) => <Tab key={tab.value} label={tab.label} value={tab.value}/> )}\r\n                </Tabs>\r\n              </Hidden>\r\n            </Paper>\r\n            {/* <Divider className={classes.divider} /> */}\r\n          </Grid>\r\n          <Grid item xs={12} md={9}>\r\n            <div className=\"body_container\">\r\n              {itemTab === \"ad\" && <AdSellLeases userId={props.infoUser.id} />}\r\n              {itemTab === \"introduce\" && <Introduce infoUser={props.infoUser} />}\r\n              {itemTab === \"agency\" && <Agency infoUser={props.infoUser} />}\r\n              {itemTab === \"rating\" && <Rating />}\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={12} md={3}>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Kênh liên quan\r\n            </Typography>\r\n            {relatedChannel.map((item: any, index: number) => {\r\n              if (index < count * 6 + 6) {\r\n                return (\r\n                  <div className={classes.contentChannel} >\r\n                    <Grid key={index} container spacing={4} alignItems=\"center\" justify=\"center\" className={classes.padingContent}>\r\n                      <Grid item xs={12}>\r\n                        <div className={classes.avatarLeft}>\r\n                          <Avatar src={item.image} className={classes.large} alt=\"\" />\r\n                        </div>\r\n                        <div className={classes.contentFollow} >\r\n                          <Typography className={classes.titleFollow}>\r\n                            {item.title}\r\n                          </Typography>\r\n                          <Typography className={classes.follow}>{item.numberfollow} Lượt theo dõi</Typography>\r\n                          {item.follow && <StyledCheckbox defaultChecked={item.follow} className={classes.checkbox} /> }\r\n                        </div>\r\n                        <div className={classes.clearFloat}></div>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </div>\r\n                );\r\n              } else {\r\n                return \"\";\r\n              }\r\n            })}\r\n            <Grid container spacing={4}>\r\n              <Grid item xs={12}>\r\n                <Button onClick={() => setCount(count + 1)} fullWidth className={classes.button}>\r\n                  Xem thêm\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}
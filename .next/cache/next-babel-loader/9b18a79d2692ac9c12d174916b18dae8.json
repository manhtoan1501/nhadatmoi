{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Array$isArray from \"@babel/runtime-corejs2/core-js/array/is-array\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\manh nhan\\\\Desktop\\\\new_ndm\\\\components\\\\Channel\\\\Tabs\\\\AdSellLeases.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Grid, Button, Typography } from \"@material-ui/core\";\nimport GridAdSellLeases from \"../GridAdSellLeases\";\nimport { apolloClient } from \"../../../utils\";\nimport { GET_AD_SELL_LEASE_CHANNEL_BY_ID } from \"../../../graphql/channel/queries\";\nimport { adStyles } from \"../Constant\";\nimport LoadingCircle from \"../LoadingCircle\";\n;\n\nvar Ad = function Ad(props) {\n  var classes = adStyles();\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      list_ad = _React$useState2[0],\n      setListAd = _React$useState2[1];\n\n  var _React$useState3 = React.useState(1),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      page = _React$useState4[0],\n      setPage = _React$useState4[1];\n\n  var _React$useState5 = React.useState(true),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      loading = _React$useState6[0],\n      setLoading = _React$useState6[1];\n\n  var getAdChannel = function getAdChannel() {\n    var id, list_ad;\n    return _regeneratorRuntime.async(function getAdChannel$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            id = props.channelId;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(apolloClient.query({\n              query: GET_AD_SELL_LEASE_CHANNEL_BY_ID,\n              variables: {\n                \"id\": id,\n                \"limit\": 18,\n                \"page\": 1\n              }\n            }).then(function (response) {\n              return response.data.channelAdSellLeases.edges;\n            }));\n\n          case 3:\n            list_ad = _context.sent;\n\n            if (_Array$isArray(list_ad)) {\n              setListAd(list_ad);\n              setLoading(false);\n            }\n\n            ;\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, _Promise);\n  };\n\n  React.useEffect(function () {\n    getAdChannel();\n  });\n\n  var renderLoading = function renderLoading(show) {\n    if (show) {\n      return __jsx(\"div\", {\n        style: {\n          height: \"calc(100vh - 112px)\",\n          position: \"relative\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, __jsx(LoadingCircle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }));\n    }\n\n    return \"\";\n  };\n\n  var renderAdSellLeaseChannel = function renderAdSellLeaseChannel() {\n    return __jsx(Grid, {\n      container: true,\n      spacing: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, __jsx(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, renderLoading(loading), _Array$isArray(list_ad) && __jsx(GridAdSellLeases, {\n      grid: {\n        xl: 3,\n        lg: 3,\n        md: 4,\n        sm: 6,\n        xs: 12\n      },\n      gridData: list_ad,\n      className: \"grid__list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })), __jsx(Grid, {\n      item: true,\n      xs: 12,\n      className: \"pagination__block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, page !== 1 ? __jsx(Button, {\n      className: \"pagination__block__prev\",\n      onClick: function onClick() {\n        return setPage(page - 1);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, __jsx(\"svg\", {\n      viewBox: \"0 0 448 512\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, __jsx(\"path\", {\n      d: \"M152.485 396.284l19.626-19.626c4.753-4.753 4.675-12.484-.173-17.14L91.22 282H436c6.627 0 12-5.373 12-12v-28c0-6.627-5.373-12-12-12H91.22l80.717-77.518c4.849-4.656 4.927-12.387.173-17.14l-19.626-19.626c-4.686-4.686-12.284-4.686-16.971 0L3.716 247.515c-4.686 4.686-4.686 12.284 0 16.971l131.799 131.799c4.686 4.685 12.284 4.685 16.97-.001z\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    })), \"Trang tr\\u01B0\\u1EDBc\") : \"\", list_ad.length > 12 ? __jsx(Button, {\n      className: \"pagination__block__next\",\n      onClick: function onClick() {\n        return setPage(page + 1);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Trang sau\", __jsx(\"svg\", {\n      viewBox: \"0 0 448 512\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, __jsx(\"path\", {\n      d: \"M295.515 115.716l-19.626 19.626c-4.753 4.753-4.675 12.484.173 17.14L356.78 230H12c-6.627 0-12 5.373-12 12v28c0 6.627 5.373 12 12 12h344.78l-80.717 77.518c-4.849 4.656-4.927 12.387-.173 17.14l19.626 19.626c4.686 4.686 12.284 4.686 16.971 0l131.799-131.799c4.686-4.686 4.686-12.284 0-16.971L312.485 115.716c-4.686-4.686-12.284-4.686-16.97 0z\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }))) : \"\"));\n  };\n\n  return __jsx(\"div\", {\n    className: classes.rootAd,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, __jsx(Typography, {\n    variant: \"h5\",\n    className: classes.titleAd,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"Danh s\\xE1ch tin rao\"), renderAdSellLeaseChannel());\n};\n\nexport default Ad;","map":{"version":3,"sources":["C:/Users/manh nhan/Desktop/new_ndm/components/Channel/Tabs/AdSellLeases.tsx"],"names":["React","Grid","Button","Typography","GridAdSellLeases","apolloClient","GET_AD_SELL_LEASE_CHANNEL_BY_ID","adStyles","LoadingCircle","Ad","props","classes","useState","list_ad","setListAd","page","setPage","loading","setLoading","getAdChannel","id","channelId","query","variables","then","response","data","channelAdSellLeases","edges","useEffect","renderLoading","show","height","position","renderAdSellLeaseChannel","xl","lg","md","sm","xs","length","rootAd","titleAd"],"mappings":"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","sourcesContent":["import React, { Suspense } from \"react\";\r\nimport { Grid, Button, Typography } from \"@material-ui/core\";\r\nimport GridAdSellLeases from \"../GridAdSellLeases\";\r\nimport { apolloClient } from \"../../../utils\";\r\nimport { GET_AD_SELL_LEASE_CHANNEL_BY_ID } from \"../../../graphql/channel/queries\";\r\nimport { listAd, adStyles } from \"../Constant\";\r\nimport LoadingCircle from \"../LoadingCircle\"\r\ninterface ListAdProps {\r\n  channelId: string\r\n};\r\n\r\ninterface GridProps {\r\n  node: {\r\n    id: string\r\n    title: string,\r\n    slug: string,\r\n    created_at: string,\r\n    updated_at: string,\r\n    view_count: number,\r\n    like_status: boolean,\r\n    price: {\r\n      unit: string\r\n      value: string\r\n    },\r\n    avatar: {\r\n      alt_text: string\r\n      src: string\r\n      description: string\r\n    },\r\n    address: {\r\n      text: string,\r\n      ward: string,\r\n      district: string,\r\n      city: string\r\n    },\r\n    area: {\r\n      unit: string\r\n      value: string\r\n    }\r\n  }\r\n}\r\n\r\n\r\nconst Ad: React.FunctionComponent<any> = (props: ListAdProps) => {\r\n  const classes = adStyles();\r\n  const [list_ad, setListAd] = React.useState<GridProps[]>([]);\r\n  const [page, setPage] = React.useState(1);\r\n  const [loading, setLoading] = React.useState(true)\r\n  const getAdChannel = async ()=> { \r\n    let id = props.channelId\r\n    let list_ad = await apolloClient.query({ query: GET_AD_SELL_LEASE_CHANNEL_BY_ID, variables: {\r\n      \"id\": id,\r\n      \"limit\": 18,\r\n      \"page\": 1,\r\n    }})\r\n    .then((response: any) => {\r\n      return response.data.channelAdSellLeases.edges;\r\n    });\r\n    if(Array.isArray(list_ad)){\r\n      setListAd(list_ad);\r\n      setLoading(false)\r\n    };\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    getAdChannel();\r\n  });\r\n\r\n  const renderLoading = (show: boolean) => {\r\n    if(show){\r\n      return (\r\n        <div style={{ height: \"calc(100vh - 112px)\", position: \"relative\" }}>\r\n          <LoadingCircle />\r\n        </div>\r\n      )\r\n    }\r\n    return \"\"\r\n  }\r\n\r\n\r\n  const renderAdSellLeaseChannel = () => {\r\n    return (\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={12}>\r\n        {renderLoading(loading)}\r\n          {Array.isArray(list_ad) && \r\n            <GridAdSellLeases\r\n              grid={{ xl: 3, lg: 3, md: 4, sm: 6, xs: 12 }} \r\n              gridData={list_ad}\r\n              className=\"grid__list\"\r\n            />\r\n          }\r\n          \r\n        </Grid>\r\n        <Grid item xs={12} className=\"pagination__block\">\r\n          {page !== 1 \r\n          ? <Button className=\"pagination__block__prev\" onClick={() => setPage(page - 1)}>\r\n              <svg viewBox=\"0 0 448 512\">\r\n                <path d=\"M152.485 396.284l19.626-19.626c4.753-4.753 4.675-12.484-.173-17.14L91.22 282H436c6.627 0 12-5.373 12-12v-28c0-6.627-5.373-12-12-12H91.22l80.717-77.518c4.849-4.656 4.927-12.387.173-17.14l-19.626-19.626c-4.686-4.686-12.284-4.686-16.971 0L3.716 247.515c-4.686 4.686-4.686 12.284 0 16.971l131.799 131.799c4.686 4.685 12.284 4.685 16.97-.001z\" />\r\n              </svg>\r\n              Trang trước\r\n            </Button>\r\n          : \"\" }\r\n          {list_ad.length > 12 \r\n          ? <Button className=\"pagination__block__next\" onClick={() => setPage(page + 1)}>\r\n              Trang sau\r\n              <svg viewBox=\"0 0 448 512\">\r\n                <path d=\"M295.515 115.716l-19.626 19.626c-4.753 4.753-4.675 12.484.173 17.14L356.78 230H12c-6.627 0-12 5.373-12 12v28c0 6.627 5.373 12 12 12h344.78l-80.717 77.518c-4.849 4.656-4.927 12.387-.173 17.14l19.626 19.626c4.686 4.686 12.284 4.686 16.971 0l131.799-131.799c4.686-4.686 4.686-12.284 0-16.971L312.485 115.716c-4.686-4.686-12.284-4.686-16.97 0z\" />\r\n              </svg>\r\n            </Button>\r\n          : \"\" } \r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={classes.rootAd}>\r\n      <Typography variant=\"h5\" className={classes.titleAd}>Danh sách tin rao</Typography>\r\n        {renderAdSellLeaseChannel()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Ad;\r\n"]},"metadata":{},"sourceType":"module"}
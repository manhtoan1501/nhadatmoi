{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Info from './Tabs/Info';\nimport Reviews from \"./Tabs/Reviews\";\nimport Ad from \"./Tabs/Ad\";\nimport Header from \"./Header\";\nimport Paper from '@material-ui/core/Paper';\nimport { Tabs, Tab, Divider, colors } from '@material-ui/core';\nimport { apolloClient } from \"../../utils\";\nimport { GET_USER_BY_ID } from \"../../graphql/user/queries/index\";\nimport Page from \"./Page\";\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  rootTabs: {\n    flexGrow: 1\n  },\n  inner: {\n    width: theme.breakpoints.values.lg,\n    maxWidth: '100%',\n    margin: '0 auto',\n    padding: theme.spacing(3)\n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  content: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nconst Index = props => {\n  const classes = useStyles();\n  const [itemTab, setItemTab] = React.useState(\"ad\");\n  const [user, setUser] = React.useState();\n  const tabs = [{\n    value: 'info',\n    label: 'Thông tin'\n  }, {\n    value: 'ad',\n    label: 'Tin rao'\n  }, {\n    value: 'reviews',\n    label: \"Đánh giá\"\n  }];\n  useEffect(() => {\n    if (props.userId) {\n      apolloClient.query({\n        query: GET_USER_BY_ID,\n        variables: {\n          \"id\": props.userId\n        }\n      }).then(response => {\n        setUser(response.data.user);\n      });\n    }\n  }, []);\n\n  const handleTabsChange = (event, value) => {\n    setItemTab(value);\n  };\n\n  return __jsx(Page, {\n    title: \"Profile\"\n  }, __jsx(Header, {\n    user: props.infoUser\n  }), __jsx(\"div\", {\n    className: classes.inner\n  }, __jsx(Paper, {\n    square: true,\n    className: classes.rootTabs\n  }, __jsx(Tabs, {\n    onChange: handleTabsChange,\n    scrollButtons: \"auto\",\n    indicatorColor: \"primary\",\n    textColor: \"primary\",\n    value: itemTab\n  }, tabs.map(tab => __jsx(Tab, {\n    key: tab.value,\n    label: tab.label,\n    value: tab.value\n  })))), __jsx(Divider, {\n    className: classes.divider\n  }), __jsx(\"div\", {\n    className: classes.content\n  }, itemTab === 'info' && __jsx(Info, {\n    user: props.infoUser\n  }), itemTab === 'ad' && __jsx(Ad, {\n    userId: props.userId\n  }), itemTab === 'reviews' && __jsx(Reviews, {\n    listComment: props.listComment,\n    userId: props.userId\n  }))));\n};\n\nexport default Index;","map":null,"metadata":{},"sourceType":"module"}
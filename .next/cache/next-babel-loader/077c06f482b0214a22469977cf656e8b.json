{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Card, Grid, Typography, CardHeader, Avatar, Button } from '@material-ui/core';\nimport { apolloClient } from \"../../../utils\";\nimport { GET_AD_SELL_LEASE_COMMENTS } from \"../../../graphql/comments/queries\";\nimport moment from \"moment\";\nimport 'moment/locale/es'; // without this line it didn't work\n\nmoment.locale('vi');\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {},\n    iconUp: {\n      fontSize: \"10\"\n    },\n    subheader: {\n      flexWrap: 'wrap',\n      alignItems: 'center'\n    },\n    stars: {\n      display: 'flex',\n      alignItems: 'center',\n      marginRight: theme.spacing(1)\n    },\n    content: {\n      padding: 0,\n      '&:last-child': {\n        paddingBottom: 0\n      }\n    },\n    message: {\n      padding: theme.spacing(2, 3)\n    },\n    details: {\n      padding: theme.spacing(1, 3)\n    }\n  };\n});\n\nvar Project = function Project(props) {\n  var className = props.className;\n  var classes = useStyles();\n\n  var _React$useState = React.useState(2),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      page = _React$useState2[0],\n      setPage = _React$useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      moreComment = _React$useState4[0],\n      setMoveComment = _React$useState4[1];\n\n  var _React$useState5 = React.useState([]),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      listMore = _React$useState6[0],\n      setListMore = _React$useState6[1];\n\n  var setViewPage = function setViewPage() {\n    var filterObject = {\n      id: props.userId\n    };\n    var dataFilter = JSON.stringify(filterObject);\n    apolloClient.query({\n      query: GET_AD_SELL_LEASE_COMMENTS,\n      variables: {\n        \"page\": page,\n        \"limit\": 10,\n        \"filter\": dataFilter\n      }\n    }).then(function (response) {\n      setListMore(listMore.concat(response.data.adSellLeaseComments.edges));\n    });\n    setPage(page + 1);\n  };\n\n  console.log(\"listMore\", listMore);\n  return __jsx(\"div\", {\n    className: clsx(classes.root, className)\n  }, props.listComment.map(function (item, index) {\n    return __jsx(Grid, {\n      container: true,\n      spacing: 4,\n      key: index\n    }, __jsx(Grid, {\n      item: true,\n      xs: 12\n    }, __jsx(Card, null, __jsx(CardHeader, {\n      avatar: __jsx(Avatar, {\n        alt: \"Reviewer\",\n        src: item.node.user.avatar\n      }, item.node.user.first_name, \"  \", item.node.user.last_name),\n      disableTypography: true,\n      subheader: __jsx(\"div\", {\n        className: classes.subheader\n      }, __jsx(Typography, {\n        variant: \"body2\"\n      }, \"B\\xECnh lu\\u1EADn b\\u1EDFi\", ' ', \" \", __jsx(\"b\", null, item.node.user.first_name, \" \", item.node.user.last_name, \" \")), __jsx(Typography, {\n        variant: \"body2\"\n      }, moment(Number(item.node.created_at)).fromNow()))\n    }), __jsx(\"div\", {\n      className: classes.message\n    }, __jsx(Typography, {\n      variant: \"subtitle2\"\n    }, item.node.content)))));\n  }), listMore.map(function (item, index) {\n    return __jsx(Grid, {\n      container: true,\n      spacing: 4,\n      key: index\n    }, __jsx(Grid, {\n      item: true,\n      xs: 12\n    }, __jsx(Card, null, __jsx(CardHeader, {\n      avatar: __jsx(Avatar, {\n        alt: \"Reviewer\",\n        src: item.node.user.avatar\n      }, item.node.user.first_name, \"  \", item.node.user.last_name),\n      disableTypography: true,\n      subheader: __jsx(\"div\", {\n        className: classes.subheader\n      }, __jsx(Typography, {\n        variant: \"body2\"\n      }, \"B\\xECnh lu\\u1EADn b\\u1EDFi\", ' ', \" \", __jsx(\"b\", null, item.node.user.first_name, \" \", item.node.user.last_name, \" \")), __jsx(Typography, {\n        variant: \"body2\"\n      }, moment(Number(item.node.created_at)).fromNow()))\n    }), __jsx(\"div\", {\n      className: classes.message\n    }, __jsx(Typography, {\n      variant: \"subtitle2\"\n    }, item.node.content)))));\n  }), __jsx(Grid, {\n    container: true,\n    spacing: 4\n  }, __jsx(Grid, {\n    item: true\n  }, props.listComment.length >= 15 ? __jsx(Button, {\n    onClick: setViewPage\n  }, \"Hi\\u1EC3n th\\u1ECB th\\xEAm\") : \"\")));\n};\n\nexport default Project;","map":null,"metadata":{},"sourceType":"module"}
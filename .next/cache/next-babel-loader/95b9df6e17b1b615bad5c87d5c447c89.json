{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\manh nhan\\\\Desktop\\\\Nhadatmoi\\\\pages\\\\nguoi-dung\\\\[id].tsx\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Layout from '../../components/Layout/Layout';\nimport \"../../assets/scss/style.scss\";\nimport { mainURL } from \"../../constants\";\n\n// @ts-ignore\nvar UserPage = function UserPage(props) {\n  return __jsx(Layout, _extends({\n    title: \"metaTitle\",\n    description: \"metaDescription\"\n  }, props, {\n    image: \"https://www.w3schools.com/w3css/img_lights.jpg\",\n    canonical: mainURL + '/nguoi-dung/' + \"ra-hang-dot-cuoi-toa-nha-discovery-complex-so-302-cau-giay-gia-chi-tu-31trm2-1585625310485\",\n    path: 'nguoi-dung',\n    dataCompare: {},\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }));\n}; // @ts-ignore\n\n\nUserPage.getInitialProps = function _callee(props) {\n  var userId;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          console.log(\"props\", props);\n          userId = props.query.id; // let filterObject =  {\n          //   slug: adSlug,\n          // };\n          // let dataFilter = JSON.stringify(filterObject);\n          // let listComment = await apolloClient.query({query: GET_AD_SELL_LEASE_COMMENTS, variables: {\n          //     \"page\": 1,\n          //     \"limit\": 100,\n          //     \"filter\": dataFilter\n          //   }}).then(response => {\n          //   return response;\n          // });\n          // let userId = await apolloClient.query({query: GET_USER_ID_BY_SLUG_AD, variables: {\n          //   \"slug\": adSlug\n          // }}).then(response => { \n          //   return response.data.adSellLease.user\n          // })\n          // let infoUser =  await apolloClient.query({query: GET_USER_BY_ID, variables: {\n          //   \"id\": userId\n          //   }}).then(response => { \n          //     return response.data.user\n          // })\n\n          return _context.abrupt(\"return\", {// listComment: listComment,\n            // slug: adSlug,\n            // userId: userId,\n            // infoUser: infoUser\n          });\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default UserPage;","map":{"version":3,"sources":["C:/Users/manh nhan/Desktop/Nhadatmoi/pages/nguoi-dung/[id].tsx"],"names":["React","Layout","mainURL","UserPage","props","getInitialProps","console","log","userId","query","id"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAA+B,OAA/B;AAEA,OAAOC,MAAP,MAAmB,gCAAnB;AAKA,OAAO,8BAAP;AACA,SAASC,OAAT,QAAwB,iBAAxB;;AAuDA;AACA,IAAMC,QAAkC,GAAG,SAArCA,QAAqC,CAACC,KAAD,EAA2B;AACpE,SACE,MAAC,MAAD;AACE,IAAA,KAAK,EAAE,WADT;AAEE,IAAA,WAAW,EAAE;AAFf,KAGMA,KAHN;AAIE,IAAA,KAAK,EAAE,gDAJT;AAKE,IAAA,SAAS,EAAGF,OAAO,GAAG,cAAV,GAA2B,4FALzC;AAME,IAAA,IAAI,EAAE,YANR;AAOE,IAAA,WAAW,EAAE,EAPf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAiBD,CAlBD,C,CAoBA;;;AACAC,QAAQ,CAACE,eAAT,GAA2B,iBAAeD,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACzBE,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBH,KAApB;AACII,UAAAA,MAFqB,GAEZJ,KAAK,CAACK,KAAN,CAAYC,EAFA,EAGzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAvByB,2CAwBlB,CACL;AACA;AACA;AACA;AAJK,WAxBkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA3B;;AAgCA,eAAeP,QAAf","sourcesContent":["import React, {useEffect} from 'react';\r\nimport {NextPage} from \"next\";\r\nimport Layout from '../../components/Layout/Layout';\r\nimport {apolloClient} from \"../../utils\";\r\nimport {GET_AD_SELL_LEASE_COMMENTS} from \"../../graphql/comments/queries\";\r\nimport {GET_USER_ID_BY_SLUG_AD, GET_NAME_AD_SELL_LEASES_BY_SLUG} from \"../../graphql/ad_sell_leases/queries\"\r\nimport {GET_USER_BY_ID } from \"../../graphql/user/queries/index\"\r\nimport \"../../assets/scss/style.scss\";\r\nimport { mainURL } from \"../../constants\";\r\nimport User from \"../../components/User/Index\"\r\n \r\ninterface ProjectDetails {\r\n  url?: { query: { id: string }},\r\n  listComment?: { data: { adSellLeaseComments: { edges: ListCommentProps[]}} },\r\n  slug?: string,\r\n  userId?: string\r\n  infoUser?: UserProps\r\n}\r\n\r\ninterface QueryProp { \r\n  query: { id: string } \r\n}\r\n\r\ninterface UserProps {\r\n  address: String\r\n  avatar: String\r\n  birthday: String\r\n  email: String\r\n  facebook: String\r\n  first_name: String\r\n  gender: String\r\n  google_id: String\r\n  intro: String\r\n  id: String\r\n  last_name: String\r\n  phone: String\r\n  mobile: String\r\n  skype: String\r\n  username: String\r\n  viber: String\r\n  website: String\r\n  zalo: String\r\n  created_at: String\r\n  updated_at: String\r\n}\r\n\r\ninterface ListCommentProps {\r\n  node: {\r\n    id: string,\r\n    ad_sell_lease_id: string,\r\n    content: string,\r\n    user_id: string,\r\n    media: string,\r\n    user: {\r\n      first_name: string,\r\n      last_name: string,\r\n      avatar: string,\r\n    }\r\n    like_number: string,\r\n    created_at: string,\r\n  },\r\n}\r\n\r\n// @ts-ignore\r\nconst UserPage: NextPage<ProjectDetails> = (props: ProjectDetails) => {\r\n  return (\r\n    <Layout\r\n      title={\"metaTitle\"}\r\n      description={\"metaDescription\"}\r\n      {...props}\r\n      image={\"https://www.w3schools.com/w3css/img_lights.jpg\"}\r\n      canonical={ mainURL + '/nguoi-dung/' + \"ra-hang-dot-cuoi-toa-nha-discovery-complex-so-302-cau-giay-gia-chi-tu-31trm2-1585625310485\"}\r\n      path={'nguoi-dung'}\r\n      dataCompare={{}}\r\n    >\r\n      {/* <User \r\n        listComment= {props.listComment.data.adSellLeaseComments.edges}\r\n        userId={props.userId}\r\n        infoUser={props.infoUser}\r\n      /> */}\r\n    </Layout>\r\n  );\r\n};\r\n\r\n// @ts-ignore\r\nUserPage.getInitialProps = async function(props: QueryProp) {\r\n  console.log(\"props\",props)\r\n  let userId = props.query.id;\r\n  // let filterObject =  {\r\n  //   slug: adSlug,\r\n  // };\r\n  // let dataFilter = JSON.stringify(filterObject);\r\n  // let listComment = await apolloClient.query({query: GET_AD_SELL_LEASE_COMMENTS, variables: {\r\n  //     \"page\": 1,\r\n  //     \"limit\": 100,\r\n  //     \"filter\": dataFilter\r\n  //   }}).then(response => {\r\n  //   return response;\r\n  // });\r\n  // let userId = await apolloClient.query({query: GET_USER_ID_BY_SLUG_AD, variables: {\r\n  //   \"slug\": adSlug\r\n  // }}).then(response => { \r\n  //   return response.data.adSellLease.user\r\n  // })\r\n  // let infoUser =  await apolloClient.query({query: GET_USER_BY_ID, variables: {\r\n  //   \"id\": userId\r\n  //   }}).then(response => { \r\n  //     return response.data.user\r\n  // })\r\n  return {\r\n    // listComment: listComment,\r\n    // slug: adSlug,\r\n    // userId: userId,\r\n    // infoUser: infoUser\r\n  };\r\n};\r\n\r\nexport default UserPage;\r\n"]},"metadata":{},"sourceType":"module"}
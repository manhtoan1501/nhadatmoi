{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manh nhan\\\\Desktop\\\\new_ndm\\\\components\\\\Channel\\\\Index.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Header from \"./Header\";\nimport { indexStyles } from \"./Constant\";\n\nconst Index = props => {\n  const classes = indexStyles();\n  const [itemTab, setItemTab] = React.useState(\"introduce\");\n  const [count, setCount] = React.useState(0);\n  const tabs = [{\n    value: \"ad\",\n    label: \"Tin rao\"\n  }, {\n    value: \"introduce\",\n    label: \"Giới thiệu\"\n  }, {\n    value: \"agency\",\n    label: \"Môi giới\"\n  }, {\n    value: \"rating\",\n    label: \"Đánh giá\"\n  }];\n\n  const handleTabsChange = (event, value) => {\n    setItemTab(value);\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, __jsx(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }));\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/manh nhan/Desktop/new_ndm/components/Channel/Index.tsx"],"names":["React","Header","indexStyles","Index","props","classes","itemTab","setItemTab","useState","count","setCount","tabs","value","label","handleTabsChange","event"],"mappings":";;AAAA,OAAOA,KAAP,MAAyC,OAAzC;AAKA,OAAOC,MAAP,MAAmB,UAAnB;AAeA,SAAyBC,WAAzB,QAA4C,YAA5C;;AAkEA,MAAMC,KAAoC,GAAIC,KAAD,IAAgB;AAC3D,QAAMC,OAAO,GAAGH,WAAW,EAA3B;AACA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBP,KAAK,CAACQ,QAAN,CAAe,WAAf,CAA9B;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,KAAK,CAACQ,QAAN,CAAuB,CAAvB,CAA1B;AACA,QAAMG,IAAI,GAAG,CACX;AAAEC,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,KAAK,EAAE;AAAtB,GADW,EAEX;AAAED,IAAAA,KAAK,EAAE,WAAT;AAAsBC,IAAAA,KAAK,EAAE;AAA7B,GAFW,EAGX;AAAED,IAAAA,KAAK,EAAE,QAAT;AAAmBC,IAAAA,KAAK,EAAE;AAA1B,GAHW,EAIX;AAAED,IAAAA,KAAK,EAAE,QAAT;AAAmBC,IAAAA,KAAK,EAAE;AAA1B,GAJW,CAAb;;AAOA,QAAMC,gBAAgB,GAAG,CAACC,KAAD,EAAaH,KAAb,KAA4B;AACnDL,IAAAA,UAAU,CAACK,KAAD,CAAV;AACD,GAFD;;AAGA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAqFD,CAnGD;;AAqGA,eAAeT,KAAf","sourcesContent":["import React, { FunctionComponent } from \"react\";\r\nimport Agency from \"./Tabs/Agency\";\r\nimport Rating from \"./Tabs/Rating\";\r\nimport Introduce from \"./Tabs/Introduce\";\r\nimport AdSellLeases from \"./Tabs/AdSellLeases\";\r\nimport Header from \"./Header\";\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport StyledCheckbox from \"./StyledCheckbox\";\r\nimport _ from 'lodash'\r\nimport {\r\n  Tabs,\r\n  Tab,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  Typography,\r\n  Avatar,\r\n  Hidden,\r\n} from \"@material-ui/core\";\r\nimport { relatedChannel, indexStyles } from \"./Constant\";\r\n\r\ninterface IndexProps {\r\n  comments: CommentsProp[];\r\n  infoUser: UserProps;\r\n  ratings: RatingsProp[];\r\n}\r\n\r\ninterface CommentsProp {\r\n  node: {\r\n    id: string;\r\n    ad_sell_lease_id: string;\r\n    content: string;\r\n    user_id: string;\r\n    media: string;\r\n    user: {\r\n      first_name: string;\r\n      last_name: string;\r\n      avatar: string;\r\n    };\r\n    like_number: string;\r\n    created_at: string;\r\n  };\r\n}\r\n\r\ninterface UserProps {\r\n  address: string;\r\n  avatar: string;\r\n  birthday: string;\r\n  email: string;\r\n  facebook: string;\r\n  first_name: string;\r\n  gender: string;\r\n  google_id: string;\r\n  intro: string;\r\n  id: string;\r\n  last_name: string;\r\n  phone: string;\r\n  mobile: string;\r\n  skype: string;\r\n  username: string;\r\n  viber: string;\r\n  website: string;\r\n  zalo: string;\r\n  created_at: string;\r\n  updated_at: string;\r\n}\r\n\r\ninterface RatingsProp {\r\n  node: {\r\n    id: string;\r\n    ad_sell_lease_id: string;\r\n    content: string;\r\n    user_id: string;\r\n    media: string;\r\n    user: {\r\n      first_name: string;\r\n      last_name: string;\r\n      avatar: string;\r\n    };\r\n    rate: number;\r\n    like_number: string;\r\n    created_at: string;\r\n  };\r\n}\r\n\r\nconst Index: FunctionComponent<IndexProps> = (props: any) => {\r\n  const classes = indexStyles();\r\n  const [itemTab, setItemTab] = React.useState(\"introduce\");\r\n  const [count, setCount] = React.useState<number>(0);\r\n  const tabs = [\r\n    { value: \"ad\", label: \"Tin rao\" },\r\n    { value: \"introduce\", label: \"Giới thiệu\" },\r\n    { value: \"agency\", label: \"Môi giới\" },\r\n    { value: \"rating\", label: \"Đánh giá\" },\r\n  ];\r\n\r\n  const handleTabsChange = (event: any, value: any) => {\r\n    setItemTab(value);\r\n  };\r\n  return (\r\n    <div>\r\n      <Header />\r\n      {/* <div className={classes.paddingIndex}>\r\n        <Grid container spacing={0}>\r\n          <Grid item xs={12} md={12}>\r\n            <Paper square className={classes.rootTabs}>\r\n              <Hidden mdUp>\r\n                <Tabs\r\n                  onChange={handleTabsChange}\r\n                  scrollButtons=\"auto\"\r\n                  indicatorColor=\"primary\"\r\n                  textColor=\"primary\"\r\n                  variant={\"fullWidth\"}\r\n                  value={itemTab}\r\n                >\r\n                  {tabs.map((tab) => <Tab key={tab.value} label={tab.label} value={tab.value}/> )}\r\n                </Tabs>\r\n              </Hidden>\r\n              <Hidden smDown>\r\n                <Tabs\r\n                  onChange={handleTabsChange}\r\n                  scrollButtons=\"auto\"\r\n                  indicatorColor=\"primary\"\r\n                  textColor=\"primary\"\r\n                  variant={ \"standard\" }\r\n                  value={itemTab}\r\n                >\r\n                  {tabs.map((tab) => <Tab key={tab.value} label={tab.label} value={tab.value}/> )}\r\n                </Tabs>\r\n              </Hidden>\r\n            </Paper>\r\n            <Divider className={classes.divider} />\r\n          </Grid>\r\n          <Grid item xs={12} md={9}>\r\n            <div className=\"body_container\">\r\n              {itemTab === \"ad\" && <AdSellLeases userId={props.infoUser.id} />}\r\n              {itemTab === \"introduce\" && <Introduce infoUser={props.infoUser} />}\r\n              {itemTab === \"agency\" && <Agency infoUser={props.infoUser} />}\r\n              {itemTab === \"rating\" && <Rating />}\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={12} md={3}>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Kênh liên quan\r\n            </Typography>\r\n            {relatedChannel.map((item: any, index: number) => {\r\n              if (index < count * 6 + 6) {\r\n                return (\r\n                  <div className={classes.contentChannel} >\r\n                    <Grid key={index} container spacing={4} alignItems=\"center\" justify=\"center\" className={classes.padingContent}>\r\n                      <Grid item xs={12}>\r\n                        <div className={classes.avatarLeft}>\r\n                          <Avatar src={item.image} className={classes.large} alt=\"\" />\r\n                        </div>\r\n                        <div className={classes.contentFollow} >\r\n                          <Typography className={classes.titleFollow}>\r\n                            {item.title}\r\n                          </Typography>\r\n                          <Typography className={classes.follow}>\r\n                            {item.numberfollow}Lượt theo dõi \r\n                          </Typography>\r\n                          {item.follow && <CheckCircleIcon style={{ color: \"#045EA8\", fontSize: \"15px\", float: \"right\" }} />}\r\n                        </div>\r\n                        <div className={classes.clearFloat}></div>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </div>\r\n                );\r\n              } else {\r\n                return \"\";\r\n              }\r\n            })}\r\n            <Grid container spacing={4}>\r\n              <Grid item xs={12}>\r\n                <Button onClick={() => setCount(count + 1)} fullWidth className={classes.button}>\r\n                  Xem thêm\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}
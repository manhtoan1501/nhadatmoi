{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manh nhan\\\\Desktop\\\\new_ndm\\\\components\\\\Channel\\\\Header.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Avatar, Typography, Button, Grid } from \"@material-ui/core\";\nimport { headerStyles } from './Constant';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport { FOLLOW_CHANNEL, UNFOLLOW_CHANNEL } from \"../../graphql/channel/mutation\";\nimport { GET_CHANNEL_BY_SLUG } from \"../../graphql/channel/queries\";\nimport { apolloClient } from \"../../utils\";\nimport _ from \"lodash\";\n\nconst Header = props => {\n  const classes = headerStyles();\n  const avatar = \"https://sf.co.ua/14/07/wallpaper-117233.jpg\"; // \"https://news.mogi.vn/wp-content/uploads/2018/08/anh-nha-dep-13.jpg\"\n\n  const [reload, setReload] = React.useState(false);\n  const [channel, setChannel] = React.useState();\n\n  const getChannel = async () => {\n    let res = await apolloClient.query({\n      query: GET_CHANNEL_BY_SLUG,\n      variables: {\n        \"slug\": props.slug\n      }\n    }).then(response => {\n      let channel = _.get(response, \"data.channel\", {});\n\n      setChannel(channel);\n    });\n  };\n\n  const follow = async () => {\n    let id = props.channelId;\n    let follow = await apolloClient.mutate({\n      mutation: FOLLOW_CHANNEL,\n      variables: {\n        \"input\": {\n          \"id\": id\n        }\n      }\n    }).then(response => {\n      getChannel();\n    });\n  };\n\n  const unfollow = async () => {\n    let id = props.channelId;\n    let follow = await apolloClient.mutate({\n      mutation: UNFOLLOW_CHANNEL,\n      variables: {\n        \"input\": {\n          \"id\": id\n        }\n      }\n    }).then(response => {\n      getChannel();\n    });\n  }; // console.log(\"channel\", props.channel)\n\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.cover,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: classes.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, __jsx(Avatar, {\n    alt: \"nhadatmoi.net\",\n    className: classes.avatar,\n    src: avatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), __jsx(Grid, {\n    container: true,\n    spacing: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    xs: 8,\n    sm: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.titleFollow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, __jsx(Typography, {\n    component: \"h2\",\n    gutterBottom: true,\n    className: classes.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Nh\\xE0 \\u0110\\u1EA5t M\\u1EDBi \", __jsx(CheckCircleIcon, {\n    style: {\n      color: \"#045EA8\",\n      fontSize: \"15px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  })), __jsx(Typography, {\n    component: \"h3\",\n    variant: \"body2\",\n    className: classes.follow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, _.get(props, \"channel.follow_value\", \"0\"), \" l\\u01B0\\u1EE3t theo d\\xF5i\"))), __jsx(Grid, {\n    item: true,\n    xs: 4,\n    sm: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.followStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, __jsx(Button, {\n    color: \"primary\",\n    onClick: () => follow(),\n    fullWidth: true,\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"Theo d\\xF5i\")), __jsx(\"div\", {\n    className: classes.followStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, __jsx(Button, {\n    color: \"primary\",\n    onClick: () => unfollow(),\n    fullWidth: true,\n    variant: \"contained\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"B\\u1ECF theo d\\xF5i\"))))));\n};\n\nexport default Header;","map":{"version":3,"sources":["C:/Users/manh nhan/Desktop/new_ndm/components/Channel/Header.tsx"],"names":["React","Avatar","Typography","Button","Grid","headerStyles","CheckCircleIcon","FOLLOW_CHANNEL","UNFOLLOW_CHANNEL","GET_CHANNEL_BY_SLUG","apolloClient","_","Header","props","classes","avatar","reload","setReload","useState","channel","setChannel","getChannel","res","query","variables","slug","then","response","get","follow","id","channelId","mutate","mutation","unfollow","cover","container","titleFollow","title","color","fontSize","followStyle"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,UAAjB,EAA6BC,MAA7B,EAAqCC,IAArC,QAAiD,mBAAjD;AAEA,SAASC,YAAT,QAA6B,YAA7B;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,SAASC,cAAT,EAAyBC,gBAAzB,QAAiD,gCAAjD;AACA,SAASC,mBAAT,QAAoC,+BAApC;AACA,SAASC,YAAT,QAA6B,aAA7B;AACA,OAAOC,CAAP,MAAc,QAAd;;AA+BA,MAAMC,MAA6C,GAAIC,KAAD,IAAyB;AAC7E,QAAMC,OAAO,GAAGT,YAAY,EAA5B;AACA,QAAMU,MAAM,GAAG,6CAAf,CAF6E,CAEhB;;AAC7D,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBjB,KAAK,CAACkB,QAAN,CAAe,KAAf,CAA5B;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBpB,KAAK,CAACkB,QAAN,EAA9B;;AAEA,QAAMG,UAAU,GAAG,YAAY;AAC7B,QAAIC,GAAG,GAAG,MAAMZ,YAAY,CAACa,KAAb,CAAmB;AAAEA,MAAAA,KAAK,EAAEd,mBAAT;AAA8Be,MAAAA,SAAS,EAAE;AAC1E,gBAAQX,KAAK,CAACY;AAD4D;AAAzC,KAAnB,EAEVC,IAFU,CAEJC,QAAD,IAAmB;AAC1B,UAAIR,OAAO,GAAGR,CAAC,CAACiB,GAAF,CAAMD,QAAN,EAAgB,cAAhB,EAAgC,EAAhC,CAAd;;AACAP,MAAAA,UAAU,CAACD,OAAD,CAAV;AACH,KALe,CAAhB;AAMD,GAPD;;AASA,QAAMU,MAAM,GAAG,YAAW;AACxB,QAAIC,EAAE,GAAGjB,KAAK,CAACkB,SAAf;AACA,QAAIF,MAAM,GAAG,MAAMnB,YAAY,CAACsB,MAAb,CAAoB;AAAEC,MAAAA,QAAQ,EAAE1B,cAAZ;AAA4BiB,MAAAA,SAAS,EAAE;AAC5E,iBAAS;AACP,gBAAMM;AADC;AADmE;AAAvC,KAApB,EAKlBJ,IALkB,CAKZC,QAAD,IAAmB;AACvBN,MAAAA,UAAU;AACX,KAPkB,CAAnB;AAQD,GAVD;;AAYA,QAAMa,QAAQ,GAAG,YAAW;AAC1B,QAAIJ,EAAE,GAAGjB,KAAK,CAACkB,SAAf;AACA,QAAIF,MAAM,GAAG,MAAMnB,YAAY,CAACsB,MAAb,CAAoB;AAAEC,MAAAA,QAAQ,EAAEzB,gBAAZ;AAA8BgB,MAAAA,SAAS,EAAE;AAC9E,iBAAS;AACP,gBAAMM;AADC;AADqE;AAAzC,KAApB,EAKlBJ,IALkB,CAKZC,QAAD,IAAmB;AACvBN,MAAAA,UAAU;AACX,KAPkB,CAAnB;AAQD,GAVD,CA3B6E,CAuC7E;;;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEP,OAAO,CAACqB,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAK,IAAA,SAAS,EAAErB,OAAO,CAACsB,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,GAAG,EAAC,eADN;AAEE,IAAA,SAAS,EAAEtB,OAAO,CAACC,MAFrB;AAGE,IAAA,GAAG,EAAEA,MAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME,MAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAkB,IAAA,EAAE,EAAE,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAED,OAAO,CAACuB,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,SAAS,EAAC,IAAtB;AAA2B,IAAA,YAAY,MAAvC;AAAwC,IAAA,SAAS,EAAEvB,OAAO,CAACwB,KAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCACc,MAAC,eAAD;AAAiB,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE,SAAT;AAAoBC,MAAAA,QAAQ,EAAE;AAA9B,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADd,CADF,EAIE,MAAC,UAAD;AAAY,IAAA,SAAS,EAAC,IAAtB;AAA2B,IAAA,OAAO,EAAC,OAAnC;AAA2C,IAAA,SAAS,EAAE1B,OAAO,CAACe,MAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGlB,CAAC,CAACiB,GAAF,CAAMf,KAAN,EAAa,sBAAb,EAAqC,GAArC,CADH,gCAJF,CADF,CADF,EAWE,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAkB,IAAA,EAAE,EAAE,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEC,OAAO,CAAC2B,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,OAAO,EAAE,MAAMZ,MAAM,EAA7C;AAAiD,IAAA,SAAS,MAA1D;AAA2D,IAAA,OAAO,EAAC,UAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CADF,EAIE;AAAK,IAAA,SAAS,EAAEf,OAAO,CAAC2B,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,OAAO,EAAE,MAAMP,QAAQ,EAA/C;AAAmD,IAAA,SAAS,MAA5D;AAA6D,IAAA,OAAO,EAAC,WAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,CAJF,CAXF,CANF,CAFF,CADF;AAgCD,CAzED;;AA2EA,eAAetB,MAAf","sourcesContent":["import React from \"react\";\nimport { Avatar, Typography, Button, Grid } from \"@material-ui/core\";\nimport StyledCheckbox from './StyledCheckbox'\nimport { headerStyles } from './Constant'\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport { FOLLOW_CHANNEL, UNFOLLOW_CHANNEL } from \"../../graphql/channel/mutation\"\nimport { GET_CHANNEL_BY_SLUG } from \"../../graphql/channel/queries\" \nimport { apolloClient } from \"../../utils\";\nimport _ from \"lodash\"\n\ninterface HearderProps {\n  userLogin: string\n  channelId: string\n  slug: string\n}\n\ninterface ChannelProp {\n  id: string\n  name: string\n  slug: string\n  avatar: string\n  cover: string\n  description: string\n  nation: string\n  language: string\n  telephone: string\n  address: string\n  facebook: string\n  youtube: string\n  website: string\n  official_status: number\n  follow_value: number\n  followers: {\n    user_id: string\n  }[]\n  created_at: string\n}\n\n\nconst Header: React.FunctionComponent<HearderProps> = (props: HearderProps) => {\n  const classes = headerStyles();\n  const avatar = \"https://sf.co.ua/14/07/wallpaper-117233.jpg\" // \"https://news.mogi.vn/wp-content/uploads/2018/08/anh-nha-dep-13.jpg\"\n  const [reload, setReload] = React.useState(false)\n  const [channel, setChannel] = React.useState<ChannelProp>()\n\n  const getChannel = async () => {\n    let res = await apolloClient.query({ query: GET_CHANNEL_BY_SLUG, variables: {\n      \"slug\": props.slug,\n      }}).then((response: any) => {\n        let channel = _.get(response, \"data.channel\", {});\n        setChannel(channel)\n    });\n  }\n\n  const follow = async ()=> { \n    let id = props.channelId\n    let follow = await apolloClient.mutate({ mutation: FOLLOW_CHANNEL, variables: {\n      \"input\": {\n        \"id\": id\n      }\n    }})\n    .then((response: any) => {\n      getChannel()\n    })\n  };\n \n  const unfollow = async ()=> { \n    let id = props.channelId\n    let follow = await apolloClient.mutate({ mutation: UNFOLLOW_CHANNEL, variables: {\n      \"input\": {\n        \"id\": id\n      }\n    }})\n    .then((response: any) => {\n      getChannel()\n    })\n  };\n\n  // console.log(\"channel\", props.channel)\n\n  return (\n    <div>\n      <div className={classes.cover}></div>\n      <div className={classes.container}>\n        <Avatar\n          alt=\"nhadatmoi.net\"\n          className={classes.avatar}\n          src={avatar}\n        />   \n        <Grid container spacing={0}>\n          <Grid item xs={8} sm={6}>\n            <div className={classes.titleFollow}>\n              <Typography component=\"h2\" gutterBottom className={classes.title}> \n                Nhà Đất Mới <CheckCircleIcon style={{ color: \"#045EA8\", fontSize: \"15px\" }} /> \n              </Typography>\n              <Typography component=\"h3\" variant=\"body2\" className={classes.follow}>\n                {_.get(props, \"channel.follow_value\", \"0\")} lượt theo dõi\n              </Typography>\n            </div>\n          </Grid>\n          <Grid item xs={4} sm={6}>\n            <div className={classes.followStyle}>\n              <Button color=\"primary\" onClick={() => follow()} fullWidth variant=\"outlined\">Theo dõi</Button>\n            </div>\n            <div className={classes.followStyle}>\n              <Button color=\"primary\" onClick={() => unfollow()} fullWidth variant=\"contained\">Bỏ theo dõi</Button>\n            </div>\n          </Grid>\n        </Grid>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}
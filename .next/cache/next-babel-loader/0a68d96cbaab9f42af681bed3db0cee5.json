{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"C:\\\\Users\\\\toan\\\\Desktop\\\\NDM\\\\chat\\\\components\\\\Home\\\\Header.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport InfoIcon from '@material-ui/icons/Info';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { I18n } from 'react-redux-i18n';\nimport { IconButton, Icon, Tooltip, Button, Card, Grid, CardContent, CardActions, Typography, AppBar, Toolbar, Hidden, Popover } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport { titles } from '../../constants/index';\nimport GamepadIcon from '@material-ui/icons/Gamepad';\nimport ModalLogin from '../Login/Modal';\nimport moment from 'moment';\nimport _ from 'lodash';\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Popper from \"@material-ui/core/Popper\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MenuList from \"@material-ui/core/MenuList\";\nconst useStyles = makeStyles(theme => ({\n  rootPopover: {\n    pointerEvents: 'none',\n    position: 'absolute',\n    marginTop: 10,\n    overflow: 'auto'\n  },\n  listItem: {\n    display: 'block',\n    backgroundColor: '#e3f2fd',\n    pointerEvents: 'auto',\n    fontSize: 14,\n    padding: 0,\n    overflowX: 'hidden',\n    \"&:hover\": {\n      backgroundColor: '#90caf9'\n    }\n  },\n  title: {\n    display: 'inline',\n    cursor: 'default',\n    color: 'white',\n    fontWeight: 400,\n    fontSize: 14,\n    padding: '0 12px' // borderLeft: '2px solid white',\n\n  },\n  header: {\n    height: 40,\n    width: '100%',\n    backgroundColor: '#1976d2'\n  },\n  divider: {\n    height: 28,\n    margin: 4,\n    color: 'white',\n    backgroundColor: 'white',\n    display: 'inline'\n  },\n  textItem: {\n    color: '#1976d2',\n    fontSize: 14,\n    paddingRight: 20\n  },\n  root: {\n    display: 'inline-block',\n    zIndex: 99999988888888888\n  },\n  paper: {\n    marginRight: theme.spacing(2)\n  }\n}));\n\nconst Actions = props => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [indexOpen, setIndex] = React.useState(null);\n  const [countMenu, setCountMenu] = React.useState(null);\n\n  const popoverOpen = (event, index) => {\n    setOpen(event.currentTarget);\n    setAnchorEl(event.currentTarget);\n    setIndex(index);\n  };\n\n  const setHoverMenu = count => {\n    setCountMenu(count);\n  };\n\n  const [openMenu, setOpenMenu] = React.useState(false);\n  const anchorRef = React.useRef(null);\n\n  const handleToggle = index => {\n    setIndex(index);\n    setOpenMenu(prevOpen => !prevOpen);\n  };\n\n  const handleClose = event => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpenMenu(false);\n  };\n\n  function handleListKeyDown(event) {\n    if (event.key === \"Tab\") {\n      event.preventDefault();\n      setOpenMenu(false);\n    }\n  } // return focus to the button when we transitioned from !open -> open\n\n\n  const prevOpen = React.useRef(openMenu);\n  React.useEffect(() => {\n    if (prevOpen.current === true && openMenu === false) {\n      anchorRef.current.focus();\n    }\n\n    prevOpen.current = openMenu;\n  }, [openMenu]);\n  return __jsx(Grid, {\n    container: true,\n    spacing: 0,\n    className: classes.header,\n    alignItems: \"center\",\n    justify: \"center\",\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, __jsx(Typography, {\n    color: \"inherit\",\n    \"aria-owns\": open ? 'mouse-over-popover' : undefined,\n    \"aria-haspopup\": \"true\",\n    style: {\n      color: 'white',\n      fontWeight: 500,\n      padding: '0 20px',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }\n  }, __jsx(GamepadIcon, {\n    style: {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 21\n    }\n  }), ' ', \"  N\\u1ED9i Th\\u1EA5t Dodo\")), __jsx(Grid, {\n    item: true,\n    xs: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }, titles.map((item, index) => {\n    return __jsx(\"div\", {\n      className: classes.root,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 25\n      }\n    }, __jsx(Typography, {\n      ref: anchorRef,\n      \"aria-controls\": openMenu ? \"menu-list-grow\" : undefined,\n      \"aria-haspopup\": \"true\",\n      onMouseEnter: () => handleToggle(index),\n      className: classes.title,\n      style: {\n        textDecoration: indexOpen === index ? 'underline ' : 'none'\n      } // onMouseLeave={popoverClose}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 29\n      }\n    }, item.title), indexOpen === index && __jsx(Popper, {\n      open: openMenu,\n      anchorEl: anchorRef.current,\n      role: undefined,\n      transition: true,\n      disablePortal: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 53\n      }\n    }, ({\n      TransitionProps,\n      placement\n    }) => __jsx(Grow, _extends({}, TransitionProps, {\n      style: {\n        transformOrigin: placement === \"bottom\" ? \"center top\" : \"center bottom\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 37\n      }\n    }), __jsx(Paper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 41\n      }\n    }, __jsx(ClickAwayListener, {\n      onClickAway: handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 45\n      }\n    }, __jsx(MenuList, {\n      autoFocusItem: openMenu,\n      id: \"menu-list-grow\",\n      onKeyDown: handleListKeyDown,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 49\n      }\n    }, __jsx(MenuItem, {\n      onClick: handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 53\n      }\n    }, \"Profile\"), __jsx(MenuItem, {\n      onClick: handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 53\n      }\n    }, \"My account\"), __jsx(MenuItem, {\n      onClick: handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 53\n      }\n    }, \"Logout\")))))));\n  })), __jsx(Grid, {\n    item: true,\n    xs: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }\n  }, __jsx(ModalLogin, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default Actions;","map":{"version":3,"sources":["C:/Users/toan/Desktop/NDM/chat/components/Home/Header.jsx"],"names":["React","makeStyles","GridList","GridListTile","GridListTileBar","ListSubheader","InfoIcon","PropTypes","withStyles","I18n","IconButton","Icon","Tooltip","Button","Card","Grid","CardContent","CardActions","Typography","AppBar","Toolbar","Hidden","Popover","CloseIcon","StarBorderIcon","List","ListItem","ListItemText","Divider","titles","GamepadIcon","ModalLogin","moment","_","ClickAwayListener","Grow","Paper","Popper","MenuItem","MenuList","useStyles","theme","rootPopover","pointerEvents","position","marginTop","overflow","listItem","display","backgroundColor","fontSize","padding","overflowX","title","cursor","color","fontWeight","header","height","width","divider","margin","textItem","paddingRight","root","zIndex","paper","marginRight","spacing","Actions","props","classes","open","setOpen","useState","indexOpen","setIndex","countMenu","setCountMenu","popoverOpen","event","index","currentTarget","setAnchorEl","setHoverMenu","count","openMenu","setOpenMenu","anchorRef","useRef","handleToggle","prevOpen","handleClose","current","contains","target","handleListKeyDown","key","preventDefault","useEffect","focus","undefined","alignItems","map","item","textDecoration","TransitionProps","placement","transformOrigin"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport { I18n } from 'react-redux-i18n';\r\nimport {\r\n    IconButton,\r\n    Icon,\r\n    Tooltip,\r\n    Button,\r\n    Card,\r\n    Grid,\r\n    CardContent,\r\n    CardActions,\r\n    Typography,\r\n    AppBar,\r\n    Toolbar,\r\n    Hidden,\r\n    Popover,\r\n} from '@material-ui/core';\r\n\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { titles } from '../../constants/index';\r\nimport GamepadIcon from '@material-ui/icons/Gamepad';\r\nimport ModalLogin from '../Login/Modal';\r\nimport moment from 'moment';\r\nimport _ from 'lodash';\r\n\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Popper from \"@material-ui/core/Popper\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport MenuList from \"@material-ui/core/MenuList\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    rootPopover: {\r\n        pointerEvents: 'none',\r\n        position: 'absolute',\r\n        marginTop: 10,\r\n        overflow: 'auto',\r\n    },\r\n    listItem: {\r\n        display: 'block',\r\n        backgroundColor: '#e3f2fd',\r\n        pointerEvents: 'auto',\r\n        fontSize: 14,\r\n        padding: 0,\r\n        overflowX: 'hidden',\r\n        \"&:hover\": {\r\n            backgroundColor: '#90caf9',\r\n        }\r\n    },\r\n    title: {\r\n        display: 'inline',\r\n        cursor: 'default',\r\n        color: 'white',\r\n        fontWeight: 400,\r\n        fontSize: 14,\r\n        padding: '0 12px',\r\n        // borderLeft: '2px solid white',\r\n    },\r\n    header: {\r\n        height: 40,\r\n        width: '100%',\r\n        backgroundColor: '#1976d2'\r\n    },\r\n    divider: {\r\n        height: 28,\r\n        margin: 4,\r\n        color: 'white',\r\n        backgroundColor: 'white',\r\n        display: 'inline',\r\n    },\r\n    textItem: {\r\n        color: '#1976d2',\r\n        fontSize: 14,\r\n        paddingRight: 20,\r\n    },\r\n    root: {\r\n        display: 'inline-block',\r\n        zIndex: 99999988888888888,\r\n    },\r\n    paper: {\r\n        marginRight: theme.spacing(2)\r\n    }\r\n}));\r\n\r\n\r\nconst Actions = (props) => {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [indexOpen, setIndex] = React.useState(null);\r\n    const [countMenu, setCountMenu] = React.useState(null);\r\n\r\n    const popoverOpen = (event, index) => {\r\n        setOpen(event.currentTarget);\r\n        setAnchorEl(event.currentTarget);\r\n        setIndex(index);\r\n    };\r\n\r\n\r\n\r\n    const setHoverMenu = (count) => {\r\n        setCountMenu(count)\r\n    }\r\n\r\n    const [openMenu, setOpenMenu] = React.useState(false);\r\n    const anchorRef = React.useRef(null);\r\n\r\n    const handleToggle = (index) => {\r\n        setIndex(index);\r\n        setOpenMenu(prevOpen => !prevOpen);\r\n    };\r\n\r\n    const handleClose = event => {\r\n        if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n            return;\r\n        }\r\n\r\n        setOpenMenu(false);\r\n    };\r\n\r\n    function handleListKeyDown(event) {\r\n        if (event.key === \"Tab\") {\r\n            event.preventDefault();\r\n            setOpenMenu(false);\r\n        }\r\n    }\r\n\r\n    // return focus to the button when we transitioned from !open -> open\r\n    const prevOpen = React.useRef(openMenu);\r\n    React.useEffect(() => {\r\n        if (prevOpen.current === true && openMenu === false) {\r\n            anchorRef.current.focus();\r\n        }\r\n        prevOpen.current = openMenu;\r\n    }, [openMenu]);\r\n\r\n    return (\r\n        <Grid container spacing={0} className={classes.header} alignItems='center' justify='center' direction='row' >\r\n            <Grid item xs={2}>\r\n                <Typography color='inherit'\r\n                    aria-owns={open ? 'mouse-over-popover' : undefined}\r\n                    aria-haspopup=\"true\"\r\n                    style={{ color: 'white', fontWeight: 500, padding: '0 20px', display: 'flex', alignItems: 'center' }}\r\n                >\r\n                    <GamepadIcon style={{}} />{' '}  Nội Thất Dodo\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item xs={8}>\r\n\r\n                {titles.map((item, index) => {\r\n                    return (\r\n                        <div className={classes.root} key={index}>\r\n                            <Typography\r\n                                ref={anchorRef}\r\n                                aria-controls={openMenu ? \"menu-list-grow\" : undefined}\r\n                                aria-haspopup=\"true\"\r\n                                onMouseEnter={() => handleToggle(index)}\r\n                                className={classes.title}\r\n                                style={{ textDecoration: indexOpen === index ? 'underline ' : 'none' }}\r\n                            // onMouseLeave={popoverClose}\r\n                            >\r\n                                {item.title}\r\n                            </Typography>\r\n                            {indexOpen === index && <Popper\r\n                                open={openMenu}\r\n                                anchorEl={anchorRef.current}\r\n                                role={undefined}\r\n                                transition\r\n                                disablePortal\r\n                            >\r\n                                {({ TransitionProps, placement }) => (\r\n                                    <Grow\r\n                                        {...TransitionProps}\r\n                                        style={{ transformOrigin: placement === \"bottom\" ? \"center top\" : \"center bottom\" }}\r\n                                    >\r\n                                        <Paper>\r\n                                            <ClickAwayListener onClickAway={handleClose}>\r\n                                                <MenuList\r\n                                                    autoFocusItem={openMenu}\r\n                                                    id=\"menu-list-grow\"\r\n                                                    onKeyDown={handleListKeyDown}\r\n                                                >\r\n                                                    <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                                                    <MenuItem onClick={handleClose}>My account</MenuItem>\r\n                                                    <MenuItem onClick={handleClose}>Logout</MenuItem>\r\n                                                </MenuList>\r\n                                            </ClickAwayListener>\r\n                                        </Paper>\r\n                                    </Grow>\r\n                                )}\r\n                            </Popper>}\r\n                        </div>\r\n\r\n                    )\r\n                })}\r\n\r\n            </Grid>\r\n            <Grid item xs={2}>\r\n                <ModalLogin />\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n};\r\n\r\nexport default Actions;\r\n"]},"metadata":{},"sourceType":"module"}
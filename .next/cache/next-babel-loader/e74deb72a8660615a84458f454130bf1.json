{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"C:\\\\Users\\\\manh nhan\\\\Desktop\\\\new_ndm\\\\pages\\\\channel\\\\index.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Layout from '../../components/Layout/Layout';\nimport \"../../assets/scss/style.scss\";\nimport { mainURL } from \"../../constants\";\n\n// @ts-ignore\nvar UserPage = function UserPage(props) {\n  return __jsx(Layout, _extends({\n    title: \"metaTitle\",\n    description: \"\"\n  }, props, {\n    image: \"imgBanner\",\n    canonical: mainURL + '/channel/' + props.slug,\n    path: 'channel',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"jjjj\"));\n}; // @ts-ignore\n\n\nUserPage.getInitialProps = function _callee(props) {\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          return _context.abrupt(\"return\", {});\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, _Promise);\n};\n\nexport default UserPage;","map":{"version":3,"sources":["C:/Users/manh nhan/Desktop/new_ndm/pages/channel/index.tsx"],"names":["React","Layout","mainURL","UserPage","props","slug","getInitialProps"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,gCAAnB;AAGA,OAAO,8BAAP;AACA,SAASC,OAAT,QAAwB,iBAAxB;;AAKA;AACA,IAAMC,QAA8B,GAAG,SAAjCA,QAAiC,CAACC,KAAD,EAAuB;AAE5D,SACE,MAAC,MAAD;AACE,IAAA,KAAK,EAAE,WADT;AAEE,IAAA,WAAW,EAAE;AAFf,KAGMA,KAHN;AAIE,IAAA,KAAK,EAAE,WAJT;AAKE,IAAA,SAAS,EAAGF,OAAO,GAAG,WAAV,GAAwBE,KAAK,CAACC,IAL5C;AAME,IAAA,IAAI,EAAE,SANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,CADF;AAYD,CAdD,C,CAgBA;;;AACAF,QAAQ,CAACG,eAAT,GAA2B,iBAAeF,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA,2CAQlB,EARkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA3B;;AAaA,eAAeD,QAAf","sourcesContent":["import React from 'react';\r\nimport {NextPage} from \"next\";\r\nimport Layout from '../../components/Layout/Layout';\r\nimport {apolloClient} from \"../../utils\";\r\nimport { GET_CHANNEL_BY_SLUG } from \"../../graphql/channel/queries\";\r\nimport \"../../assets/scss/style.scss\";\r\nimport { mainURL } from \"../../constants\";\r\nimport Channel from \"../../components/Channel/Index\"\r\nimport _ from \"lodash\"\r\n\r\n\r\n// @ts-ignore\r\nconst UserPage: NextPage<IndexProps> = (props: IndexProps) => {\r\n   \r\n  return (\r\n    <Layout\r\n      title={\"metaTitle\"}\r\n      description={\"\"}\r\n      {...props}\r\n      image={\"imgBanner\"}\r\n      canonical={ mainURL + '/channel/' + props.slug}\r\n      path={'channel'}\r\n    >\r\n      <h1>jjjj</h1>\r\n    </Layout>\r\n  );\r\n};\r\n\r\n// @ts-ignore\r\nUserPage.getInitialProps = async function(props: QueryProp) {\r\n  // let slug = props.query.slug;\r\n  // let channel = await apolloClient.query({ query: GET_CHANNEL_BY_SLUG, variables: {\r\n  //     \"slug\": slug,\r\n  //   }}).then((response: any) => {\r\n  //   return response\r\n  // });\r\n  \r\n  return {\r\n  };\r\n};\r\n\r\n\r\nexport default UserPage;\r\n"]},"metadata":{},"sourceType":"module"}
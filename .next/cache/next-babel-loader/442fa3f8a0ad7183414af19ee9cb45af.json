{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _Array$isArray from \"@babel/runtime-corejs2/core-js/array/is-array\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\manh nhan\\\\Desktop\\\\new_ndm\\\\components\\\\LayeredNavigation\\\\LayeredNavigation.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react'; //Import Material Libs\n\nimport Grid from \"@material-ui/core/Grid\";\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete, { createFilterOptions } from '@material-ui/lab/Autocomplete';\nimport Typography from '@material-ui/core/Typography'; //Import Dynamic\n\nimport dynamic from 'next/dynamic'; //Import without SSR Slider\n\nvar Slider = dynamic(function () {\n  return import('@material-ui/core/Slider');\n}, {\n  ssr: false,\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('@material-ui/core/Slider')];\n    },\n    modules: ['@material-ui/core/Slider']\n  }\n}); //Import Apollo Client\n\nimport { apolloClient } from \"../../utils\"; //Import Query GraphQL\n\nimport { GET_CITY_LIST } from \"../../graphql/city/queries\";\nimport { GET_DISTRICT_LIST } from \"../../graphql/district/queries\";\nimport { GET_WARD_LIST } from \"../../graphql/ward/queries\";\nimport { GET_DIRECTIONS } from \"../../graphql/directions/queries\";\nimport { adSellLeaseType, adSellLeaseCategory } from \"../../constants\";\nimport Validator from \"../../modules/validator\";\n\nfunction valueText(value) {\n  return \"\".concat(value);\n}\n\nvar bedRoomNumber = [{\n  node: {\n    id: 1,\n    value: {\n      max: 2,\n      min: 0\n    },\n    name: '0 - 2 phòng'\n  }\n}, {\n  node: {\n    id: 2,\n    value: {\n      max: 5,\n      min: 3\n    },\n    name: '3 - 5 phòng'\n  }\n}, {\n  node: {\n    id: 3,\n    value: {\n      max: 100,\n      min: 6\n    },\n    name: 'trên 5 phòng'\n  }\n}];\n\nvar LayeredNavigation = function LayeredNavigation(props) {\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      openDirection = _React$useState2[0],\n      setOpenDirection = _React$useState2[1];\n\n  var handleClickDirection = function handleClickDirection() {\n    setOpenDirection(!openDirection);\n  };\n\n  var _React$useState3 = React.useState(true),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      openBedRoom = _React$useState4[0],\n      setOpenBedRoom = _React$useState4[1];\n\n  var handleClickBedRoom = function handleClickBedRoom() {\n    setOpenBedRoom(!openBedRoom);\n  };\n\n  var priceRangeValue = [0, 50]; //set Price\n\n  if (!Validator.isBlank(props.dataLayeredNavigation.price_range.max) || !Validator.isBlank(props.dataLayeredNavigation.price_range.min)) {\n    var minValue = Number(props.dataLayeredNavigation.price_range.min / 1000000000);\n    var maxValue = Number(props.dataLayeredNavigation.price_range.max / 1000000000);\n    priceRangeValue = [minValue, maxValue];\n  }\n\n  var areaRangeValue = [0, 500]; //set AreaRangeValue\n\n  if (!Validator.isBlank(props.dataLayeredNavigation.area_range.max) || !Validator.isBlank(props.dataLayeredNavigation.area_range.min)) {\n    areaRangeValue = [props.dataLayeredNavigation.area_range.min, props.dataLayeredNavigation.area_range.max];\n  }\n\n  ;\n  var idBedRoomNumber = -1;\n\n  if (Number(props.dataLayeredNavigation.bed_room_number.max) < 3 && Number(props.dataLayeredNavigation.bed_room_number.max) > 0) {\n    idBedRoomNumber = 1;\n  }\n\n  if (Number(props.dataLayeredNavigation.bed_room_number.max) < 6 && Number(props.dataLayeredNavigation.bed_room_number.max) > 2) {\n    idBedRoomNumber = 2;\n  }\n\n  if (5 < Number(props.dataLayeredNavigation.bed_room_number.max)) {\n    idBedRoomNumber = 3;\n  }\n\n  var _React$useState5 = React.useState(priceRangeValue),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      priceValue = _React$useState6[0],\n      setPriceValue = _React$useState6[1];\n\n  var _React$useState7 = React.useState(areaRangeValue),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      areaValue = _React$useState8[0],\n      setAreaValue = _React$useState8[1];\n\n  var _React$useState9 = React.useState(),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      citesList = _React$useState10[0],\n      setCitesList = _React$useState10[1];\n\n  var _React$useState11 = React.useState(),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      districtList = _React$useState12[0],\n      setDistrictList = _React$useState12[1];\n\n  var _React$useState13 = React.useState(),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      wardList = _React$useState14[0],\n      setWardList = _React$useState14[1];\n\n  var _React$useState15 = React.useState(),\n      _React$useState16 = _slicedToArray(_React$useState15, 2),\n      directionList = _React$useState16[0],\n      setDirectionList = _React$useState16[1];\n\n  var _React$useState17 = React.useState(idBedRoomNumber),\n      _React$useState18 = _slicedToArray(_React$useState17, 2),\n      activeBedRoom = _React$useState18[0],\n      setActiveBedRoom = _React$useState18[1];\n\n  var _React$useState19 = React.useState(String(props.dataLayeredNavigation.home_direction)),\n      _React$useState20 = _slicedToArray(_React$useState19, 2),\n      activeDirection = _React$useState20[0],\n      setActiveDirection = _React$useState20[1];\n\n  var _React$useState21 = React.useState(),\n      _React$useState22 = _slicedToArray(_React$useState21, 2),\n      typeAdSellLeaseParent = _React$useState22[0],\n      setTypeAddSellLeaseParent = _React$useState22[1];\n\n  var _React$useState23 = React.useState(),\n      _React$useState24 = _slicedToArray(_React$useState23, 2),\n      typeAdSellLeaseChild = _React$useState24[0],\n      setTypeAddSellLeaseChild = _React$useState24[1];\n\n  var closeIcon = __jsx(\"svg\", {\n    viewBox: \"0 0 352 512\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, __jsx(\"path\", {\n    d: \"M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }));\n\n  var defaultTypeChild = null;\n  var defaultTypeParent = null;\n  var defaultType1Parent = null;\n  var defaultParentSlug = '';\n  var parentUpdateASLSlug = '';\n\n  var updateASLChildType = function updateASLChildType(slugInput) {\n    var dataChildType = [];\n\n    for (var indexType in adSellLeaseType) {\n      if (adSellLeaseType[indexType].parent_slug === slugInput) {\n        dataChildType.push(adSellLeaseType[indexType]);\n      }\n    }\n\n    setTypeAddSellLeaseChild(dataChildType);\n  };\n\n  if (props.dataLayeredNavigation && props.dataLayeredNavigation.type2) {\n    for (var indexType in adSellLeaseType) {\n      if (adSellLeaseType[indexType].slug === props.dataLayeredNavigation.type_slug) {\n        if (adSellLeaseType[indexType].parent_slug) {\n          defaultTypeChild = adSellLeaseType[indexType];\n          defaultParentSlug = adSellLeaseType[indexType].parent_slug;\n        } else {\n          defaultTypeParent = adSellLeaseType[indexType];\n          parentUpdateASLSlug = adSellLeaseType[indexType].slug;\n        }\n\n        var _type1Slug = adSellLeaseType[indexType].type1_slug;\n\n        for (var _indexType in adSellLeaseCategory) {\n          if (adSellLeaseCategory[_indexType].slug === _type1Slug) {\n            defaultType1Parent = adSellLeaseCategory[_indexType];\n          }\n        }\n      }\n    }\n\n    if (defaultParentSlug) {\n      for (var _indexType2 in adSellLeaseType) {\n        if (defaultParentSlug === adSellLeaseType[_indexType2].slug) {\n          defaultTypeParent = adSellLeaseType[_indexType2];\n        }\n      }\n    } //Set default Type1 ASL\n\n  }\n\n  if (props.dataLayeredNavigation && props.dataLayeredNavigation.type1) {\n    for (var _indexType3 in adSellLeaseCategory) {\n      if (adSellLeaseCategory[_indexType3].slug === props.dataLayeredNavigation.type_slug) {\n        defaultType1Parent = adSellLeaseCategory[_indexType3];\n      }\n    }\n  }\n\n  var _React$useState25 = React.useState(defaultTypeChild),\n      _React$useState26 = _slicedToArray(_React$useState25, 2),\n      defaultAslType2Child = _React$useState26[0],\n      setDefaultAslType2Child = _React$useState26[1];\n\n  var _React$useState27 = React.useState(defaultTypeParent),\n      _React$useState28 = _slicedToArray(_React$useState27, 2),\n      defaultAslType2Parent = _React$useState28[0],\n      setDefaultAslType2Parent = _React$useState28[1];\n\n  var _React$useState29 = React.useState(defaultType1Parent),\n      _React$useState30 = _slicedToArray(_React$useState29, 2),\n      defaultAslType1Parent = _React$useState30[0],\n      setDefaultAslType1Parent = _React$useState30[1];\n\n  var _React$useState31 = React.useState(defaultTypeChild),\n      _React$useState32 = _slicedToArray(_React$useState31, 2),\n      currentAslType2Child = _React$useState32[0],\n      setCurrentAslType2Child = _React$useState32[1];\n\n  var _React$useState33 = React.useState(defaultTypeParent),\n      _React$useState34 = _slicedToArray(_React$useState33, 2),\n      currentAslType2Parent = _React$useState34[0],\n      setCurrentAslType2Parent = _React$useState34[1];\n\n  var _React$useState35 = React.useState(defaultType1Parent),\n      _React$useState36 = _slicedToArray(_React$useState35, 2),\n      currentAslType1Parent = _React$useState36[0],\n      setCurrentAslType1Parent = _React$useState36[1];\n\n  var type1SlugString = '';\n\n  if (props.dataLayeredNavigation.type1) {\n    // @ts-ignore\n    if (!Validator.isBlank(defaultType1Parent) && defaultType1Parent.slug) {\n      // @ts-ignore\n      type1SlugString = defaultType1Parent.slug;\n    }\n  } else {\n    // @ts-ignore\n    if (!Validator.isBlank(defaultTypeParent) && defaultTypeParent.type1_slug) {\n      // @ts-ignore\n      type1SlugString = defaultTypeParent.type1_slug;\n    }\n  }\n\n  var _React$useState37 = React.useState(type1SlugString),\n      _React$useState38 = _slicedToArray(_React$useState37, 2),\n      type1Slug = _React$useState38[0],\n      setType1Slug = _React$useState38[1];\n\n  var updateASLParentType = function updateASLParentType(type1SlugString) {\n    var dataParentType = [];\n\n    for (var _indexType4 in adSellLeaseType) {\n      if ((!adSellLeaseType[_indexType4].parent_slug || Validator.isBlank(!adSellLeaseType[_indexType4].parent_slug)) && type1SlugString === adSellLeaseType[_indexType4].type1_slug) {\n        dataParentType.push(adSellLeaseType[_indexType4]);\n      }\n    }\n\n    setTypeAddSellLeaseParent(dataParentType);\n  };\n\n  useEffect(function () {\n    if (defaultParentSlug) {\n      updateASLChildType(defaultParentSlug);\n    }\n\n    if (parentUpdateASLSlug) {\n      updateASLChildType(parentUpdateASLSlug);\n    }\n\n    apolloClient.query({\n      query: GET_CITY_LIST,\n      variables: {\n        \"page\": 1,\n        \"limit\": 1000,\n        \"filter\": \"'{}'\"\n      }\n    }).then(function (response) {\n      if (typeof response.data.citys.edges !== \"undefined\") {\n        setCitesList(response.data.citys.edges);\n\n        for (var index in response.data.citys.edges) {\n          if (response.data.citys.edges[index].node.id === props.dataLayeredNavigation.city) {\n            setDefaultCity(response.data.citys.edges[index]);\n          }\n        }\n      }\n    });\n\n    if (!Validator.isBlank(props.dataLayeredNavigation.city)) {\n      updateDistrictLayeredNavigation(props.dataLayeredNavigation.city);\n    }\n\n    if (!Validator.isBlank(props.dataLayeredNavigation.district)) {\n      updateWardLayeredNavigation(props.dataLayeredNavigation.district);\n    }\n\n    apolloClient.query({\n      query: GET_DIRECTIONS,\n      variables: {\n        \"page\": 1,\n        \"limit\": 1000,\n        \"filter\": \"'{}'\"\n      }\n    }).then(function (response) {\n      if (typeof response.data.directions.edges !== \"undefined\") {\n        setDirectionList(response.data.directions.edges);\n      }\n    });\n    var typeParentASL = [];\n\n    for (var indexTypeASL in adSellLeaseType) {\n      var parentTypeASL = adSellLeaseType[indexTypeASL].parent_slug;\n\n      if ((!parentTypeASL || Validator.isBlank(parentTypeASL)) && type1Slug === adSellLeaseType[indexTypeASL].type1_slug) {\n        typeParentASL.push(adSellLeaseType[indexTypeASL]);\n      }\n    }\n\n    setTypeAddSellLeaseParent(typeParentASL);\n  }, []);\n  var filterOptions = createFilterOptions({\n    matchFrom: 'any',\n    stringify: function stringify(option) {\n      return option.node.name;\n    }\n  });\n  var filterOptionsASL = createFilterOptions({\n    matchFrom: 'any',\n    stringify: function stringify(option) {\n      return option.name;\n    }\n  });\n  var cityDataSelect = {\n    options: citesList,\n    getOptionLabel: function getOptionLabel(option) {\n      return option.node.name;\n    },\n    filterOptions: filterOptions\n  };\n  var districtDataSelect = {\n    options: districtList,\n    getOptionLabel: function getOptionLabel(option) {\n      return option.node.name;\n    },\n    filterOptions: filterOptions\n  };\n  var wardDataSelect = {\n    options: wardList,\n    getOptionLabel: function getOptionLabel(option) {\n      return option.node.name;\n    },\n    filterOptions: filterOptions\n  };\n  var typeAdSellLeaseSelect = {\n    options: typeAdSellLeaseParent,\n    getOptionLabel: function getOptionLabel(option) {\n      return option.name;\n    },\n    filterOptions: filterOptionsASL\n  };\n  var type1AdSellLeaseSelect = {\n    options: adSellLeaseCategory,\n    getOptionLabel: function getOptionLabel(option) {\n      return option.name;\n    },\n    filterOptions: filterOptionsASL\n  };\n  var typeAdSellLeaseSelectChild = {\n    options: typeAdSellLeaseChild,\n    getOptionLabel: function getOptionLabel(option) {\n      return option.name;\n    },\n    filterOptions: filterOptionsASL\n  };\n\n  var _React$useState39 = React.useState(props.dataLayeredNavigation),\n      _React$useState40 = _slicedToArray(_React$useState39, 2),\n      dataLayeredNavigation = _React$useState40[0],\n      setDataLayeredNavigation = _React$useState40[1];\n\n  var onChangeCites = function onChangeCites(value) {\n    if (value) {\n      dataLayeredNavigation.city = value.node.id;\n      dataLayeredNavigation.slug = value.node.default_slug;\n\n      if (dataLayeredNavigation.type_slug === '/nha-dat-ban') {\n        dataLayeredNavigation.slug = value.node.slug;\n      }\n\n      updateDistrictLayeredNavigation(value.node.id);\n    } else {\n      dataLayeredNavigation.city = '';\n      dataLayeredNavigation.slug = '';\n    }\n\n    dataLayeredNavigation.district = '';\n    dataLayeredNavigation.ward = '';\n    resetDataLayeredNavigation();\n    setDistrictList([]);\n    setWardList([]);\n    setDataLayeredNavigation(dataLayeredNavigation); //Set Default Value\n\n    setDefaultDistrict(defaultValueLocation);\n    setDefaultWard(defaultValueLocation);\n    props.updateLayeredNavigation(dataLayeredNavigation);\n  };\n\n  var handlePriceChange = function handlePriceChange(event, newValue) {\n    setPriceValue(newValue);\n\n    if (_Array$isArray(newValue) && newValue.length != null && newValue.length > 0) {\n      var _minValue = 0;\n      var _maxValue = 0;\n      newValue.map(function (value, index) {\n        if (index === 0) {\n          _minValue = value;\n        }\n\n        if (index === 1) {\n          _maxValue = value;\n        }\n\n        var dataToFilter = {\n          min: _minValue * 1000000000,\n          max: _maxValue * 1000000000\n        };\n        dataLayeredNavigation.price_range = dataToFilter;\n        setDataLayeredNavigation(dataLayeredNavigation);\n        delayUpdateLayeredNavigation(dataLayeredNavigation);\n      });\n    }\n  };\n\n  var handleAreaChange = function handleAreaChange(event, newValue) {\n    setAreaValue(newValue);\n\n    if (_Array$isArray(newValue) && newValue.length != null && newValue.length > 0) {\n      var _minValue2 = 0;\n      var _maxValue2 = 0;\n      newValue.map(function (value, index) {\n        if (index === 0) {\n          _minValue2 = value;\n        }\n\n        if (index === 1) {\n          _maxValue2 = value;\n        }\n\n        var dataToFilter = {\n          min: _minValue2,\n          max: _maxValue2\n        };\n        dataLayeredNavigation.area_range = dataToFilter;\n        setDataLayeredNavigation(dataLayeredNavigation);\n        delayUpdateLayeredNavigation(dataLayeredNavigation);\n      });\n    }\n  };\n\n  var timerId = setTimeout(function () {}, 600); // @ts-ignore\n\n  var delayUpdateLayeredNavigation = function delayUpdateLayeredNavigation(dataLayeredNavigation) {\n    clearTimeout(timerId);\n    timerId = setTimeout(function () {\n      props.updateLayeredNavigation(dataLayeredNavigation);\n    }, 600);\n  };\n\n  var onChangeDistricts = function onChangeDistricts(value) {\n    if (value) {\n      dataLayeredNavigation.district = value.node.id;\n      dataLayeredNavigation.slug = value.node.default_slug;\n\n      if (dataLayeredNavigation.type_slug === '/nha-dat-ban') {\n        dataLayeredNavigation.slug = value.node.slug;\n      }\n\n      updateWardLayeredNavigation(value.node.id);\n    } else {\n      var citySlug = defaultCity.node.default_slug;\n\n      if (dataLayeredNavigation.type_slug === '/nha-dat-ban') {\n        citySlug = defaultCity.node.slug;\n      }\n\n      dataLayeredNavigation.district = '';\n      dataLayeredNavigation.slug = citySlug;\n    }\n\n    resetDataLayeredNavigation();\n    dataLayeredNavigation.ward = '';\n    setWardList([]);\n    setDefaultWard(defaultValueLocation);\n    props.updateLayeredNavigation(dataLayeredNavigation);\n  };\n\n  var onChangeWards = function onChangeWards(value) {\n    if (value) {\n      dataLayeredNavigation.ward = value.node.id;\n      dataLayeredNavigation.slug = value.node.default_slug;\n\n      if (dataLayeredNavigation.type_slug === '/nha-dat-ban') {\n        dataLayeredNavigation.slug = value.node.slug;\n      }\n    } else {\n      var districtSlug = defaultDistrict.node.default_slug;\n\n      if (dataLayeredNavigation.type_slug === '/nha-dat-ban') {\n        districtSlug = defaultDistrict.node.slug;\n      }\n\n      dataLayeredNavigation.district = '';\n      dataLayeredNavigation.ward = '';\n      dataLayeredNavigation.slug = districtSlug;\n    }\n\n    resetDataLayeredNavigation();\n    setDataLayeredNavigation(dataLayeredNavigation);\n    props.updateLayeredNavigation(dataLayeredNavigation);\n  };\n\n  var onChangeType = function onChangeType(value, isChild, isType1) {\n    dataLayeredNavigation.district = '';\n    dataLayeredNavigation.ward = '';\n    dataLayeredNavigation.city = '';\n    dataLayeredNavigation.slug = '';\n    var slugToUpdateChildType = '';\n    var isResetChildType = false;\n\n    for (var _indexType5 in adSellLeaseType) {\n      if (value && value.slug && value.slug === adSellLeaseType[_indexType5].slug) {\n        if (!value.parent_slug || Validator.isBlank(value.parent_slug)) {\n          slugToUpdateChildType = adSellLeaseType[_indexType5].slug;\n          isResetChildType = true;\n        }\n      }\n    }\n\n    if (isType1) {\n      isResetChildType = true; // @ts-ignore\n\n      if (value) {\n        setType1Slug(value.slug);\n        setCurrentAslType1Parent(value);\n      }\n\n      setDefaultAslType2Child([]);\n      setDefaultAslType2Parent([]);\n    } else {\n      if (value) {\n        if (isChild) {\n          setCurrentAslType2Child(value);\n        } else {\n          setCurrentAslType2Parent(value);\n        }\n      }\n\n      setDefaultAslType2Child([]);\n    }\n\n    if (isResetChildType) {\n      setTypeAddSellLeaseChild([]);\n    }\n\n    if (slugToUpdateChildType) {\n      var timer = setTimeout(function () {\n        updateASLChildType(slugToUpdateChildType);\n      }, 200);\n    }\n\n    resetDataLayeredNavigation();\n\n    if (isType1) {\n      if (value) {\n        dataLayeredNavigation.type1 = value.id;\n        dataLayeredNavigation.type_slug = value.slug;\n      } else {\n        dataLayeredNavigation.type1 = '';\n        dataLayeredNavigation.type_slug = '';\n      }\n    } else {\n      if (value && value.id) {\n        dataLayeredNavigation.type2 = value.id;\n        dataLayeredNavigation.type_slug = value.slug;\n      } else {\n        dataLayeredNavigation.type2 = '';\n        dataLayeredNavigation.type_slug = '';\n      }\n    }\n\n    if (isType1) {\n      setTypeAddSellLeaseParent([]);\n      setTypeAddSellLeaseChild([]);\n      var resetParentType = setTimeout(function () {\n        // @ts-ignore\n        if (value) {\n          updateASLParentType(value.slug);\n        }\n      }, 500);\n    } //Reset Parent Case\n\n\n    if (!value || !value.slug) {\n      setTypeAddSellLeaseChild([]);\n\n      if (isChild) {\n        setTypeAddSellLeaseParent([]);\n        setDefaultAslType2Parent(currentAslType2Parent);\n\n        var _resetParentType = setTimeout(function () {\n          updateASLParentType(type1Slug);\n          updateASLChildType(currentAslType2Parent.slug);\n        }, 500);\n\n        dataLayeredNavigation.type2 = currentAslType2Parent.id;\n        dataLayeredNavigation.type_slug = currentAslType2Parent.slug;\n      }\n\n      if (!isChild && !isType1) {\n        dataLayeredNavigation.type1 = currentAslType1Parent.id;\n        dataLayeredNavigation.type_slug = currentAslType1Parent.slug;\n      }\n    }\n\n    setDataLayeredNavigation(dataLayeredNavigation);\n    props.updateLayeredNavigation(dataLayeredNavigation);\n  };\n\n  var resetDataLayeredNavigation = function resetDataLayeredNavigation() {\n    dataLayeredNavigation.page = 1;\n    dataLayeredNavigation.bed_room_number = {\n      max: 0,\n      min: 0\n    };\n    setActiveBedRoom(-1);\n    dataLayeredNavigation.home_direction = '';\n    setActiveDirection('');\n    dataLayeredNavigation.area_range = {\n      max: 0,\n      min: 0\n    };\n    dataLayeredNavigation.price_range = {\n      max: 0,\n      min: 0\n    };\n    setPriceValue([0, 50]);\n    setAreaValue([0, 500]);\n    return dataLayeredNavigation;\n  };\n\n  var onClickDirection = function onClickDirection(value) {\n    if (value !== activeDirection) {\n      dataLayeredNavigation.home_direction = value;\n      setActiveDirection(value);\n    } else {\n      dataLayeredNavigation.home_direction = '';\n      setActiveDirection('');\n    }\n\n    setDataLayeredNavigation(dataLayeredNavigation);\n    props.updateLayeredNavigation(dataLayeredNavigation);\n  };\n\n  var onClickBedRoom = function onClickBedRoom(value, id) {\n    if (id !== activeBedRoom) {\n      dataLayeredNavigation.bed_room_number = value;\n      setActiveBedRoom(id);\n    } else {\n      dataLayeredNavigation.bed_room_number = {\n        max: 0,\n        min: 0\n      };\n      setActiveBedRoom(-1);\n    }\n\n    setDataLayeredNavigation(dataLayeredNavigation);\n    props.updateLayeredNavigation(dataLayeredNavigation);\n  };\n\n  var updateDistrictLayeredNavigation = function updateDistrictLayeredNavigation(cityId) {\n    apolloClient.query({\n      query: GET_DISTRICT_LIST,\n      variables: {\n        \"page\": 1,\n        \"limit\": 100,\n        \"filter\": \"{'city_id': '\" + cityId + \"'}\"\n      }\n    }).then(function (response) {\n      if (typeof response.data.districts.edges !== \"undefined\") {\n        setDistrictList(response.data.districts.edges);\n\n        for (var index in response.data.districts.edges) {\n          if (response.data.districts.edges[index].node.id === props.dataLayeredNavigation.district) {\n            setDefaultDistrict(response.data.districts.edges[index]);\n          }\n        }\n      }\n    });\n  };\n\n  var updateWardLayeredNavigation = function updateWardLayeredNavigation(districtId) {\n    apolloClient.query({\n      query: GET_WARD_LIST,\n      variables: {\n        \"page\": 1,\n        \"limit\": 100,\n        \"filter\": \"{'district_id': '\" + districtId + \"'}\"\n      }\n    }).then(function (response) {\n      if (typeof response.data.wards.edges !== \"undefined\") {\n        setWardList(response.data.wards.edges);\n\n        for (var index in response.data.wards.edges) {\n          if (response.data.wards.edges[index].node.id === props.dataLayeredNavigation.ward) {\n            setDefaultWard(response.data.wards.edges[index]);\n          }\n        }\n      }\n    });\n  };\n\n  var handleFieldChange = function handleFieldChange(event, title, value) {\n    dataLayeredNavigation.name = value;\n    dataLayeredNavigation.title = value;\n    setDataLayeredNavigation(dataLayeredNavigation);\n    delayUpdateLayeredNavigation(dataLayeredNavigation);\n  };\n\n  var defaultKeywordValue = '';\n\n  if (!Validator.isBlank(props.dataLayeredNavigation.name)) {\n    defaultKeywordValue = String(props.dataLayeredNavigation.name);\n  }\n\n  if (!Validator.isBlank(props.dataLayeredNavigation.title)) {\n    defaultKeywordValue = String(props.dataLayeredNavigation.title);\n  }\n\n  var defaultValueLocation = {\n    node: {\n      id: '',\n      name: '',\n      slug: ''\n    }\n  };\n\n  var _React$useState41 = React.useState(defaultValueLocation),\n      _React$useState42 = _slicedToArray(_React$useState41, 2),\n      defaultCity = _React$useState42[0],\n      setDefaultCity = _React$useState42[1];\n\n  var _React$useState43 = React.useState(defaultValueLocation),\n      _React$useState44 = _slicedToArray(_React$useState43, 2),\n      defaultDistrict = _React$useState44[0],\n      setDefaultDistrict = _React$useState44[1];\n\n  var _React$useState45 = React.useState(defaultValueLocation),\n      _React$useState46 = _slicedToArray(_React$useState45, 2),\n      defaultWard = _React$useState46[0],\n      setDefaultWard = _React$useState46[1]; // @ts-ignore\n  // @ts-ignore\n\n\n  return __jsx(Grid, {\n    className: props.className,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 647\n    },\n    __self: this\n  }, __jsx(Grid, {\n    container: true,\n    className: \"search_layered__title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 648\n    },\n    __self: this\n  }, \"L\\u1ECDc k\\u1EBFt qu\\u1EA3 t\\xECm ki\\u1EBFm\"), __jsx(TextField, {\n    id: \"standard-basic\",\n    label: \"T\\u1EEB kh\\xF3a\",\n    className: \"search_layered__keyword\",\n    defaultValue: defaultKeywordValue,\n    onChange: function onChange(event) {\n      return handleFieldChange(event, 'title', event.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 649\n    },\n    __self: this\n  }), (props.typePage === 'ad-sell-lease-location' || props.typePage === 'ad-sell-lease-index') && __jsx(FormControl, {\n    className: \"search_layered__select\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 658\n    },\n    __self: this\n  }, __jsx(Autocomplete, _extends({}, type1AdSellLeaseSelect, {\n    clearOnEscape: true,\n    defaultValue: defaultAslType1Parent,\n    onChange: function onChange(event, value) {\n      return onChangeType(value, false, true);\n    },\n    renderInput: function renderInput(params) {\n      return __jsx(TextField, _extends({}, params, {\n        label: \"H\\xECnh th\\u1EE9c\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 664\n        },\n        __self: this\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 659\n    },\n    __self: this\n  }))), typeAdSellLeaseParent && typeAdSellLeaseParent.length > 0 && (props.typePage === 'ad-sell-lease-location' || props.typePage === 'ad-sell-lease-index') && __jsx(FormControl, {\n    className: \"search_layered__select\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 670\n    },\n    __self: this\n  }, __jsx(Autocomplete, _extends({}, typeAdSellLeaseSelect, {\n    clearOnEscape: true,\n    defaultValue: defaultAslType2Parent,\n    onChange: function onChange(event, value) {\n      return onChangeType(value, false, false);\n    },\n    renderInput: function renderInput(params) {\n      return __jsx(TextField, _extends({}, params, {\n        label: \"Lo\\u1EA1i nh\\xE0 \\u0111\\u1EA5t\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 676\n        },\n        __self: this\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 671\n    },\n    __self: this\n  }))), typeAdSellLeaseChild && typeAdSellLeaseChild.length > 0 && (props.typePage === 'ad-sell-lease-location' || props.typePage === 'ad-sell-lease-index') && __jsx(FormControl, {\n    className: \"search_layered__select\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 682\n    },\n    __self: this\n  }, __jsx(Autocomplete, _extends({}, typeAdSellLeaseSelectChild, {\n    clearOnEscape: true,\n    defaultValue: defaultAslType2Child,\n    onChange: function onChange(event, value) {\n      return onChangeType(value, true, false);\n    },\n    renderInput: function renderInput(params) {\n      return __jsx(TextField, _extends({}, params, {\n        label: \"Chi ti\\u1EBFt Lo\\u1EA1i nh\\xE0 \\u0111\\u1EA5t\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 688\n        },\n        __self: this\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 683\n    },\n    __self: this\n  }))), __jsx(FormControl, {\n    className: \"search_layered__select\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 692\n    },\n    __self: this\n  }, // @ts-ignore\n  !Validator.isBlank(citesList) && !Validator.isBlank(citesList.length) && citesList.length > 0 && !Validator.isBlank(defaultCity.node.id) && __jsx(Autocomplete, _extends({}, cityDataSelect, {\n    onChange: function onChange(event, value) {\n      return onChangeCites(value);\n    },\n    clearOnEscape: true,\n    defaultValue: defaultCity,\n    renderInput: function renderInput(params) {\n      return __jsx(TextField, _extends({}, params, {\n        label: \"T\\u1EC9nh/Th\\xE0nh ph\\u1ED1\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 701\n        },\n        __self: this\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 696\n    },\n    __self: this\n  })), // @ts-ignore\n  !Validator.isBlank(citesList) && !Validator.isBlank(citesList.length) && citesList.length > 0 && Validator.isBlank(defaultCity.node.id) && __jsx(Autocomplete, _extends({}, cityDataSelect, {\n    onChange: function onChange(event, value) {\n      return onChangeCites(value);\n    },\n    clearOnEscape: true,\n    renderInput: function renderInput(params) {\n      return __jsx(TextField, _extends({}, params, {\n        label: \"T\\u1EC9nh/Th\\xE0nh ph\\u1ED1\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 711\n        },\n        __self: this\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 707\n    },\n    __self: this\n  }))), // @ts-ignore\n  districtList != null && districtList.length != null && districtList.length > 0 && !Validator.isBlank(defaultDistrict.node.id) && __jsx(FormControl, {\n    className: \"search_layered__select\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 719\n    },\n    __self: this\n  }, __jsx(Autocomplete, _extends({}, districtDataSelect, {\n    clearOnEscape: true,\n    defaultValue: defaultDistrict,\n    onChange: function onChange(event, value) {\n      return onChangeDistricts(value);\n    },\n    renderInput: function renderInput(params) {\n      return __jsx(TextField, _extends({}, params, {\n        label: \"Qu\\u1EADn/Huy\\u1EC7n\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 725\n        },\n        __self: this\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 720\n    },\n    __self: this\n  }))), // @ts-ignore\n  districtList != null && districtList.length != null && districtList.length > 0 && Validator.isBlank(defaultDistrict.node.id) && __jsx(FormControl, {\n    className: \"search_layered__select\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 733\n    },\n    __self: this\n  }, __jsx(Autocomplete, _extends({}, districtDataSelect, {\n    clearOnEscape: true,\n    onChange: function onChange(event, value) {\n      return onChangeDistricts(value);\n    },\n    renderInput: function renderInput(params) {\n      return __jsx(TextField, _extends({}, params, {\n        label: \"Qu\\u1EADn/Huy\\u1EC7n\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 738\n        },\n        __self: this\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 734\n    },\n    __self: this\n  }))), wardList != null && wardList.length != null && wardList.length > 0 && !Validator.isBlank(defaultWard.node.id) && __jsx(FormControl, {\n    className: \"search_layered__select margin_bottom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 745\n    },\n    __self: this\n  }, __jsx(Autocomplete, _extends({}, wardDataSelect, {\n    clearOnEscape: true,\n    defaultValue: defaultWard,\n    onChange: function onChange(event, value) {\n      return onChangeWards(value);\n    },\n    renderInput: function renderInput(params) {\n      return __jsx(TextField, _extends({}, params, {\n        label: \"Ph\\u01B0\\u1EDDng/X\\xE3\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 751\n        },\n        __self: this\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 746\n    },\n    __self: this\n  }))), wardList != null && wardList.length != null && wardList.length > 0 && Validator.isBlank(defaultWard.node.id) && __jsx(FormControl, {\n    className: \"search_layered__select margin_bottom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 758\n    },\n    __self: this\n  }, __jsx(Autocomplete, _extends({}, wardDataSelect, {\n    clearOnEscape: true,\n    defaultValue: defaultWard,\n    onChange: function onChange(event, value) {\n      return onChangeWards(value);\n    },\n    renderInput: function renderInput(params) {\n      return __jsx(TextField, _extends({}, params, {\n        label: \"Ph\\u01B0\\u1EDDng/X\\xE3\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 764\n        },\n        __self: this\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 759\n    },\n    __self: this\n  }))), __jsx(Typography, {\n    id: \"range-slider\",\n    gutterBottom: true,\n    className: \"search_layered__slider__text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 769\n    },\n    __self: this\n  }, \"Di\\u1EC7n t\\xEDch (m\", __jsx(\"sup\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 770\n    },\n    __self: this\n  }, \"2\"), \")\"), __jsx(Slider, {\n    className: \"search_layered__slider__content\",\n    value: areaValue,\n    onChange: handleAreaChange,\n    valueLabelDisplay: \"auto\",\n    \"aria-labelledby\": \"range-slider\",\n    max: 500,\n    getAriaValueText: valueText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 772\n    },\n    __self: this\n  }), __jsx(Typography, {\n    id: \"range-slider\",\n    gutterBottom: true,\n    className: \"search_layered__slider__text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 782\n    },\n    __self: this\n  }, \"Kho\\u1EA3ng gi\\xE1 (t\\u1EC9 \\u0111\\u1ED3ng)\"), __jsx(Slider, {\n    className: \"search_layered__slider__content\",\n    value: priceValue,\n    onChange: handlePriceChange,\n    valueLabelDisplay: \"auto\",\n    \"aria-labelledby\": \"range-slider\",\n    getAriaValueText: valueText,\n    max: 50,\n    step: 0.5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 785\n    },\n    __self: this\n  }), __jsx(List, {\n    component: \"nav\",\n    \"aria-labelledby\": \"nested-list-subheader\",\n    className: \"search_layered__dropdown\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 796\n    },\n    __self: this\n  }, directionList != null && directionList.length != null && directionList.length > 0 && __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 804\n    },\n    __self: this\n  }, __jsx(ListItem, {\n    button: true,\n    onClick: handleClickDirection,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 805\n    },\n    __self: this\n  }, __jsx(ListItemText, {\n    primary: \"H\\u01B0\\u1EDBng nh\\xE0\",\n    className: \"search_layered__expand\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 806\n    },\n    __self: this\n  }), openDirection ? __jsx(ExpandLess, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 807\n    },\n    __self: this\n  }) : __jsx(ExpandMore, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 807\n    },\n    __self: this\n  })), __jsx(Collapse, {\n    \"in\": openDirection,\n    timeout: \"auto\",\n    unmountOnExit: true,\n    className: \"search_layered__expand__list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 809\n    },\n    __self: this\n  }, directionList.map(function (direction, index) {\n    return __jsx(ListItemText, {\n      key: \"layered_second_\" + index,\n      primary: \"Hướng \" + direction.node.name,\n      secondary: closeIcon,\n      className: activeDirection === direction.node.id ? 'search_layered__expand__list__item active' : 'search_layered__expand__list__item',\n      onClick: function onClick(event) {\n        return onClickDirection(direction.node.id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 812\n      },\n      __self: this\n    });\n  }))), __jsx(ListItem, {\n    button: true,\n    onClick: handleClickBedRoom,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 824\n    },\n    __self: this\n  }, __jsx(ListItemText, {\n    primary: \"S\\u1ED1 ph\\xF2ng\",\n    className: \"search_layered__expand\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 825\n    },\n    __self: this\n  }), openBedRoom ? __jsx(ExpandLess, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 826\n    },\n    __self: this\n  }) : __jsx(ExpandMore, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 826\n    },\n    __self: this\n  })), __jsx(Collapse, {\n    \"in\": openBedRoom,\n    timeout: \"auto\",\n    unmountOnExit: true,\n    className: \"search_layered__expand__list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 828\n    },\n    __self: this\n  }, bedRoomNumber.map(function (bedRoom, index) {\n    return __jsx(ListItemText, {\n      key: \"layered_navigation_\" + index,\n      primary: bedRoom.node.name,\n      secondary: closeIcon,\n      className: activeBedRoom === bedRoom.node.id ? 'search_layered__expand__list__item active' : 'search_layered__expand__list__item',\n      onClick: function onClick(event) {\n        return onClickBedRoom(bedRoom.node.value, bedRoom.node.id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 831\n      },\n      __self: this\n    });\n  }))));\n};\n\nexport default LayeredNavigation;","map":{"version":3,"sources":["C:/Users/manh nhan/Desktop/new_ndm/components/LayeredNavigation/LayeredNavigation.tsx"],"names":["React","useEffect","Grid","List","ListItem","ListItemText","Collapse","ExpandLess","ExpandMore","FormControl","TextField","Autocomplete","createFilterOptions","Typography","dynamic","Slider","ssr","apolloClient","GET_CITY_LIST","GET_DISTRICT_LIST","GET_WARD_LIST","GET_DIRECTIONS","adSellLeaseType","adSellLeaseCategory","Validator","valueText","value","bedRoomNumber","node","id","max","min","name","LayeredNavigation","props","useState","openDirection","setOpenDirection","handleClickDirection","openBedRoom","setOpenBedRoom","handleClickBedRoom","priceRangeValue","isBlank","dataLayeredNavigation","price_range","minValue","Number","maxValue","areaRangeValue","area_range","idBedRoomNumber","bed_room_number","priceValue","setPriceValue","areaValue","setAreaValue","citesList","setCitesList","districtList","setDistrictList","wardList","setWardList","directionList","setDirectionList","activeBedRoom","setActiveBedRoom","String","home_direction","activeDirection","setActiveDirection","typeAdSellLeaseParent","setTypeAddSellLeaseParent","typeAdSellLeaseChild","setTypeAddSellLeaseChild","closeIcon","defaultTypeChild","defaultTypeParent","defaultType1Parent","defaultParentSlug","parentUpdateASLSlug","updateASLChildType","slugInput","dataChildType","indexType","parent_slug","push","type2","slug","type_slug","type1Slug","type1_slug","type1","defaultAslType2Child","setDefaultAslType2Child","defaultAslType2Parent","setDefaultAslType2Parent","defaultAslType1Parent","setDefaultAslType1Parent","currentAslType2Child","setCurrentAslType2Child","currentAslType2Parent","setCurrentAslType2Parent","currentAslType1Parent","setCurrentAslType1Parent","type1SlugString","setType1Slug","updateASLParentType","dataParentType","query","variables","then","response","data","citys","edges","index","city","setDefaultCity","updateDistrictLayeredNavigation","district","updateWardLayeredNavigation","directions","typeParentASL","indexTypeASL","parentTypeASL","filterOptions","matchFrom","stringify","option","filterOptionsASL","cityDataSelect","options","getOptionLabel","districtDataSelect","wardDataSelect","typeAdSellLeaseSelect","type1AdSellLeaseSelect","typeAdSellLeaseSelectChild","setDataLayeredNavigation","onChangeCites","default_slug","ward","resetDataLayeredNavigation","setDefaultDistrict","defaultValueLocation","setDefaultWard","updateLayeredNavigation","handlePriceChange","event","newValue","length","map","dataToFilter","delayUpdateLayeredNavigation","handleAreaChange","timerId","setTimeout","clearTimeout","onChangeDistricts","citySlug","defaultCity","onChangeWards","districtSlug","defaultDistrict","onChangeType","isChild","isType1","slugToUpdateChildType","isResetChildType","timer","resetParentType","page","onClickDirection","onClickBedRoom","cityId","districts","districtId","wards","handleFieldChange","title","defaultKeywordValue","defaultWard","className","target","typePage","params","direction","bedRoom"],"mappings":"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","sourcesContent":["import React, {FunctionComponent, useEffect} from 'react';\r\n//Import Material Libs\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete, { createFilterOptions } from '@material-ui/lab/Autocomplete';\r\nimport Typography from '@material-ui/core/Typography';\r\n//Import Dynamic\r\nimport dynamic from 'next/dynamic';\r\n//Import without SSR Slider\r\nconst Slider = dynamic(() => import('@material-ui/core/Slider'), {\r\n  ssr: false\r\n});\r\n//Import Apollo Client\r\nimport {apolloClient} from \"../../utils\";\r\n//Import Query GraphQL\r\nimport {GET_CITY_LIST} from \"../../graphql/city/queries\"\r\nimport {GET_DISTRICT_LIST} from \"../../graphql/district/queries\";\r\nimport {GET_WARD_LIST} from \"../../graphql/ward/queries\";\r\nimport {GET_DIRECTIONS} from \"../../graphql/directions/queries\";\r\nimport {adSellLeaseType, adSellLeaseCategory} from \"../../constants\";\r\nimport {DataLayeredNavigationProps} from '../../interfaces/interface';\r\nimport Validator from \"../../modules/validator\";\r\n\r\nfunction valueText(value: number) {\r\n  return `${value}`;\r\n}\r\n\r\nconst bedRoomNumber = [\r\n  {node: {id: 1, value: {max: 2, min: 0}, name: '0 - 2 phòng'}},\r\n  {node: {id: 2, value: {max: 5, min: 3}, name: '3 - 5 phòng'}},\r\n  {node: {id: 3, value: {max: 100, min: 6}, name: 'trên 5 phòng'}}\r\n];\r\n\r\ninterface LayeredNavigationItem {\r\n  node: {\r\n    id: string;\r\n    name: string;\r\n    slug: string;\r\n    default_slug: string\r\n  }\r\n}\r\n\r\ninterface TypeAdSellLeaseItem {\r\n  id: string;\r\n  name: string;\r\n  slug: string;\r\n  parent_slug: string;\r\n}\r\n\r\ninterface LayeredNavigationBedRoom {\r\n  node: {\r\n    id: number;\r\n    value: RangeValue;\r\n    name: string;\r\n  }\r\n}\r\n\r\ninterface LayeredNavigationProps {\r\n  className: string;\r\n  updateLayeredNavigation: (data: DataLayeredNavigationProps) => void;\r\n  dataLayeredNavigation: DataLayeredNavigationProps;\r\n  typePage: string\r\n}\r\n\r\ninterface RangeValue {\r\n  max: number;\r\n  min: number;\r\n}\r\n\r\nconst LayeredNavigation: FunctionComponent<LayeredNavigationProps> = (props: LayeredNavigationProps) => {\r\n  const [openDirection, setOpenDirection] = React.useState(true);\r\n  const handleClickDirection = () => {\r\n    setOpenDirection(!openDirection);\r\n  };\r\n\r\n  const [openBedRoom, setOpenBedRoom] = React.useState(true);\r\n  const handleClickBedRoom = () => {\r\n    setOpenBedRoom(!openBedRoom);\r\n  };\r\n\r\n  let priceRangeValue = [0, 50];\r\n  //set Price\r\n  if (!Validator.isBlank(props.dataLayeredNavigation.price_range.max) || !Validator.isBlank(props.dataLayeredNavigation.price_range.min)) {\r\n    let minValue = Number(props.dataLayeredNavigation.price_range.min/1000000000);\r\n    let maxValue = Number(props.dataLayeredNavigation.price_range.max/1000000000);\r\n    priceRangeValue = [minValue, maxValue];\r\n  }\r\n\r\n  let areaRangeValue = [0, 500];\r\n  //set AreaRangeValue\r\n  if (!Validator.isBlank(props.dataLayeredNavigation.area_range.max) || !Validator.isBlank(props.dataLayeredNavigation.area_range.min)) {\r\n    areaRangeValue = [props.dataLayeredNavigation.area_range.min, props.dataLayeredNavigation.area_range.max];\r\n  };\r\n\r\n  let idBedRoomNumber = -1;\r\n  if (Number(props.dataLayeredNavigation.bed_room_number.max) < 3 && Number(props.dataLayeredNavigation.bed_room_number.max) > 0) {\r\n    idBedRoomNumber = 1;\r\n  }\r\n  if (Number(props.dataLayeredNavigation.bed_room_number.max) < 6 && Number(props.dataLayeredNavigation.bed_room_number.max) > 2) {\r\n    idBedRoomNumber = 2;\r\n  }\r\n  if (5 < Number(props.dataLayeredNavigation.bed_room_number.max)) {\r\n    idBedRoomNumber = 3;\r\n  }\r\n\r\n  const [priceValue, setPriceValue] = React.useState<number[]>(priceRangeValue);\r\n  const [areaValue, setAreaValue] = React.useState<number[]>(areaRangeValue);\r\n  const [citesList, setCitesList] = React.useState<LayeredNavigationItem[]>();\r\n  const [districtList, setDistrictList] = React.useState<LayeredNavigationItem[]>();\r\n  const [wardList, setWardList] = React.useState<LayeredNavigationItem[]>();\r\n  const [directionList, setDirectionList] = React.useState<LayeredNavigationItem[]>();\r\n  const [activeBedRoom, setActiveBedRoom] = React.useState<number>(idBedRoomNumber);\r\n  const [activeDirection, setActiveDirection] = React.useState<string>(String(props.dataLayeredNavigation.home_direction));\r\n  const [typeAdSellLeaseParent, setTypeAddSellLeaseParent] =  React.useState<TypeAdSellLeaseItem[]>();\r\n  const [typeAdSellLeaseChild, setTypeAddSellLeaseChild] = React.useState<TypeAdSellLeaseItem[]>();\r\n\r\n  const closeIcon = (\r\n    <svg viewBox='0 0 352 512'><path d='M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z'/></svg>\r\n  );\r\n\r\n  let defaultTypeChild = null;\r\n  let defaultTypeParent: { type1_slug: any; id?: string; slug?: string; name?: string; parent_slug?: string; } | null = null;\r\n  let defaultType1Parent: { slug: any; id?: string; name?: string; parent_slug?: string; } | null = null;\r\n  let defaultParentSlug = '';\r\n  let parentUpdateASLSlug = '';\r\n\r\n  const updateASLChildType = (slugInput: string) => {\r\n    let dataChildType = [];\r\n    for (let indexType in adSellLeaseType) {\r\n      if (adSellLeaseType[indexType].parent_slug === slugInput) {\r\n        dataChildType.push(adSellLeaseType[indexType]);\r\n      }\r\n    }\r\n    setTypeAddSellLeaseChild(dataChildType);\r\n  };\r\n\r\n  if (props.dataLayeredNavigation && props.dataLayeredNavigation.type2) {\r\n    for (let indexType in adSellLeaseType) {\r\n      if (adSellLeaseType[indexType].slug === props.dataLayeredNavigation.type_slug) {\r\n        if (adSellLeaseType[indexType].parent_slug) {\r\n          defaultTypeChild = adSellLeaseType[indexType];\r\n          defaultParentSlug = adSellLeaseType[indexType].parent_slug;\r\n        } else {\r\n          defaultTypeParent = adSellLeaseType[indexType];\r\n          parentUpdateASLSlug = adSellLeaseType[indexType].slug;\r\n        }\r\n\r\n        let type1Slug = adSellLeaseType[indexType].type1_slug;\r\n        for (let indexType in adSellLeaseCategory) {\r\n          if (adSellLeaseCategory[indexType].slug === type1Slug) {\r\n            defaultType1Parent = adSellLeaseCategory[indexType];\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (defaultParentSlug) {\r\n      for (let indexType in adSellLeaseType) {\r\n        if (defaultParentSlug === adSellLeaseType[indexType].slug) {\r\n          defaultTypeParent = adSellLeaseType[indexType];\r\n        }\r\n      }\r\n    }\r\n    //Set default Type1 ASL\r\n  }\r\n\r\n  if (props.dataLayeredNavigation && props.dataLayeredNavigation.type1) {\r\n    for (let indexType in adSellLeaseCategory) {\r\n      if (adSellLeaseCategory[indexType].slug === props.dataLayeredNavigation.type_slug) {\r\n        defaultType1Parent = adSellLeaseCategory[indexType];\r\n      }\r\n    }\r\n  }\r\n  const [defaultAslType2Child, setDefaultAslType2Child] = React.useState<any>(defaultTypeChild);\r\n  const [defaultAslType2Parent, setDefaultAslType2Parent] = React.useState<any>(defaultTypeParent);\r\n  const [defaultAslType1Parent, setDefaultAslType1Parent] = React.useState<any>(defaultType1Parent);\r\n  const [currentAslType2Child, setCurrentAslType2Child] = React.useState<any>(defaultTypeChild);\r\n  const [currentAslType2Parent, setCurrentAslType2Parent] = React.useState<any>(defaultTypeParent);\r\n  const [currentAslType1Parent, setCurrentAslType1Parent] = React.useState<any>(defaultType1Parent);\r\n\r\n  let type1SlugString = '';\r\n  if (props.dataLayeredNavigation.type1) {\r\n    // @ts-ignore\r\n    if (!Validator.isBlank(defaultType1Parent) && defaultType1Parent.slug) {\r\n      // @ts-ignore\r\n      type1SlugString = defaultType1Parent.slug;\r\n    }\r\n  } else {\r\n    // @ts-ignore\r\n    if (!Validator.isBlank(defaultTypeParent) && defaultTypeParent.type1_slug) {\r\n      // @ts-ignore\r\n      type1SlugString = defaultTypeParent.type1_slug;\r\n    }\r\n  }\r\n\r\n  const [type1Slug, setType1Slug] = React.useState<string>(type1SlugString);\r\n\r\n  const updateASLParentType = (type1SlugString: string) => {\r\n    let dataParentType = [];\r\n    for (let indexType in adSellLeaseType) {\r\n      if ((!adSellLeaseType[indexType].parent_slug || Validator.isBlank(!adSellLeaseType[indexType].parent_slug)) && (type1SlugString === adSellLeaseType[indexType].type1_slug)) {\r\n        dataParentType.push(adSellLeaseType[indexType]);\r\n      }\r\n    }\r\n    setTypeAddSellLeaseParent(dataParentType);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (defaultParentSlug) {\r\n      updateASLChildType(defaultParentSlug);\r\n    }\r\n    if (parentUpdateASLSlug) {\r\n      updateASLChildType(parentUpdateASLSlug);\r\n    }\r\n    apolloClient.query({query: GET_CITY_LIST, variables: {\r\n      \"page\": 1,\r\n      \"limit\": 1000,\r\n      \"filter\": \"'{}'\"\r\n    }}).then(response => {\r\n      if (typeof response.data.citys.edges !== \"undefined\") {\r\n        setCitesList(response.data.citys.edges);\r\n        for (let index in response.data.citys.edges) {\r\n          if (response.data.citys.edges[index].node.id === props.dataLayeredNavigation.city) {\r\n            setDefaultCity(response.data.citys.edges[index]);\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    if (!Validator.isBlank(props.dataLayeredNavigation.city)) {\r\n      updateDistrictLayeredNavigation(props.dataLayeredNavigation.city);\r\n    }\r\n    if (!Validator.isBlank(props.dataLayeredNavigation.district)) {\r\n      updateWardLayeredNavigation(props.dataLayeredNavigation.district);\r\n    }\r\n\r\n    apolloClient.query({query: GET_DIRECTIONS, variables: {\r\n        \"page\": 1,\r\n        \"limit\": 1000,\r\n        \"filter\": \"'{}'\"\r\n      }}).then(response => {\r\n      if (typeof response.data.directions.edges !== \"undefined\") {\r\n        setDirectionList(response.data.directions.edges);\r\n      }\r\n    });\r\n\r\n    let typeParentASL = [];\r\n\r\n    for (let indexTypeASL in adSellLeaseType) {\r\n      let parentTypeASL = adSellLeaseType[indexTypeASL].parent_slug;\r\n      if ((!parentTypeASL || Validator.isBlank(parentTypeASL)) && (type1Slug === adSellLeaseType[indexTypeASL].type1_slug)) {\r\n        typeParentASL.push(adSellLeaseType[indexTypeASL]);\r\n      }\r\n    }\r\n    setTypeAddSellLeaseParent(typeParentASL);\r\n\r\n  }, []);\r\n\r\n\r\n  const filterOptions = createFilterOptions({\r\n    matchFrom: 'any',\r\n    stringify: (option: LayeredNavigationItem) => option.node.name,\r\n  });\r\n  const filterOptionsASL = createFilterOptions({\r\n    matchFrom: 'any',\r\n    stringify: (option: TypeAdSellLeaseItem) => option.name,\r\n  });\r\n\r\n  const cityDataSelect = {\r\n    options: citesList,\r\n    getOptionLabel: (option: LayeredNavigationItem) => option.node.name,\r\n    filterOptions: filterOptions\r\n  };\r\n\r\n  const districtDataSelect = {\r\n    options: districtList,\r\n    getOptionLabel: (option: LayeredNavigationItem) => option.node.name,\r\n    filterOptions: filterOptions\r\n  };\r\n\r\n  const wardDataSelect = {\r\n    options: wardList,\r\n    getOptionLabel: (option: LayeredNavigationItem) => option.node.name,\r\n    filterOptions: filterOptions\r\n  };\r\n\r\n  const typeAdSellLeaseSelect = {\r\n    options: typeAdSellLeaseParent,\r\n    getOptionLabel: (option: TypeAdSellLeaseItem) => option.name,\r\n    filterOptions: filterOptionsASL\r\n  };\r\n\r\n  const type1AdSellLeaseSelect = {\r\n    options: adSellLeaseCategory,\r\n    getOptionLabel: (option: TypeAdSellLeaseItem) => option.name,\r\n    filterOptions: filterOptionsASL\r\n  };\r\n\r\n  const typeAdSellLeaseSelectChild = {\r\n    options: typeAdSellLeaseChild,\r\n    getOptionLabel: (option: TypeAdSellLeaseItem) => option.name,\r\n    filterOptions: filterOptionsASL\r\n  };\r\n\r\n  const [dataLayeredNavigation, setDataLayeredNavigation] = React.useState<DataLayeredNavigationProps>(props.dataLayeredNavigation);\r\n\r\n  const onChangeCites = (value: LayeredNavigationItem|null) => {\r\n    if (value) {\r\n      dataLayeredNavigation.city = value.node.id;\r\n      dataLayeredNavigation.slug = value.node.default_slug;\r\n      if (dataLayeredNavigation.type_slug === '/nha-dat-ban') {\r\n        dataLayeredNavigation.slug = value.node.slug;\r\n      }\r\n      updateDistrictLayeredNavigation(value.node.id);\r\n    } else {\r\n      dataLayeredNavigation.city = '';\r\n      dataLayeredNavigation.slug = '';\r\n    }\r\n    dataLayeredNavigation.district = '';\r\n    dataLayeredNavigation.ward = '';\r\n    resetDataLayeredNavigation();\r\n    setDistrictList([]);\r\n    setWardList([]);\r\n    setDataLayeredNavigation(dataLayeredNavigation);\r\n    //Set Default Value\r\n    setDefaultDistrict(defaultValueLocation);\r\n    setDefaultWard(defaultValueLocation);\r\n    props.updateLayeredNavigation(dataLayeredNavigation);\r\n  };\r\n\r\n  const handlePriceChange = (event: any, newValue: number | number[]) => {\r\n    setPriceValue(newValue as number[]);\r\n    if (Array.isArray(newValue) && newValue.length != null && newValue.length > 0) {\r\n      let minValue = 0;\r\n      let maxValue = 0;\r\n      newValue.map((value: number, index) => {\r\n        if (index === 0) {\r\n          minValue = value;\r\n        }\r\n        if (index === 1) {\r\n          maxValue = value;\r\n        }\r\n        let dataToFilter = {\r\n          min: minValue*1000000000,\r\n          max: maxValue*1000000000\r\n        };\r\n        dataLayeredNavigation.price_range = dataToFilter;\r\n        setDataLayeredNavigation(dataLayeredNavigation);\r\n        delayUpdateLayeredNavigation(dataLayeredNavigation);\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleAreaChange = (event: any, newValue: number | number[]) => {\r\n    setAreaValue(newValue as number[]);\r\n    if (Array.isArray(newValue) && newValue.length != null && newValue.length > 0) {\r\n      let minValue = 0;\r\n      let maxValue = 0;\r\n      newValue.map((value: number, index) => {\r\n        if (index === 0) {\r\n          minValue = value;\r\n        }\r\n        if (index === 1) {\r\n          maxValue = value;\r\n        }\r\n        let dataToFilter = {\r\n          min: minValue,\r\n          max: maxValue\r\n        };\r\n        dataLayeredNavigation.area_range = dataToFilter;\r\n        setDataLayeredNavigation(dataLayeredNavigation);\r\n        delayUpdateLayeredNavigation(dataLayeredNavigation);\r\n      });\r\n    }\r\n  };\r\n\r\n  let timerId = setTimeout(() => {}, 600);\r\n  // @ts-ignore\r\n  const delayUpdateLayeredNavigation = (dataLayeredNavigation: DataLayeredNavigationProps) => {\r\n    clearTimeout(timerId);\r\n    timerId = setTimeout(() => {\r\n      props.updateLayeredNavigation(dataLayeredNavigation);\r\n    }, 600);\r\n  };\r\n\r\n  const onChangeDistricts = (value: LayeredNavigationItem|null) => {\r\n    if (value) {\r\n      dataLayeredNavigation.district = value.node.id;\r\n      dataLayeredNavigation.slug = value.node.default_slug;\r\n      if (dataLayeredNavigation.type_slug === '/nha-dat-ban') {\r\n        dataLayeredNavigation.slug = value.node.slug;\r\n      }\r\n      updateWardLayeredNavigation(value.node.id);\r\n    } else {\r\n      let citySlug = defaultCity.node.default_slug;\r\n      if (dataLayeredNavigation.type_slug === '/nha-dat-ban') {\r\n        citySlug = defaultCity.node.slug;\r\n      }\r\n      dataLayeredNavigation.district = '';\r\n      dataLayeredNavigation.slug = citySlug;\r\n    }\r\n    resetDataLayeredNavigation();\r\n    dataLayeredNavigation.ward = '';\r\n    setWardList([]);\r\n    setDefaultWard(defaultValueLocation);\r\n    props.updateLayeredNavigation(dataLayeredNavigation);\r\n  };\r\n\r\n  const onChangeWards = (value: LayeredNavigationItem|null) => {\r\n    if (value) {\r\n      dataLayeredNavigation.ward = value.node.id;\r\n      dataLayeredNavigation.slug = value.node.default_slug;\r\n      if (dataLayeredNavigation.type_slug === '/nha-dat-ban') {\r\n        dataLayeredNavigation.slug = value.node.slug;\r\n      }\r\n    } else {\r\n      let districtSlug = defaultDistrict.node.default_slug;\r\n      if (dataLayeredNavigation.type_slug === '/nha-dat-ban') {\r\n        districtSlug = defaultDistrict.node.slug;\r\n      }\r\n      dataLayeredNavigation.district = '';\r\n      dataLayeredNavigation.ward = '';\r\n      dataLayeredNavigation.slug = districtSlug;\r\n    }\r\n    resetDataLayeredNavigation();\r\n    setDataLayeredNavigation(dataLayeredNavigation);\r\n    props.updateLayeredNavigation(dataLayeredNavigation);\r\n  };\r\n\r\n  const onChangeType = (value: TypeAdSellLeaseItem|null, isChild: boolean, isType1: boolean) => {\r\n    dataLayeredNavigation.district = '';\r\n    dataLayeredNavigation.ward = '';\r\n    dataLayeredNavigation.city = '';\r\n    dataLayeredNavigation.slug = '';\r\n    let slugToUpdateChildType = '';\r\n    let isResetChildType = false;\r\n    for (let indexType in adSellLeaseType) {\r\n      if (value && value.slug && (value.slug === adSellLeaseType[indexType].slug)) {\r\n        if (!value.parent_slug || Validator.isBlank(value.parent_slug)) {\r\n          slugToUpdateChildType = adSellLeaseType[indexType].slug;\r\n          isResetChildType = true;\r\n        }\r\n      }\r\n    }\r\n    if (isType1) {\r\n      isResetChildType = true;\r\n      // @ts-ignore\r\n      if (value) {\r\n        setType1Slug(value.slug);\r\n        setCurrentAslType1Parent(value);\r\n      }\r\n      setDefaultAslType2Child([]);\r\n      setDefaultAslType2Parent([]);\r\n    } else {\r\n      if (value) {\r\n        if (isChild) {\r\n          setCurrentAslType2Child(value);\r\n        } else {\r\n          setCurrentAslType2Parent(value);\r\n        }\r\n      }\r\n      setDefaultAslType2Child([]);\r\n    }\r\n    if (isResetChildType) {\r\n      setTypeAddSellLeaseChild([]);\r\n    }\r\n    if (slugToUpdateChildType) {\r\n      const timer = setTimeout(() => {\r\n        updateASLChildType(slugToUpdateChildType);\r\n      }, 200);\r\n    }\r\n\r\n    resetDataLayeredNavigation();\r\n    if (isType1) {\r\n      if (value) {\r\n        dataLayeredNavigation.type1 = value.id;\r\n        dataLayeredNavigation.type_slug = value.slug;\r\n      } else {\r\n        dataLayeredNavigation.type1 = '';\r\n        dataLayeredNavigation.type_slug = '';\r\n      }\r\n    } else {\r\n      if (value && value.id) {\r\n        dataLayeredNavigation.type2 = value.id;\r\n        dataLayeredNavigation.type_slug = value.slug;\r\n      } else {\r\n        dataLayeredNavigation.type2 = '';\r\n        dataLayeredNavigation.type_slug = '';\r\n      }\r\n    }\r\n\r\n    if (isType1) {\r\n      setTypeAddSellLeaseParent([]);\r\n      setTypeAddSellLeaseChild([]);\r\n      const resetParentType = setTimeout(() => {\r\n        // @ts-ignore\r\n        if (value) {\r\n          updateASLParentType(value.slug);\r\n        }\r\n      }, 500);\r\n    }\r\n\r\n    //Reset Parent Case\r\n    if (!value || !value.slug) {\r\n      setTypeAddSellLeaseChild([]);\r\n      if (isChild) {\r\n        setTypeAddSellLeaseParent([]);\r\n        setDefaultAslType2Parent(currentAslType2Parent);\r\n        const resetParentType = setTimeout(() => {\r\n          updateASLParentType(type1Slug);\r\n          updateASLChildType(currentAslType2Parent.slug);\r\n        }, 500);\r\n        dataLayeredNavigation.type2 = currentAslType2Parent.id;\r\n        dataLayeredNavigation.type_slug = currentAslType2Parent.slug;\r\n\r\n      }\r\n      if (!isChild && !isType1) {\r\n        dataLayeredNavigation.type1 = currentAslType1Parent.id;\r\n        dataLayeredNavigation.type_slug = currentAslType1Parent.slug;\r\n      }\r\n    }\r\n\r\n    setDataLayeredNavigation(dataLayeredNavigation);\r\n    props.updateLayeredNavigation(dataLayeredNavigation);\r\n  };\r\n\r\n  const resetDataLayeredNavigation = () => {\r\n    dataLayeredNavigation.page = 1;\r\n    dataLayeredNavigation.bed_room_number = {\r\n      max: 0,\r\n      min: 0\r\n    };\r\n    setActiveBedRoom(-1);\r\n    dataLayeredNavigation.home_direction = '';\r\n    setActiveDirection('');\r\n    dataLayeredNavigation.area_range = {\r\n      max: 0,\r\n      min: 0,\r\n    };\r\n    dataLayeredNavigation.price_range = {\r\n      max: 0,\r\n      min: 0\r\n    };\r\n    setPriceValue([0, 50]);\r\n    setAreaValue([0, 500]);\r\n    return dataLayeredNavigation;\r\n  };\r\n\r\n  const onClickDirection = (value: string) => {\r\n    if (value !== activeDirection) {\r\n      dataLayeredNavigation.home_direction = value;\r\n      setActiveDirection(value);\r\n    } else {\r\n      dataLayeredNavigation.home_direction = '';\r\n      setActiveDirection('');\r\n    }\r\n    setDataLayeredNavigation(dataLayeredNavigation);\r\n    props.updateLayeredNavigation(dataLayeredNavigation);\r\n  };\r\n\r\n  const onClickBedRoom = (value: RangeValue, id: number) => {\r\n    if (id !== activeBedRoom) {\r\n      dataLayeredNavigation.bed_room_number = value;\r\n      setActiveBedRoom(id);\r\n    } else {\r\n      dataLayeredNavigation.bed_room_number = {\r\n        max: 0,\r\n        min: 0\r\n      };\r\n      setActiveBedRoom(-1);\r\n    }\r\n    setDataLayeredNavigation(dataLayeredNavigation);\r\n    props.updateLayeredNavigation(dataLayeredNavigation);\r\n  };\r\n\r\n  const updateDistrictLayeredNavigation = (cityId: string|null) => {\r\n    apolloClient.query({query: GET_DISTRICT_LIST, variables: {\r\n        \"page\": 1,\r\n        \"limit\": 100,\r\n        \"filter\": \"{'city_id': '\"+cityId+\"'}\"\r\n      }}).then(response => {\r\n      if (typeof response.data.districts.edges !== \"undefined\") {\r\n        setDistrictList(response.data.districts.edges);\r\n        for (let index in response.data.districts.edges) {\r\n          if (response.data.districts.edges[index].node.id === props.dataLayeredNavigation.district) {\r\n            setDefaultDistrict(response.data.districts.edges[index]);\r\n          }\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  const updateWardLayeredNavigation = (districtId: string|null) => {\r\n    apolloClient.query({query: GET_WARD_LIST, variables: {\r\n        \"page\": 1,\r\n        \"limit\": 100,\r\n        \"filter\": \"{'district_id': '\"+districtId+\"'}\"\r\n      }}).then(response => {\r\n      if (typeof response.data.wards.edges !== \"undefined\") {\r\n        setWardList(response.data.wards.edges);\r\n        for (let index in response.data.wards.edges) {\r\n          if (response.data.wards.edges[index].node.id === props.dataLayeredNavigation.ward) {\r\n            setDefaultWard(response.data.wards.edges[index]);\r\n          }\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleFieldChange = (event: any, title: string, value: string) => {\r\n    dataLayeredNavigation.name = value;\r\n    dataLayeredNavigation.title = value;\r\n    setDataLayeredNavigation(dataLayeredNavigation);\r\n    delayUpdateLayeredNavigation(dataLayeredNavigation);\r\n  };\r\n\r\n  let defaultKeywordValue = '';\r\n  if (!Validator.isBlank(props.dataLayeredNavigation.name)) {\r\n    defaultKeywordValue = String(props.dataLayeredNavigation.name);\r\n  }\r\n\r\n  if (!Validator.isBlank(props.dataLayeredNavigation.title)) {\r\n    defaultKeywordValue = String(props.dataLayeredNavigation.title);\r\n  }\r\n\r\n  let defaultValueLocation = {\r\n    node: {\r\n      id: '',\r\n      name: '',\r\n      slug: ''\r\n    }\r\n  };\r\n\r\n  const [defaultCity, setDefaultCity] = React.useState<any>(defaultValueLocation);\r\n  const [defaultDistrict, setDefaultDistrict] = React.useState<any>(defaultValueLocation);\r\n  const [defaultWard, setDefaultWard] = React.useState<any>(defaultValueLocation);\r\n\r\n  // @ts-ignore\r\n  // @ts-ignore\r\n  return (\r\n    <Grid className={props.className}>\r\n      <Grid container className=\"search_layered__title\">Lọc kết quả tìm kiếm</Grid>\r\n      <TextField\r\n        id=\"standard-basic\"\r\n        label=\"Từ khóa\"\r\n        className=\"search_layered__keyword\"\r\n        defaultValue={defaultKeywordValue}\r\n        onChange={event => handleFieldChange(event, 'title', event.target.value)}\r\n      />\r\n      {\r\n        (props.typePage === 'ad-sell-lease-location' || props.typePage === 'ad-sell-lease-index') &&\r\n        <FormControl className=\"search_layered__select\">\r\n          <Autocomplete\r\n            {...type1AdSellLeaseSelect}\r\n            clearOnEscape\r\n            defaultValue={defaultAslType1Parent}\r\n            onChange={(event: any, value: TypeAdSellLeaseItem | null) => onChangeType(value, false, true)}\r\n            renderInput={params => <TextField {...params} label=\"Hình thức\" fullWidth/>}\r\n          />\r\n        </FormControl>\r\n      }\r\n      {\r\n        (typeAdSellLeaseParent && typeAdSellLeaseParent.length > 0 && (props.typePage === 'ad-sell-lease-location' || props.typePage === 'ad-sell-lease-index')) &&\r\n        <FormControl className=\"search_layered__select\">\r\n          <Autocomplete\r\n            {...typeAdSellLeaseSelect}\r\n            clearOnEscape\r\n            defaultValue={defaultAslType2Parent}\r\n            onChange={(event: any, value: TypeAdSellLeaseItem | null) => onChangeType(value, false, false)}\r\n            renderInput={params => <TextField {...params} label=\"Loại nhà đất\" fullWidth/>}\r\n          />\r\n        </FormControl>\r\n      }\r\n      {\r\n        typeAdSellLeaseChild && typeAdSellLeaseChild.length > 0 && (props.typePage === 'ad-sell-lease-location' || props.typePage === 'ad-sell-lease-index') &&\r\n        <FormControl className=\"search_layered__select\">\r\n          <Autocomplete\r\n            {...typeAdSellLeaseSelectChild}\r\n            clearOnEscape\r\n            defaultValue={defaultAslType2Child}\r\n            onChange={(event: any, value: TypeAdSellLeaseItem | null) => onChangeType(value, true, false)}\r\n            renderInput={params => <TextField {...params} label=\"Chi tiết Loại nhà đất\" fullWidth/>}\r\n          />\r\n        </FormControl>\r\n      }\r\n      <FormControl className=\"search_layered__select\">\r\n        {\r\n          // @ts-ignore\r\n          !Validator.isBlank(citesList) && !Validator.isBlank(citesList.length) && citesList.length > 0 && !Validator.isBlank(defaultCity.node.id) &&\r\n          <Autocomplete\r\n            {...cityDataSelect}\r\n            onChange={(event: any, value: LayeredNavigationItem | null) => onChangeCites(value)}\r\n            clearOnEscape\r\n            defaultValue={defaultCity}\r\n            renderInput={params => <TextField {...params} label=\"Tỉnh/Thành phố\" fullWidth/>}\r\n          />\r\n        }\r\n        {\r\n          // @ts-ignore\r\n          !Validator.isBlank(citesList) && !Validator.isBlank(citesList.length) && citesList.length > 0 && Validator.isBlank(defaultCity.node.id) &&\r\n          <Autocomplete\r\n            {...cityDataSelect}\r\n            onChange={(event: any, value: LayeredNavigationItem | null) => onChangeCites(value)}\r\n            clearOnEscape\r\n            renderInput={params => <TextField {...params} label=\"Tỉnh/Thành phố\" fullWidth/>}\r\n          />\r\n        }\r\n      </FormControl>\r\n      {\r\n        // @ts-ignore\r\n        districtList != null && districtList.length != null\r\n        && districtList.length > 0 && !Validator.isBlank(defaultDistrict.node.id) &&\r\n        <FormControl className=\"search_layered__select\">\r\n          <Autocomplete\r\n            {...districtDataSelect}\r\n            clearOnEscape\r\n            defaultValue={defaultDistrict}\r\n            onChange={(event: any, value: LayeredNavigationItem | null) => onChangeDistricts(value)}\r\n            renderInput={params => <TextField {...params} label=\"Quận/Huyện\" fullWidth/>}\r\n          />\r\n        </FormControl>\r\n      }\r\n      {\r\n        // @ts-ignore\r\n        districtList != null && districtList.length != null\r\n        && districtList.length > 0 && Validator.isBlank(defaultDistrict.node.id) &&\r\n        <FormControl className=\"search_layered__select\">\r\n          <Autocomplete\r\n            {...districtDataSelect}\r\n            clearOnEscape\r\n            onChange={(event: any, value: LayeredNavigationItem | null) => onChangeDistricts(value)}\r\n            renderInput={params => <TextField {...params} label=\"Quận/Huyện\" fullWidth/>}\r\n          />\r\n        </FormControl>\r\n      }\r\n      {\r\n        wardList != null && wardList.length != null\r\n        && wardList.length > 0 && !Validator.isBlank(defaultWard.node.id) &&\r\n        <FormControl className=\"search_layered__select margin_bottom\">\r\n          <Autocomplete\r\n            {...wardDataSelect}\r\n            clearOnEscape\r\n            defaultValue={defaultWard}\r\n            onChange={(event: any, value: LayeredNavigationItem | null) => onChangeWards(value)}\r\n            renderInput={params => <TextField {...params} label=\"Phường/Xã\" fullWidth/>}\r\n          />\r\n        </FormControl>\r\n      }\r\n      {\r\n        wardList != null && wardList.length != null\r\n        && wardList.length > 0 && Validator.isBlank(defaultWard.node.id) &&\r\n        <FormControl className=\"search_layered__select margin_bottom\">\r\n          <Autocomplete\r\n            {...wardDataSelect}\r\n            clearOnEscape\r\n            defaultValue={defaultWard}\r\n            onChange={(event: any, value: LayeredNavigationItem | null) => onChangeWards(value)}\r\n            renderInput={params => <TextField {...params} label=\"Phường/Xã\" fullWidth/>}\r\n          />\r\n        </FormControl>\r\n      }\r\n\r\n      <Typography id=\"range-slider\" gutterBottom className=\"search_layered__slider__text\">\r\n        Diện tích (m<sup>2</sup>)\r\n      </Typography>\r\n      <Slider\r\n        className=\"search_layered__slider__content\"\r\n        value={areaValue}\r\n        onChange={handleAreaChange}\r\n        valueLabelDisplay=\"auto\"\r\n        aria-labelledby=\"range-slider\"\r\n        max={500}\r\n        getAriaValueText={valueText}\r\n      />\r\n\r\n      <Typography id=\"range-slider\" gutterBottom className=\"search_layered__slider__text\">\r\n        Khoảng giá (tỉ đồng)\r\n      </Typography>\r\n      <Slider\r\n        className=\"search_layered__slider__content\"\r\n        value={priceValue}\r\n        onChange={handlePriceChange}\r\n        valueLabelDisplay=\"auto\"\r\n        aria-labelledby=\"range-slider\"\r\n        getAriaValueText={valueText}\r\n        max={50}\r\n        step={0.5}\r\n      />\r\n\r\n      <List\r\n        component=\"nav\"\r\n        aria-labelledby=\"nested-list-subheader\"\r\n        className=\"search_layered__dropdown\"\r\n      >\r\n        {\r\n          directionList != null && directionList.length != null\r\n          && directionList.length > 0 &&\r\n          <div>\r\n            <ListItem button onClick={handleClickDirection}>\r\n              <ListItemText primary=\"Hướng nhà\" className=\"search_layered__expand\"/>\r\n              {openDirection ? <ExpandLess/> : <ExpandMore/>}\r\n            </ListItem>\r\n            <Collapse in={openDirection} timeout=\"auto\" unmountOnExit className=\"search_layered__expand__list\">\r\n              {\r\n                directionList.map((direction: LayeredNavigationItem, index:number) => {\r\n                  return <ListItemText\r\n                    key={\"layered_second_\" + index}\r\n                    primary={\"Hướng \" + direction.node.name}\r\n                    secondary={closeIcon}\r\n                    className={(activeDirection === direction.node.id)?'search_layered__expand__list__item active':'search_layered__expand__list__item'}\r\n                    onClick={(event: React.MouseEvent<HTMLElement>) => onClickDirection(direction.node.id)}\r\n                  />\r\n                })\r\n              }\r\n            </Collapse>\r\n          </div>\r\n        }\r\n        <ListItem button onClick={handleClickBedRoom}>\r\n          <ListItemText primary=\"Số phòng\" className=\"search_layered__expand\"/>\r\n          {openBedRoom ? <ExpandLess/> : <ExpandMore/>}\r\n        </ListItem>\r\n        <Collapse in={openBedRoom} timeout=\"auto\" unmountOnExit className=\"search_layered__expand__list\">\r\n          {\r\n            bedRoomNumber.map((bedRoom: LayeredNavigationBedRoom, index:number) => {\r\n              return <ListItemText\r\n                key={\"layered_navigation_\" + index}\r\n                primary={bedRoom.node.name}\r\n                secondary={closeIcon}\r\n                className={(activeBedRoom === bedRoom.node.id)?'search_layered__expand__list__item active':'search_layered__expand__list__item'}\r\n                onClick={(event: React.MouseEvent<HTMLElement>) => onClickBedRoom(bedRoom.node.value, bedRoom.node.id)}\r\n              />\r\n            })\r\n          }\r\n        </Collapse>\r\n      </List>\r\n    </Grid>\r\n  );\r\n};\r\nexport default LayeredNavigation;\r\n"]},"metadata":{},"sourceType":"module"}
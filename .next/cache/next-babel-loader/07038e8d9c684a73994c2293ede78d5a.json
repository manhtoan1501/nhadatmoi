{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\manh nhan\\\\Desktop\\\\new_ndm\\\\components\\\\AdSellLeases\\\\BelongProject.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport { apolloClient } from \"../../utils\";\nimport { GET_PROJECT_BY_ID } from \"../../graphql/project/queries\";\nimport Validator from \"../../modules/validator\";\nimport StringProcess from \"../../modules/stringProcess\";\nimport Button from '@material-ui/core/Button';\nimport MapIcon from \"@material-ui/icons/PinDrop\";\nimport FullScreenIcon from \"@material-ui/icons/Fullscreen\";\nimport Link from \"next/link\";\n\nvar BelongProject = function BelongProject(props) {\n  var projectId = props.project;\n  var projectDefault = {\n    id: '',\n    name: '',\n    scale: '',\n    investor: '',\n    slug: '',\n    address: {\n      text: '',\n      ward: '',\n      district: '',\n      city: ''\n    },\n    intro_content: '',\n    cover_image: '',\n    seo_description: '',\n    created_at: '',\n    updated_at: ''\n  };\n\n  var _React$useState = React.useState(projectDefault),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      projectData = _React$useState2[0],\n      setProject = _React$useState2[1];\n\n  useEffect(function () {\n    apolloClient.query({\n      query: GET_PROJECT_BY_ID,\n      variables: {\n        \"id\": projectId\n      }\n    }).then(function (response) {\n      if (typeof response.data.project !== \"undefined\") {\n        setProject(response.data.project);\n      }\n    });\n  });\n\n  if (projectData && !Validator.isBlank(projectData.id)) {\n    var freshText = function freshText(input) {\n      input = StringProcess.stripProperties(input, []);\n      input = StringProcess.stripTags(input, '');\n      input = input.replace(/&nbsp;/g, ' ');\n      return input;\n    };\n\n    var convertDescription = function convertDescription(input) {\n      return input.replace(/&#(\\d+);/g, function (match, dec) {\n        return String.fromCharCode(dec);\n      });\n    };\n\n    var projectDescription = projectData.seo_description;\n\n    if (projectDescription === '' || !projectDescription) {\n      projectDescription = freshText(projectData.intro_content);\n      projectDescription = convertDescription(projectDescription);\n      projectDescription = StringProcess.truncateString(projectDescription, 255, '...');\n    }\n\n    return __jsx(\"div\", {\n      className: \"project-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, __jsx(\"h2\", {\n      className: \"project-info-title text-active u-margin-bottom-small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Th\\xF4ng tin d\\u1EF1 \\xE1n\"), __jsx(Link, {\n      href: \"/du-an/[slug]\",\n      as: '/du-an/' + projectData.slug,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: 'project-info__belong_project',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: 'project-info__belong_project__avatar',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      src: projectData.cover_image,\n      alt: projectData.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: 'project-info__belong_project__title',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: 'project-info__belong_project__title__name',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, projectData.name), __jsx(\"div\", {\n      className: 'project-info__belong_project__title__description',\n      dangerouslySetInnerHTML: {\n        __html: projectDescription\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      className: 'project-info__belong_project__title__description',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      className: 'project-info__belong_project__title__description__detail',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, __jsx(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, __jsx(MapIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), \" \\u0110\\u1ECBa ch\\u1EC9: \", projectData.address.text)), __jsx(\"p\", {\n      className: 'project-info__belong_project__title__description__detail',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, __jsx(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, __jsx(FullScreenIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), \" Quy m\\xF4: \", projectData.scale))), __jsx(\"div\", {\n      className: 'project-info__belong_project__title__button',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, __jsx(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Truy c\\u1EADp d\\u1EF1 \\xE1n\")))))));\n  } else {\n    return __jsx(React.Fragment, null);\n  }\n};\n\nexport default BelongProject;","map":{"version":3,"sources":["C:/Users/manh nhan/Desktop/new_ndm/components/AdSellLeases/BelongProject.tsx"],"names":["React","useEffect","apolloClient","GET_PROJECT_BY_ID","Validator","StringProcess","Button","MapIcon","FullScreenIcon","Link","BelongProject","props","projectId","project","projectDefault","id","name","scale","investor","slug","address","text","ward","district","city","intro_content","cover_image","seo_description","created_at","updated_at","useState","projectData","setProject","query","variables","then","response","data","isBlank","freshText","input","stripProperties","stripTags","replace","convertDescription","match","dec","String","fromCharCode","projectDescription","truncateString","__html"],"mappings":"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","sourcesContent":["import React, {FunctionComponent, useEffect} from \"react\";\r\nimport {apolloClient} from \"../../utils\";\r\nimport {GET_PROJECT_BY_ID} from \"../../graphql/project/queries\";\r\nimport Validator from \"../../modules/validator\";\r\nimport StringProcess from \"../../modules/stringProcess\";\r\nimport Button from '@material-ui/core/Button';\r\nimport MapIcon from \"@material-ui/icons/PinDrop\";\r\nimport FullScreenIcon from \"@material-ui/icons/Fullscreen\";\r\nimport Link from \"next/link\";\r\n\r\ninterface BelongProjectProps {\r\n  project: string\r\n}\r\n\r\nconst BelongProject: FunctionComponent<BelongProjectProps> = (props: BelongProjectProps) => {\r\n  let projectId = props.project;\r\n  let projectDefault = {\r\n    id: '',\r\n    name: '',\r\n    scale: '',\r\n    investor: '',\r\n    slug: '',\r\n    address: {\r\n      text: '',\r\n      ward: '',\r\n      district: '',\r\n      city: '',\r\n    },\r\n    intro_content: '',\r\n    cover_image: '',\r\n    seo_description: '',\r\n    created_at: '',\r\n    updated_at: ''\r\n  };\r\n  const [projectData, setProject] = React.useState(projectDefault);\r\n  useEffect(() => {\r\n    apolloClient.query({\r\n      query: GET_PROJECT_BY_ID, variables: {\r\n        \"id\": projectId\r\n      }\r\n    }).then(response => {\r\n      if (typeof response.data.project !== \"undefined\") {\r\n        setProject(response.data.project);\r\n      }\r\n    });\r\n  });\r\n\r\n  if (projectData && !Validator.isBlank(projectData.id)) {\r\n    const freshText = (input: string) => {\r\n      input = StringProcess.stripProperties(input, []);\r\n      input = StringProcess.stripTags(input, '');\r\n      input = input.replace(/&nbsp;/g, ' ');\r\n      return input;\r\n    };\r\n    const convertDescription = (input: string) => {\r\n      return input.replace(/&#(\\d+);/g, function(match, dec) {\r\n        return String.fromCharCode(dec);\r\n      });\r\n    };\r\n\r\n    let projectDescription = projectData.seo_description;\r\n\r\n    if (projectDescription === '' || !projectDescription) {\r\n      projectDescription = freshText(projectData.intro_content);\r\n      projectDescription = convertDescription(projectDescription);\r\n      projectDescription = StringProcess.truncateString(projectDescription, 255, '...');\r\n    }\r\n    return (\r\n      <div className=\"project-info\">\r\n        <h2 className=\"project-info-title text-active u-margin-bottom-small\">Thông tin dự án</h2>\r\n        <Link href='/du-an/[slug]' as={'/du-an/' + projectData.slug}><a>\r\n          <div className={'project-info__belong_project'}>\r\n            <div className={'project-info__belong_project__avatar'}>\r\n              <img src={projectData.cover_image} alt={projectData.name}/>\r\n            </div>\r\n            <div className={'project-info__belong_project__title'}>\r\n              <div className={'project-info__belong_project__title__name'}>\r\n                {projectData.name}\r\n              </div>\r\n              <div className={'project-info__belong_project__title__description'} dangerouslySetInnerHTML={{__html: projectDescription}}>\r\n              </div>\r\n              <div className={'project-info__belong_project__title__description'}>\r\n                <p className={'project-info__belong_project__title__description__detail'}>\r\n                  <b><MapIcon/> Địa chỉ: {projectData.address.text}</b>\r\n                </p>\r\n                <p className={'project-info__belong_project__title__description__detail'}>\r\n                  <b><FullScreenIcon/> Quy mô: {projectData.scale}</b>\r\n                </p>\r\n              </div>\r\n              <div className={'project-info__belong_project__title__button'}>\r\n                <Button>Truy cập dự án</Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </a>\r\n        </Link>\r\n\r\n      </div>\r\n    );\r\n  } else {\r\n    return (<></>);\r\n  }\r\n};\r\n\r\nexport default BelongProject;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { urlImageAdSellLease, urlImageProject, urlImageBroker, imageDefaultProject, imageDefaultBroker } from \"../constants\";\n\nconst processImageUrl = (imageUrl, type) => {\n  let statusUrl = validURL(imageUrl);\n\n  if (statusUrl && imageUrl) {\n    imageUrl = imageUrl.replace(/nhadatmoi.s3.ap-southeast-1.amazonaws.com/g, \"static.nhadatmoi.net\");\n    imageUrl = imageUrl.replace(/nhadatmoi.s3-ap-southeast-1.amazonaws.com/g, \"static.nhadatmoi.net\");\n    imageUrl = imageUrl.replace(/nhadatmoi.s3.amazonaws.com/g, \"static.nhadatmoi.net\");\n    imageUrl = imageUrl.replace(/http:\\/\\//g, \"https://\");\n\n    if (imageUrl === 'https://static.nhadatmoi.net/data/ad_sell_lease_image/' || imageUrl === 'https://static.nhadatmoi.net/data/project_image/') {\n      return getImageDefaultByType(type);\n    }\n\n    return imageUrl;\n  } else {\n    if (!imageUrl || imageUrl === '' || imageUrl === null) {\n      return getImageDefaultByType(type);\n    } else {\n      let baseUrl = getBaseUrlByType(type);\n      return baseUrl + imageUrl;\n    }\n  }\n};\n\nconst getBaseUrlByType = type => {\n  let baseUrl = '';\n\n  switch (type) {\n    case 'ad_sell_lease':\n      baseUrl = urlImageAdSellLease;\n      break;\n\n    case 'project':\n      baseUrl = urlImageProject;\n      break;\n\n    case 'broker':\n      baseUrl = urlImageBroker;\n      break;\n  }\n\n  return baseUrl;\n};\n\nconst getImageDefaultByType = type => {\n  let imageDefault = '';\n\n  switch (type) {\n    case 'ad_sell_lease':\n      imageDefault = imageDefaultProject;\n      break;\n\n    case 'project':\n      imageDefault = imageDefaultProject;\n      break;\n\n    case 'broker':\n      imageDefault = imageDefaultBroker;\n      break;\n  }\n\n  return imageDefault;\n};\n\nconst validURL = str => {\n  if (!str || str === '' || str === null) {\n    return false;\n  }\n\n  if (str.indexOf('http') !== -1) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport default {\n  processImageUrl\n};","map":{"version":3,"sources":["C:/Users/manh nhan/Desktop/Nhadatmoi/modules/urlProcess.tsx"],"names":["urlImageAdSellLease","urlImageProject","urlImageBroker","imageDefaultProject","imageDefaultBroker","processImageUrl","imageUrl","type","statusUrl","validURL","replace","getImageDefaultByType","baseUrl","getBaseUrlByType","imageDefault","str","indexOf"],"mappings":"AAAA,SACEA,mBADF,EAEEC,eAFF,EAGEC,cAHF,EAIEC,mBAJF,EAKEC,kBALF,QAMO,cANP;;AAQA,MAAMC,eAAe,GAAG,CAACC,QAAD,EAA6BC,IAA7B,KAA8C;AACpE,MAAIC,SAAS,GAAGC,QAAQ,CAACH,QAAD,CAAxB;;AACA,MAAIE,SAAS,IAAIF,QAAjB,EAA2B;AACzBA,IAAAA,QAAQ,GAAGA,QAAQ,CAACI,OAAT,CAAiB,4CAAjB,EAA+D,sBAA/D,CAAX;AACAJ,IAAAA,QAAQ,GAAGA,QAAQ,CAACI,OAAT,CAAiB,4CAAjB,EAA+D,sBAA/D,CAAX;AACAJ,IAAAA,QAAQ,GAAGA,QAAQ,CAACI,OAAT,CAAiB,6BAAjB,EAAgD,sBAAhD,CAAX;AACAJ,IAAAA,QAAQ,GAAGA,QAAQ,CAACI,OAAT,CAAiB,YAAjB,EAA+B,UAA/B,CAAX;;AACA,QAAIJ,QAAQ,KAAK,wDAAb,IAAyEA,QAAQ,KAAK,kDAA1F,EAA8I;AAC5I,aAAOK,qBAAqB,CAACJ,IAAD,CAA5B;AACD;;AACD,WAAOD,QAAP;AACD,GATD,MASO;AACL,QAAI,CAACA,QAAD,IAAaA,QAAQ,KAAK,EAA1B,IAAgCA,QAAQ,KAAK,IAAjD,EAAuD;AACrD,aAAOK,qBAAqB,CAACJ,IAAD,CAA5B;AACD,KAFD,MAEO;AACL,UAAIK,OAAO,GAAGC,gBAAgB,CAACN,IAAD,CAA9B;AACA,aAAOK,OAAO,GAAGN,QAAjB;AACD;AACF;AACF,CAnBD;;AAqBA,MAAMO,gBAAgB,GAAIN,IAAD,IAAkB;AACzC,MAAIK,OAAO,GAAG,EAAd;;AACA,UAAQL,IAAR;AACE,SAAK,eAAL;AACEK,MAAAA,OAAO,GAAGZ,mBAAV;AACA;;AACF,SAAK,SAAL;AACEY,MAAAA,OAAO,GAAGX,eAAV;AACA;;AACF,SAAK,QAAL;AACEW,MAAAA,OAAO,GAAGV,cAAV;AACA;AATJ;;AAWA,SAAOU,OAAP;AACD,CAdD;;AAgBA,MAAMD,qBAAqB,GAAIJ,IAAD,IAAkB;AAC9C,MAAIO,YAAY,GAAG,EAAnB;;AACA,UAAQP,IAAR;AACE,SAAK,eAAL;AACEO,MAAAA,YAAY,GAAGX,mBAAf;AACA;;AACF,SAAK,SAAL;AACEW,MAAAA,YAAY,GAAGX,mBAAf;AACA;;AACF,SAAK,QAAL;AACEW,MAAAA,YAAY,GAAGV,kBAAf;AACA;AATJ;;AAWA,SAAOU,YAAP;AACD,CAdD;;AAgBA,MAAML,QAAQ,GAAIM,GAAD,IAA2B;AAC1C,MAAI,CAACA,GAAD,IAAQA,GAAG,KAAK,EAAhB,IAAsBA,GAAG,KAAK,IAAlC,EAAwC;AACtC,WAAO,KAAP;AACD;;AACD,MAAIA,GAAG,CAACC,OAAJ,CAAY,MAAZ,MAAwB,CAAC,CAA7B,EAAgC;AAC9B,WAAO,IAAP;AACD,GAFD,MAEO;AACL,WAAO,KAAP;AACD;AACF,CATD;;AAWA,eAAe;AACbX,EAAAA;AADa,CAAf","sourcesContent":["import {\r\n  urlImageAdSellLease,\r\n  urlImageProject,\r\n  urlImageBroker,\r\n  imageDefaultProject,\r\n  imageDefaultBroker\r\n} from \"../constants\";\r\n\r\nconst processImageUrl = (imageUrl: string|undefined, type: string) => {\r\n  let statusUrl = validURL(imageUrl);\r\n  if (statusUrl && imageUrl) {\r\n    imageUrl = imageUrl.replace(/nhadatmoi.s3.ap-southeast-1.amazonaws.com/g, \"static.nhadatmoi.net\");\r\n    imageUrl = imageUrl.replace(/nhadatmoi.s3-ap-southeast-1.amazonaws.com/g, \"static.nhadatmoi.net\");\r\n    imageUrl = imageUrl.replace(/nhadatmoi.s3.amazonaws.com/g, \"static.nhadatmoi.net\");\r\n    imageUrl = imageUrl.replace(/http:\\/\\//g, \"https://\");\r\n    if (imageUrl === 'https://static.nhadatmoi.net/data/ad_sell_lease_image/' || imageUrl === 'https://static.nhadatmoi.net/data/project_image/') {\r\n      return getImageDefaultByType(type);\r\n    }\r\n    return imageUrl;\r\n  } else {\r\n    if (!imageUrl || imageUrl === '' || imageUrl === null) {\r\n      return getImageDefaultByType(type);\r\n    } else {\r\n      let baseUrl = getBaseUrlByType(type);\r\n      return baseUrl + imageUrl;\r\n    }\r\n  }\r\n};\r\n\r\nconst getBaseUrlByType = (type: string) => {\r\n  let baseUrl = '';\r\n  switch (type) {\r\n    case 'ad_sell_lease':\r\n      baseUrl = urlImageAdSellLease;\r\n      break;\r\n    case 'project':\r\n      baseUrl = urlImageProject;\r\n      break;\r\n    case 'broker':\r\n      baseUrl = urlImageBroker;\r\n      break;\r\n  }\r\n  return baseUrl;\r\n};\r\n\r\nconst getImageDefaultByType = (type: string) => {\r\n  let imageDefault = '';\r\n  switch (type) {\r\n    case 'ad_sell_lease':\r\n      imageDefault = imageDefaultProject;\r\n      break;\r\n    case 'project':\r\n      imageDefault = imageDefaultProject;\r\n      break;\r\n    case 'broker':\r\n      imageDefault = imageDefaultBroker;\r\n      break;\r\n  }\r\n  return imageDefault;\r\n};\r\n\r\nconst validURL = (str: string|undefined) => {\r\n  if (!str || str === '' || str === null) {\r\n    return false;\r\n  }\r\n  if (str.indexOf('http') !== -1) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport default {\r\n  processImageUrl\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}
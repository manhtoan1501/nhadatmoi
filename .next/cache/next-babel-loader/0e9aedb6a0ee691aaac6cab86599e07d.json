{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\manh nhan\\\\Desktop\\\\Nhadatmoi\\\\components\\\\Chat\\\\Index.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Popper from '@material-ui/core/Popper';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { Grid, InputBase, Fade, Typography, Paper, CardHeader, Avatar, TextField, Divider, Tooltip, Input, IconButton } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport TagFacesIcon from '@material-ui/icons/TagFaces';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SendIcon from '@material-ui/icons/Send';\nimport { dataEmoji, arrChat, giphyDefault, theme, useStyles, themeTextfieldAdmin, themeTextfieldUser, StyledBadge } from \"./constant\";\nimport { create } from 'jss';\nimport rtl from 'jss-rtl';\nimport axios from \"axios\";\nimport { apiBaseURL } from \"../../constants\";\nimport \"cross-fetch/polyfill\";\nvar client = axios.create({\n  baseURL: apiBaseURL,\n  timeout: 30000\n});\nimport moment from \"moment\";\nimport 'moment/locale/es';\nmoment.locale('vi');\nimport { jssPreset } from '@material-ui/core/styles';\nvar jss = create({\n  plugins: [].concat(_toConsumableArray(jssPreset().plugins), [rtl()])\n});\nimport { Events, animateScroll as scroll, scroller } from 'react-scroll';\nexport default function PositionedPopper() {\n  var _this = this;\n\n  var classes = useStyles();\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      anchorEl = _React$useState2[0],\n      setAnchorEl = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      open = _React$useState4[0],\n      setOpen = _React$useState4[1];\n\n  var _React$useState5 = React.useState(),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      placement = _React$useState6[0],\n      setPlacement = _React$useState6[1];\n\n  var _React$useState7 = React.useState(true),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      online = _React$useState8[0],\n      setOnline = _React$useState8[1];\n\n  var _React$useState9 = React.useState(true),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      internet = _React$useState10[0],\n      setInternet = _React$useState10[1];\n\n  var _React$useState11 = React.useState(false),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      texting = _React$useState12[0],\n      setTexting = _React$useState12[1];\n\n  var _React$useState13 = React.useState(),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      giphyData = _React$useState14[0],\n      setGiphyData = _React$useState14[1];\n\n  var _React$useState15 = React.useState(false),\n      _React$useState16 = _slicedToArray(_React$useState15, 2),\n      openEmojiGiphy = _React$useState16[0],\n      setOpenEmojiGiphy = _React$useState16[1];\n\n  var _React$useState17 = React.useState(\"\"),\n      _React$useState18 = _slicedToArray(_React$useState17, 2),\n      valueSearchGiphy = _React$useState18[0],\n      setValueSearchGiphy = _React$useState18[1];\n\n  var _React$useState19 = React.useState(false),\n      _React$useState20 = _slicedToArray(_React$useState19, 2),\n      loading = _React$useState20[0],\n      setLoading = _React$useState20[1];\n\n  var _React$useState21 = React.useState(1),\n      _React$useState22 = _slicedToArray(_React$useState21, 2),\n      completed = _React$useState22[0],\n      setCompleted = _React$useState22[1];\n\n  var _React$useState23 = React.useState(\"https://image.crisp.chat/avatar/operator/da8d4459-5ea3-4119-bca1-9170f49ee69c/240/?1585999578742&quot\"),\n      _React$useState24 = _slicedToArray(_React$useState23, 2),\n      avatarImage = _React$useState24[0],\n      setAvatarImage = _React$useState24[1];\n\n  var _React$useState25 = React.useState(\"Nguyễn Thanh Hương\"),\n      _React$useState26 = _slicedToArray(_React$useState25, 2),\n      nameAdmin = _React$useState26[0],\n      setNameAdmin = _React$useState26[1];\n\n  var _React$useState27 = React.useState(\"\"),\n      _React$useState28 = _slicedToArray(_React$useState27, 2),\n      valueInput = _React$useState28[0],\n      setValueInput = _React$useState28[1];\n\n  var _React$useState29 = React.useState(false),\n      _React$useState30 = _slicedToArray(_React$useState29, 2),\n      viewEmoji = _React$useState30[0],\n      setViewEmoji = _React$useState30[1];\n\n  var onCloseChat = function onCloseChat() {\n    setOpen(false);\n  };\n\n  var setOnKeyPress = function setOnKeyPress(event) {// setTexting(true)\n  };\n\n  var setOnBlur = function setOnBlur(event) {// setTexting(true)\n  };\n\n  var setOnKeyDown = function setOnKeyDown(event) {\n    if (event.keyCode == 13) {\n      arrChat.push({\n        message: event.target.value,\n        type: 'user',\n        image: {\n          url: \"\",\n          width: \"\",\n          height: \"\"\n        },\n        date: String(new Date().getTime())\n      });\n      setValueInput(\"\");\n    }\n  };\n\n  var senMesssage = function senMesssage() {\n    arrChat.push({\n      message: valueInput,\n      type: 'user',\n      image: {\n        url: \"\",\n        width: \"\",\n        height: \"\"\n      },\n      date: String(new Date().getTime())\n    });\n    setValueInput(\"\");\n  };\n\n  React.useState(function () {\n    Events.scrollEvent.register('begin', function () {\n      console.log(\"begin\", arguments);\n    });\n    Events.scrollEvent.register('end', function () {\n      console.log(\"end\", arguments);\n    });\n  });\n\n  var scrollToTop = function scrollToTop() {\n    scroll.scrollToTop();\n  };\n\n  var scrollTo = function scrollTo() {\n    scroller.scrollTo('scroll-to-element', {\n      duration: 800,\n      delay: 0,\n      smooth: 'easeInOutQuart'\n    });\n  };\n\n  var scrollToWithContainer = function scrollToWithContainer() {// let goToContainer = new Promise((resolve, reject) => {\n    //   Events.scrollEvent.register('end', () => {\n    //     resolve();\n    //     Events.scrollEvent.remove('end');\n    //   });\n    //   scroller.scrollTo('scroll-container', {\n    //     duration: 800,\n    //     delay: 0,\n    //     smooth: 'easeInOutQuart'\n    //   });\n    // });\n    // goToContainer.then(() =>\n    //   scroller.scrollTo('scroll-container-second-element', {\n    //     duration: 800,\n    //     delay: 0,\n    //     smooth: 'easeInOutQuart',\n    //     containerId: 'scroll-container'\n    //   }));\n  };\n\n  var renderHeader = function renderHeader() {\n    return __jsx(CardHeader, {\n      className: classes.hearder,\n      avatar: __jsx(StyledBadge, {\n        overlap: \"circle\",\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right'\n        },\n        variant: online ? \"dot\" : \"standard\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }\n      }, __jsx(Avatar, {\n        src: avatarImage,\n        className: classes.sizeAvatarSmall,\n        alt: \"nhadatmoi.net\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }\n      })),\n      title: nameAdmin,\n      action: __jsx(IconButton, {\n        color: \"inherit\",\n        \"aria-label\": \"settings\",\n        onClick: function onClick() {\n          return onCloseChat();\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }\n      }, __jsx(CloseIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }\n      })),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 7\n      }\n    });\n  };\n\n  var setChangeInput = function setChangeInput(value) {\n    setValueInput(value);\n  };\n\n  var searchGiphy = function searchGiphy(event) {\n    var url, getData;\n    return _regeneratorRuntime.async(function searchGiphy$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setValueSearchGiphy(event.target.value);\n            url = \"https://api.giphy.com/v1/gifs/search?api_key=UgTMyvovmg74m8fPN6qYiB623nwS1IPc&q=\".concat(event.target.value, \"&limit=20&offset=0&rating=G&lang=vi\");\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(axios.get(url, {}).then(function (response) {\n              setGiphyData(response.data.data);\n            }));\n\n          case 4:\n            getData = _context.sent;\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var dataSearch = [];\n\n  if (Array.isArray(giphyData)) {\n    giphyData.map(function (item, index) {\n      dataSearch.push({\n        image: {\n          url: item.images.fixed_width.url,\n          height: item.images.fixed_width.height,\n          width: item.images.fixed_width.width\n        }\n      });\n    });\n  }\n\n  ;\n\n  var setItemGiphy = function setItemGiphy(index, name) {\n    setOpenEmojiGiphy(!openEmojiGiphy);\n\n    if (name == \"giphyDefault\") {\n      arrChat.push({\n        message: \"\",\n        type: 'user',\n        image: {\n          url: giphyDefault[index].image.url,\n          width: giphyDefault[index].image.width,\n          height: giphyDefault[index].image.height\n        },\n        date: String(new Date().getTime())\n      });\n    } else if (name == \"dataSearch\") {\n      arrChat.push({\n        message: \"\",\n        type: 'user',\n        image: {\n          url: dataSearch[index].image.url,\n          width: dataSearch[index].image.width,\n          height: dataSearch[index].image.height\n        },\n        date: String(new Date().getTime())\n      });\n    }\n  };\n\n  var onClickEmoji = function onClickEmoji(index) {\n    valueInput = valueInput + dataEmoji[index][\"native\"];\n    setValueInput(valueInput);\n  };\n\n  var renderEmojiGiphy = function renderEmojiGiphy() {\n    return __jsx(\"div\", {\n      className: classes.emojiGiphy,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      className: classes.marinButtonEmojiGiphy,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }\n    }, __jsx(\"button\", {\n      className: classes.buttonEmojiGiphy,\n      onClick: function onClick() {\n        return setViewEmoji(true);\n      },\n      style: {\n        backgroundColor: !viewEmoji ? \"#aaa\" : \"\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }\n    }, \" Bi\\u1EC3u t\\u01B0\\u1EE3ng\"), __jsx(\"button\", {\n      className: classes.buttonEmojiGiphy,\n      onClick: function onClick() {\n        return setViewEmoji(false);\n      },\n      style: {\n        backgroundColor: viewEmoji ? \"#aaa\" : \"\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 11\n      }\n    }, \" \\u1EA2nh \\u0111\\u1ED9ng\")), !viewEmoji && __jsx(Paper, {\n      component: \"form\",\n      className: classes.rootPaper,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 25\n      }\n    }, __jsx(IconButton, {\n      type: \"submit\",\n      className: classes.iconButton,\n      \"aria-label\": \"search\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 13\n      }\n    }, __jsx(SearchIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 15\n      }\n    })), __jsx(InputBase, {\n      onChange: function onChange(e) {\n        return searchGiphy(e);\n      },\n      className: classes.inputBaseGiphy,\n      placeholder: \"T\\xECm ki\\u1EBFm\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 13\n      }\n    })), viewEmoji ? __jsx(\"div\", {\n      className: classes.overflowHeightEmoji,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 13\n      }\n    }, dataEmoji.map(function (item, index) {\n      return __jsx(\"div\", {\n        onClick: function onClick() {\n          return onClickEmoji(index);\n        },\n        key: index,\n        className: classes.itemEmoji,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 17\n        }\n      }, item[\"native\"]);\n    })) : __jsx(\"div\", {\n      className: classes.overflowHeightGiphy,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 13\n      }\n    }, valueSearchGiphy ? dataSearch.map(function (item, index) {\n      return __jsx(\"div\", {\n        className: classes.dispalyImageGiphy,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 23\n        }\n      }, __jsx(\"img\", {\n        className: classes.imgListGiphy,\n        alt: \"giphy\",\n        src: item.image.url,\n        onClick: function onClick() {\n          return setItemGiphy(index, \"dataSearch\");\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 25\n        }\n      }));\n    }) : giphyDefault.map(function (item, index) {\n      return __jsx(\"div\", {\n        className: classes.dispalyImageGiphy,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 23\n        }\n      }, __jsx(\"img\", {\n        className: classes.imgListGiphy,\n        alt: \"giphy\",\n        src: item.image.url,\n        onClick: function onClick() {\n          return setItemGiphy(index, \"giphyDefault\");\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 25\n        }\n      }));\n    })));\n  };\n\n  var renderContentChat = function renderContentChat() {\n    return __jsx(\"div\", {\n      className: classes.overflowHeightEmojiGiphy,\n      style: {\n        height: openEmojiGiphy ? '230px' : '430px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 7\n      }\n    }, __jsx(Typography, {\n      align: \"center\",\n      className: classes.textSizeNewDate,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }\n    }, moment().format('LLL')), __jsx(Divider, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }\n    }), arrChat.map(function (item, index) {\n      var checkNewDate = false;\n      var setViewAvatar = false;\n      var oldDate = index > 0 ? moment(Number(arrChat[index - 1].date)).format('YYYY-MM-DD') : '';\n      var newDate = moment(Number(arrChat[index].date)).format('YYYY-MM-DD');\n\n      if (index > 0 && oldDate !== newDate) {\n        checkNewDate = true;\n      }\n\n      if (item.type === 'admin' && index > 0) {\n        if (index === arrChat.length || arrChat[index - 1].type != arrChat[index].type || oldDate !== newDate) {\n          setViewAvatar = true;\n        }\n      } else if (item.type === 'admin' && index === 0) {\n        setViewAvatar = true;\n      }\n\n      var width = item.image.width;\n      var height = item.image.height;\n      return __jsx(\"div\", {\n        key: index,\n        style: {\n          display: \"block\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 13\n        }\n      }, checkNewDate && __jsx(Typography, {\n        align: \"center\",\n        className: classes.textSizeNewDate,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 33\n        }\n      }, moment(Number(item.date)).format(\"LLL\"), \" \", __jsx(Divider, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 59\n        }\n      })), item.type === 'admin' ? __jsx(ThemeProvider, {\n        theme: themeTextfieldAdmin,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 17\n        }\n      }, __jsx(\"div\", {\n        className: classes.viewAvatarChatContent,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 19\n        }\n      }, setViewAvatar && __jsx(Avatar, {\n        className: classes.avatarAdminText,\n        alt: \"nhadatmoi.net\",\n        src: avatarImage,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 40\n        }\n      })), __jsx(\"div\", {\n        className: classes.textFieldChatContent,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 19\n        }\n      }, item.image.url ? __jsx(Tooltip, {\n        title: moment(Number(item.date)).fromNow(),\n        placement: \"top\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 25\n        }\n      }, __jsx(\"div\", {\n        className: classes.viewContentImageGiphy,\n        style: {\n          width: \"\".concat(width, \"px\"),\n          height: \"\".concat(height, \"px\"),\n          \"float\": \"left\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 27\n        }\n      }, __jsx(\"img\", {\n        className: classes.imgGiphy,\n        alt: \"giphy\",\n        src: item.image.url,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 29\n        }\n      }))) : __jsx(Tooltip, {\n        title: moment(Number(item.date)).fromNow(),\n        placement: \"top\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 25\n        }\n      }, __jsx(\"div\", {\n        className: classes.textAdminLeft,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 27\n        }\n      }, __jsx(TextField, {\n        fullWidth: item.message.length > 12 ? true : false,\n        label: \"\",\n        className: classes.textAdmin,\n        value: item.message.trim(),\n        margin: \"dense\",\n        id: \"outlined-basic\",\n        multiline: true,\n        InputProps: {\n          readOnly: true\n        },\n        variant: \"outlined\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 29\n        }\n      }))))) : __jsx(ThemeProvider, {\n        theme: themeTextfieldUser,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 17\n        }\n      }, item.image.url ? __jsx(Tooltip, {\n        title: moment(Number(item.date)).fromNow(),\n        placement: \"top\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 23\n        }\n      }, __jsx(\"div\", {\n        className: classes.viewContentImageGiphy,\n        style: {\n          width: \"\".concat(width, \"px\"),\n          height: \"\".concat(height, \"px\"),\n          \"float\": \"right\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 25\n        }\n      }, __jsx(\"img\", {\n        className: classes.imgGiphy,\n        alt: \"giphy\",\n        src: item.image.url,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 27\n        }\n      }))) : __jsx(Tooltip, {\n        title: moment(Number(item.date)).fromNow(),\n        placement: \"top\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 23\n        }\n      }, __jsx(\"div\", {\n        className: classes.textFieldUserChatContent,\n        style: {\n          textAlign: \"right\"\n        },\n        dir: \"\".concat(item.message.length < 20 ? 'rtl' : \"\"),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 25\n        }\n      }, __jsx(TextField, {\n        fullWidth: item.message.length > 15 ? true : false,\n        label: \"\",\n        className: classes.textUser,\n        value: item.message.trim(),\n        margin: \"dense\",\n        id: \"outlined-basic\",\n        multiline: true,\n        InputProps: {\n          readOnly: true\n        },\n        variant: \"outlined\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 27\n        }\n      })))), __jsx(\"div\", {\n        style: {\n          clear: \"both\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 15\n        }\n      }));\n    }), !internet && __jsx(\"p\", {\n      className: classes.errInternet,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 23\n      }\n    }, \" \", __jsx(\"u\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 59\n      }\n    }, \"Kh\\xF4ng th\\u1EC3 g\\u1EEDi tin nh\\u1EAFn n\\xE0y. Ki\\u1EC3m tra k\\u1EBFt n\\u1ED1i internet v\\xE0 th\\u1EED l\\u1EA1i\")), texting && __jsx(\"p\", {\n      className: classes.texting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 21\n      }\n    }, \"\\u0110ang nh\\u1EADp ...\"));\n  };\n\n  var onClickOpenEmojiGiphy = function onClickOpenEmojiGiphy() {\n    setOpenEmojiGiphy(!openEmojiGiphy);\n    setViewEmoji(true);\n  };\n\n  var apiBaseURL = \"https://graph.nhadatmoi.net\";\n  var googleLogin = \"\".concat(apiBaseURL, \"/auth/google\");\n  var apiGraphQLURL = \"\".concat(apiBaseURL, \"/graphql\");\n  var apiUpload = \"\".concat(apiBaseURL, \"/upload_image\");\n\n  var api = function api(method, url, data) {\n    return client.request({\n      data: JSON.stringify(data),\n      headers: {\n        \"Accept\": \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      method: method,\n      url: url,\n      withCredentials: true\n    }).then(function (response) {\n      return response.data;\n    });\n  };\n\n  var upLoadImage = function upLoadImage(files) {\n    var reader = new FileReader();\n    var file = files.target.files[0];\n    reader.readAsDataURL(file); // reader.onload = () => {\n    //   setLoading(true);\n    //   setCompleted(0);\n    //   api(\"POST\", `${apiUpload}`, { \n    //     base64image: reader.result, \n    //     fileName: (new Date()).getTime() + \"\" + file.name,\n    //     typeUpload: \"ad_sell_lease\",\n    //   })\n    //   .then(function (res) {\n    //     console.log(\"res\", res)\n    //     // if(res){\n    //     //   pustImageChat(res)\n    //     // }\n    //     // getFile(res.location, file.name, file.size);\n    //     setLoading(false);\n    //   })\n    //   .catch(function (err) {\n    //     alert('HTTP Error: ' + err.message);\n    //   });\n    // };\n\n    reader.onload = function _callee() {\n      var url, getData;\n      return _regeneratorRuntime.async(function _callee$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              url = \"https://api.imgur.com/3/image\";\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(axios.get(url, {}).then(function (response) {\n                console.log(\"response\", response); // setGiphyData(response.data.data)\n              }));\n\n            case 3:\n              getData = _context2.sent;\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n  };\n\n  var pustImageChat = function pustImageChat(url) {\n    arrChat.push({\n      message: \"\",\n      type: 'user',\n      image: {\n        url: url,\n        width: \"250px\",\n        height: \"200px\"\n      },\n      date: String(new Date().getTime())\n    });\n  };\n\n  var renderInput = function renderInput() {\n    return __jsx(Paper, {\n      component: \"form\",\n      className: classes.inputBase,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 7\n      }\n    }, __jsx(ThemeProvider, {\n      theme: theme,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 9\n      }\n    }, __jsx(Input, {\n      fullWidth: true,\n      disabled: !internet,\n      margin: \"dense\",\n      id: \"outlined-basic\",\n      autoFocus: true,\n      value: valueInput,\n      multiline: true,\n      onChange: function onChange(e) {\n        return setChangeInput(e.target.value);\n      },\n      onKeyPress: function onKeyPress(e) {\n        return setOnKeyPress(e);\n      },\n      onBlur: function onBlur(e) {\n        return setOnBlur(e);\n      },\n      onKeyDown: function onKeyDown(e) {\n        return setOnKeyDown(e);\n      },\n      placeholder: \"Nh\\u1EADp tin nh\\u1EAFn ...\",\n      autoComplete: \"false\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 11\n      }\n    }), openEmojiGiphy ? __jsx(Tooltip, {\n      title: \"Ch\\xE8n bi\\u1EC3u t\\u01B0\\u1EE3ng\",\n      placement: \"top\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 15\n      }\n    }, __jsx(ExpandMoreIcon, {\n      className: classes.sizeIcon,\n      onClick: onClickOpenEmojiGiphy,\n      color: \"primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 17\n      }\n    })) : __jsx(Tooltip, {\n      title: \"Ch\\xE8n bi\\u1EC3u t\\u01B0\\u1EE3ng\",\n      placement: \"top\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 15\n      }\n    }, __jsx(TagFacesIcon, {\n      className: classes.sizeIcon,\n      onClick: onClickOpenEmojiGiphy,\n      color: \"primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 17\n      }\n    })), valueInput ? __jsx(Tooltip, {\n      title: \"G\\u1EEDi tin nh\\u1EAFn\",\n      placement: \"top\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 15\n      }\n    }, __jsx(SendIcon, {\n      onClick: senMesssage,\n      className: classes.sizeIcon,\n      color: \"primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 17\n      }\n    })) : __jsx(Tooltip, {\n      title: \"Th\\xEAm t\\u1EADp tin\",\n      placement: \"top\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 15\n      }\n    }, __jsx(\"div\", {\n      className: classes.inputWrapper,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 17\n      }\n    }, __jsx(AddCircleOutlineIcon, {\n      className: classes.sizeIcon,\n      color: \"primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 19\n      }\n    }), __jsx(\"input\", {\n      type: \"file\",\n      className: classes.fileInput,\n      onChange: upLoadImage,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 19\n      }\n    })))));\n  };\n\n  var viewChat = function viewChat() {\n    return __jsx(Popper, {\n      open: open,\n      anchorEl: anchorEl,\n      placement: placement,\n      transition: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 7\n      }\n    }, function (_ref) {\n      var TransitionProps = _ref.TransitionProps;\n      return __jsx(Fade, _extends({}, TransitionProps, {\n        timeout: 300,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 11\n        }\n      }), __jsx(Paper, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 13\n        }\n      }, __jsx(\"div\", {\n        className: classes.positionSizeViewChat,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 15\n        }\n      }, renderHeader(), renderContentChat(), openEmojiGiphy && renderEmojiGiphy(), renderInput())));\n    });\n  };\n\n  var handleClick = function handleClick(newPlacement) {\n    setOpen(true);\n    setPlacement(newPlacement);\n  };\n\n  var renderAvatar = function renderAvatar() {\n    return __jsx(\"div\", {\n      className: classes.positionAvatar,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 7\n      }\n    }, __jsx(StyledBadge, {\n      overlap: \"circle\",\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'right'\n      },\n      variant: online ? \"dot\" : \"standard\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 9\n      }\n    }, __jsx(Avatar, {\n      src: avatarImage,\n      onClick: function onClick() {\n        return handleClick(\"top-start\");\n      },\n      className: classes.large,\n      alt: \"nhadatmoi.net\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 11\n      }\n    })));\n  };\n\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 5\n    }\n  }, viewChat(), __jsx(Grid, {\n    container: true,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 552,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 553,\n      columnNumber: 9\n    }\n  }, !open && renderAvatar())));\n}\n;","map":{"version":3,"sources":["C:/Users/manh nhan/Desktop/Nhadatmoi/components/Chat/Index.tsx"],"names":["React","Popper","ThemeProvider","Grid","InputBase","Fade","Typography","Paper","CardHeader","Avatar","TextField","Divider","Tooltip","Input","IconButton","SearchIcon","AddCircleOutlineIcon","TagFacesIcon","ExpandMoreIcon","CloseIcon","SendIcon","dataEmoji","arrChat","giphyDefault","theme","useStyles","themeTextfieldAdmin","themeTextfieldUser","StyledBadge","create","rtl","axios","apiBaseURL","client","baseURL","timeout","moment","locale","jssPreset","jss","plugins","Events","animateScroll","scroll","scroller","PositionedPopper","classes","useState","anchorEl","setAnchorEl","open","setOpen","placement","setPlacement","online","setOnline","internet","setInternet","texting","setTexting","giphyData","setGiphyData","openEmojiGiphy","setOpenEmojiGiphy","valueSearchGiphy","setValueSearchGiphy","loading","setLoading","completed","setCompleted","avatarImage","setAvatarImage","nameAdmin","setNameAdmin","valueInput","setValueInput","viewEmoji","setViewEmoji","onCloseChat","setOnKeyPress","event","setOnBlur","setOnKeyDown","keyCode","push","message","target","value","type","image","url","width","height","date","String","Date","getTime","senMesssage","scrollEvent","register","console","log","arguments","scrollToTop","scrollTo","duration","delay","smooth","scrollToWithContainer","renderHeader","hearder","vertical","horizontal","sizeAvatarSmall","setChangeInput","searchGiphy","get","then","response","data","getData","dataSearch","Array","isArray","map","item","index","images","fixed_width","setItemGiphy","name","onClickEmoji","renderEmojiGiphy","emojiGiphy","marinButtonEmojiGiphy","buttonEmojiGiphy","backgroundColor","rootPaper","iconButton","e","inputBaseGiphy","overflowHeightEmoji","itemEmoji","overflowHeightGiphy","dispalyImageGiphy","imgListGiphy","renderContentChat","overflowHeightEmojiGiphy","textSizeNewDate","format","checkNewDate","setViewAvatar","oldDate","Number","newDate","length","display","viewAvatarChatContent","avatarAdminText","textFieldChatContent","fromNow","viewContentImageGiphy","imgGiphy","textAdminLeft","textAdmin","trim","readOnly","textFieldUserChatContent","textAlign","textUser","clear","errInternet","onClickOpenEmojiGiphy","googleLogin","apiGraphQLURL","apiUpload","api","method","request","JSON","stringify","headers","withCredentials","upLoadImage","files","reader","FileReader","file","readAsDataURL","onload","pustImageChat","renderInput","inputBase","sizeIcon","inputWrapper","fileInput","viewChat","TransitionProps","positionSizeViewChat","handleClick","newPlacement","renderAvatar","positionAvatar","large","root"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport Popper, { PopperPlacementType } from '@material-ui/core/Popper';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport { \r\n  Grid, \r\n  InputBase, \r\n  Fade,\r\n  Typography, \r\n  Paper, \r\n  CardHeader,\r\n  CardActionArea, \r\n  CardMedia, \r\n  Avatar, \r\n  TextField,\r\n  Badge, \r\n  Divider, \r\n  Tooltip, \r\n  Input, \r\n  Chip, \r\n  IconButton\r\n} from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport TagFacesIcon from '@material-ui/icons/TagFaces';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport { \r\n  Theme, \r\n  makeStyles, \r\n  withStyles, \r\n  createStyles\r\n} from '@material-ui/core/styles';\r\nimport { \r\n  dataEmoji, \r\n  arrChat, \r\n  giphyDefault, \r\n  theme, \r\n  useStyles,\r\n  themeTextfieldAdmin, \r\n  themeTextfieldUser, \r\n  StyledBadge\r\n} from \"./constant\"\r\nimport { create } from 'jss';\r\nimport rtl from 'jss-rtl';\r\nimport axios, {Method} from \"axios\";\r\nimport {apiBaseURL, apiGraphQLURL} from \"../../constants\";\r\nimport \"cross-fetch/polyfill\";\r\nimport ApolloClient from \"apollo-boost\";\r\nconst client = axios.create({ baseURL: apiBaseURL, timeout: 30000 });\r\nimport moment from \"moment\"\r\nimport 'moment/locale/es'   \r\nmoment.locale('vi')\r\nimport { StylesProvider, jssPreset } from '@material-ui/core/styles';\r\nconst jss = create({ plugins: [...jssPreset().plugins, rtl()] });\r\nimport { Link, DirectLink, Element, Events, animateScroll as scroll, scrollSpy, scroller } from 'react-scroll'\r\n\r\n\r\nexport default function PositionedPopper() {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(null);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [placement, setPlacement] = React.useState<PopperPlacementType>();\r\n  const [online, setOnline] = React.useState<boolean>(true);\r\n  const [internet, setInternet] = React.useState<boolean>(true);\r\n  const [texting, setTexting] = React.useState<boolean>(false);\r\n  const [giphyData, setGiphyData] = React.useState<any>();\r\n  const [openEmojiGiphy, setOpenEmojiGiphy] = React.useState<boolean>(false);\r\n  const [valueSearchGiphy, setValueSearchGiphy] = React.useState(\"\");\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [completed, setCompleted] = React.useState(1);\r\n  const [avatarImage, setAvatarImage] = React.useState(\"https://image.crisp.chat/avatar/operator/da8d4459-5ea3-4119-bca1-9170f49ee69c/240/?1585999578742&quot\")\r\n  const [nameAdmin, setNameAdmin] = React.useState(\"Nguyễn Thanh Hương\");\r\n  let   [valueInput, setValueInput] = React.useState(\"\");\r\n  const [viewEmoji, setViewEmoji] = React.useState(false);\r\n  const onCloseChat = () => {\r\n    setOpen(false)\r\n  };\r\n\r\n  const setOnKeyPress = (event: any) => {\r\n    // setTexting(true)\r\n  };\r\n\r\n  const setOnBlur = (event: any) => {\r\n    // setTexting(true)\r\n  };\r\n\r\n  const setOnKeyDown = (event: any) => {\r\n    if(event.keyCode == 13){\r\n      arrChat.push({ message: event.target.value, type: 'user', image: { url: \"\", width: \"\", height: \"\" }, date: String(new Date().getTime()) })\r\n      setValueInput(\"\")\r\n    }\r\n  };\r\n\r\n  const senMesssage = () => {\r\n    arrChat.push({ message: valueInput, type: 'user', image: { url: \"\", width: \"\", height: \"\" }, date: String(new Date().getTime()) })\r\n    setValueInput(\"\")\r\n  };\r\n\r\n  React.useState(() => {\r\n    Events.scrollEvent.register('begin', function () {\r\n      console.log(\"begin\", arguments);\r\n    });\r\n\r\n    Events.scrollEvent.register('end', function () {\r\n      console.log(\"end\", arguments);\r\n    });\r\n  })\r\n\r\n  const scrollToTop = () => {\r\n    scroll.scrollToTop();\r\n  }\r\n  const scrollTo = () => {\r\n    scroller.scrollTo('scroll-to-element', {\r\n      duration: 800,\r\n      delay: 0,\r\n      smooth: 'easeInOutQuart'\r\n    })\r\n  }\r\n\r\n  const scrollToWithContainer = () => {\r\n    // let goToContainer = new Promise((resolve, reject) => {\r\n    //   Events.scrollEvent.register('end', () => {\r\n    //     resolve();\r\n    //     Events.scrollEvent.remove('end');\r\n    //   });\r\n    //   scroller.scrollTo('scroll-container', {\r\n    //     duration: 800,\r\n    //     delay: 0,\r\n    //     smooth: 'easeInOutQuart'\r\n    //   });\r\n\r\n    // });\r\n\r\n    // goToContainer.then(() =>\r\n    //   scroller.scrollTo('scroll-container-second-element', {\r\n    //     duration: 800,\r\n    //     delay: 0,\r\n    //     smooth: 'easeInOutQuart',\r\n    //     containerId: 'scroll-container'\r\n    //   }));\r\n  }\r\n  \r\n\r\n  const renderHeader = () => {\r\n    return (\r\n      <CardHeader\r\n        className={classes.hearder}\r\n        avatar={\r\n          <StyledBadge\r\n            overlap=\"circle\"\r\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n            variant= { online ? \"dot\" : \"standard\" }\r\n          >\r\n            <Avatar src={avatarImage} className={classes.sizeAvatarSmall} alt=\"nhadatmoi.net\" />\r\n          </StyledBadge>\r\n        }\r\n        title={nameAdmin}\r\n        action={\r\n          <IconButton color='inherit' aria-label=\"settings\" onClick={() => onCloseChat()} >\r\n            <CloseIcon/>\r\n          </IconButton>\r\n        }\r\n      />\r\n    )\r\n  };\r\n\r\n  const setChangeInput = (value: any) => {\r\n    setValueInput(value)\r\n  };\r\n\r\n  const searchGiphy = async (event: any)=>  { \r\n    setValueSearchGiphy(event.target.value)\r\n    let url = `https://api.giphy.com/v1/gifs/search?api_key=UgTMyvovmg74m8fPN6qYiB623nwS1IPc&q=${event.target.value}&limit=20&offset=0&rating=G&lang=vi`\r\n    let getData = await axios.get(url, {})\r\n    .then(function (response) {\r\n      setGiphyData(response.data.data)\r\n    })\r\n  };\r\n\r\n  let dataSearch: any = [];\r\n  if(Array.isArray(giphyData)){\r\n    giphyData.map((item: any, index: number) => {\r\n      dataSearch.push({ \r\n        image: {\r\n          url: item.images.fixed_width.url,\r\n          height: item.images.fixed_width.height,\r\n          width: item.images.fixed_width.width,\r\n        }})\r\n    })\r\n  };\r\n\r\n  const setItemGiphy = (index: number, name: string) => {\r\n    setOpenEmojiGiphy(!openEmojiGiphy)\r\n    if(name == \"giphyDefault\") {\r\n      arrChat.push({ \r\n        message: \"\", \r\n        type: 'user', \r\n        image: {\r\n          url: giphyDefault[index].image.url,\r\n          width: giphyDefault[index].image.width,\r\n          height: giphyDefault[index].image.height,\r\n        },\r\n        date: String(new Date().getTime()) \r\n      })\r\n    } else if ( name == \"dataSearch\") {\r\n      arrChat.push({ \r\n        message: \"\", \r\n        type: 'user', \r\n        image: {\r\n          url: dataSearch[index].image.url,\r\n          width: dataSearch[index].image.width,\r\n          height: dataSearch[index].image.height,\r\n        },\r\n        date: String(new Date().getTime())\r\n      })\r\n    }\r\n  };\r\n\r\n  const onClickEmoji = (index: number) => {\r\n    valueInput = valueInput +  dataEmoji[index].native\r\n    setValueInput(valueInput)\r\n  };\r\n\r\n  const renderEmojiGiphy = () => {\r\n    return (\r\n      <div className={classes.emojiGiphy}>\r\n        <div className={classes.marinButtonEmojiGiphy}>\r\n          <button \r\n            className={classes.buttonEmojiGiphy} \r\n            onClick={() => setViewEmoji(true)} \r\n            style={{ backgroundColor: !viewEmoji ? \"#aaa\" : \"\" }}\r\n          > Biểu tượng</button>\r\n          <button \r\n            className={classes.buttonEmojiGiphy} \r\n            onClick={() => setViewEmoji(false)} \r\n            style={{ backgroundColor: viewEmoji ? \"#aaa\" : \"\" }}\r\n          > Ảnh động</button>\r\n        </div>\r\n        { !viewEmoji && <Paper component=\"form\" className={classes.rootPaper}>\r\n            <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\">\r\n              <SearchIcon />\r\n            </IconButton>\r\n            <InputBase\r\n              onChange={(e) => searchGiphy(e)}\r\n              className={classes.inputBaseGiphy}\r\n              placeholder=\"Tìm kiếm\"\r\n            />\r\n          </Paper>}\r\n        { viewEmoji \r\n          ? <div className={classes.overflowHeightEmoji}>\r\n            {dataEmoji.map((item: any, index: number) => {\r\n              return (\r\n                <div \r\n                  onClick={() => onClickEmoji(index)} \r\n                  key={index} className={classes.itemEmoji}\r\n                >{item.native}</div>\r\n              )\r\n            })}\r\n          </div>\r\n          : <div className={classes.overflowHeightGiphy}>\r\n              {valueSearchGiphy \r\n                ? dataSearch.map((item: any, index: number) => {\r\n                    return (\r\n                      <div className={classes.dispalyImageGiphy} >\r\n                        <img \r\n                          className={classes.imgListGiphy} \r\n                          alt=\"giphy\" \r\n                          src={item.image.url} \r\n                          onClick={() => setItemGiphy(index, \"dataSearch\")} \r\n                        />\r\n                      </div>\r\n                    )\r\n                  })\r\n                : giphyDefault.map((item: any, index: number) => {\r\n                    return (\r\n                      <div className={classes.dispalyImageGiphy} >\r\n                        <img \r\n                          className={classes.imgListGiphy} \r\n                          alt=\"giphy\" \r\n                          src={item.image.url} \r\n                          onClick={() => setItemGiphy(index, \"giphyDefault\")} \r\n                        />\r\n                      </div>\r\n                    )\r\n                  })\r\n              }\r\n            </div>\r\n        }\r\n      </div>\r\n    )\r\n  };\r\n\r\n  const renderContentChat = () => {\r\n    return (\r\n      <div className={classes.overflowHeightEmojiGiphy} style={{ height: openEmojiGiphy ? '230px' : '430px' }}>\r\n        <Typography align=\"center\" className={classes.textSizeNewDate}>\r\n          {moment().format('LLL')}\r\n        </Typography>\r\n        <Divider />\r\n        {arrChat.map((item: any, index: number) => {\r\n          let checkNewDate = false\r\n          let setViewAvatar = false\r\n          let oldDate = index > 0 ? moment(Number(arrChat[index - 1].date)).format('YYYY-MM-DD') : ''\r\n          let newDate = moment(Number(arrChat[index].date)).format('YYYY-MM-DD')\r\n          if(index > 0 && (oldDate !== newDate)) { \r\n            checkNewDate = true\r\n          }\r\n          \r\n          if(item.type === 'admin' && index > 0) {\r\n            if((index === arrChat.length) || (arrChat[index - 1].type != arrChat[index].type) || (oldDate !== newDate)){\r\n              setViewAvatar = true\r\n            }\r\n          } else if(item.type === 'admin' && index === 0 ) {\r\n            setViewAvatar = true\r\n          }\r\n          let width = item.image.width \r\n          let height = item.image.height \r\n          return (\r\n            <div key={index} style={{ display: \"block\" }}>\r\n              { checkNewDate && <Typography align=\"center\" className={classes.textSizeNewDate}>\r\n                {moment(Number(item.date)).format(\"LLL\")} <Divider /></Typography>}\r\n              { item.type === 'admin' \r\n              ? <ThemeProvider theme={themeTextfieldAdmin}>\r\n                  <div className={classes.viewAvatarChatContent}>\r\n                    { setViewAvatar && <Avatar className={classes.avatarAdminText} alt=\"nhadatmoi.net\" src={avatarImage} /> }\r\n                  </div>\r\n                  <div className={classes.textFieldChatContent}>\r\n                    {\r\n                      item.image.url \r\n                      ? <Tooltip title={moment(Number(item.date)).fromNow()} placement=\"top\">\r\n                          <div className={classes.viewContentImageGiphy} style={{width: `${width}px`, height: `${height}px`, float: \"left\" }} >\r\n                            <img className={classes.imgGiphy} alt=\"giphy\" src={item.image.url} />\r\n                          </div>\r\n                        </Tooltip>\r\n                      : <Tooltip title={moment(Number(item.date)).fromNow()} placement=\"top\">\r\n                          <div className={classes.textAdminLeft}>\r\n                            <TextField \r\n                              fullWidth={item.message.length > 12 ? true : false}\r\n                              label=\"\"\r\n                              className={classes.textAdmin}\r\n                              value={item.message.trim()}\r\n                              margin=\"dense\"\r\n                              id=\"outlined-basic\" \r\n                              multiline={true}\r\n                              InputProps={{\r\n                                readOnly: true\r\n                              }}\r\n                              variant=\"outlined\" \r\n                            />\r\n                          </div>\r\n                        </Tooltip>\r\n                    }\r\n                  </div>\r\n                </ThemeProvider>\r\n              : <ThemeProvider theme={themeTextfieldUser}>\r\n                  {\r\n                    item.image.url\r\n                    ? <Tooltip title={moment(Number(item.date)).fromNow()} placement=\"top\">\r\n                        <div className={classes.viewContentImageGiphy} style={{ width: `${width}px`, height: `${height}px`, float: \"right\" }} >\r\n                          <img className={classes.imgGiphy} alt=\"giphy\" src={item.image.url} />\r\n                        </div>\r\n                      </Tooltip>\r\n                    : <Tooltip title={moment(Number(item.date)).fromNow()} placement=\"top\">\r\n                        <div \r\n                          className={classes.textFieldUserChatContent}\r\n                          style={{ textAlign: \"right\" }}\r\n                          dir={`${item.message.length < 20 ? 'rtl' : \"\"}`}\r\n                        >\r\n                          <TextField \r\n                            fullWidth={item.message.length > 15 ? true : false}\r\n                            label=\"\"\r\n                            className={classes.textUser}\r\n                            value={item.message.trim()}\r\n                            margin=\"dense\"\r\n                            id=\"outlined-basic\" \r\n                            multiline={true}\r\n                            InputProps={{\r\n                              readOnly: true\r\n                            }}\r\n                            variant=\"outlined\" \r\n                          />\r\n                        </div>\r\n                      </Tooltip>\r\n                  }\r\n                </ThemeProvider>\r\n              }\r\n              <div style={{ clear: \"both\" }}></div>\r\n            </div>\r\n          )\r\n        })}\r\n        {/* {openEmojiGiphy && renderEmojiGiphy()} */}\r\n        {!internet && <p className={classes.errInternet}> <u>Không thể gửi tin nhắn này. Kiểm tra kết nối internet và thử lại</u></p> }\r\n        {texting && <p className={classes.texting}>Đang nhập ...</p>}\r\n      </div>\r\n    )\r\n  };\r\n  \r\n  const onClickOpenEmojiGiphy = () => {\r\n    setOpenEmojiGiphy(!openEmojiGiphy) \r\n    setViewEmoji(true)\r\n  };\r\n\r\n  const apiBaseURL = \"https://graph.nhadatmoi.net\";\r\n  const googleLogin = `${apiBaseURL}/auth/google`;\r\n  const apiGraphQLURL = `${apiBaseURL}/graphql`;\r\n  const apiUpload = `${apiBaseURL}/upload_image`;\r\n\r\n  const api = (method: Method, url: string, data?: any) => client\r\n    .request(\r\n    { data: JSON.stringify(data), \r\n      headers: { \"Accept\": \"application/json\",\"Content-Type\": \"application/json\",\r\n    }, method, url,  withCredentials: true,\r\n  }).then((response: any) => response.data);\r\n\r\n  const upLoadImage = (files: any) => {\r\n    const reader = new FileReader;\r\n    let file = files.target.files[0]\r\n    reader.readAsDataURL(file)\r\n    // reader.onload = () => {\r\n    //   setLoading(true);\r\n    //   setCompleted(0);\r\n    //   api(\"POST\", `${apiUpload}`, { \r\n    //     base64image: reader.result, \r\n    //     fileName: (new Date()).getTime() + \"\" + file.name,\r\n    //     typeUpload: \"ad_sell_lease\",\r\n    //   })\r\n    //   .then(function (res) {\r\n    //     console.log(\"res\", res)\r\n    //     // if(res){\r\n    //     //   pustImageChat(res)\r\n    //     // }\r\n    //     // getFile(res.location, file.name, file.size);\r\n    //     setLoading(false);\r\n    //   })\r\n    //   .catch(function (err) {\r\n    //     alert('HTTP Error: ' + err.message);\r\n    //   });\r\n    // };\r\n    reader.onload = async () => {\r\n      let url = `https://api.imgur.com/3/image`\r\n      let getData = await axios.get(url, {})\r\n      .then(function (response) {\r\n        console.log(\"response\", response)\r\n        // setGiphyData(response.data.data)\r\n      })\r\n       \r\n      // .then(function (res) {\r\n      //   console.log(\"res\", res)\r\n      //   setLoading(false);\r\n      // })\r\n      // .catch(function (err) {\r\n      //   alert('HTTP Error: ' );\r\n      // });\r\n    }\r\n    \r\n  };\r\n\r\n  const pustImageChat = (url: string) => {\r\n    arrChat.push({ \r\n      message:\"\", \r\n      type: 'user', \r\n      image: { url: url, width: \"250px\", height: \"200px\" }, \r\n      date: String(new Date().getTime()) })\r\n  }\r\n \r\n  const renderInput = () => {\r\n    return (\r\n      <Paper component=\"form\" className={classes.inputBase}>\r\n        <ThemeProvider theme={theme}>\r\n          <Input \r\n            fullWidth\r\n            disabled={!internet}\r\n            margin=\"dense\"\r\n            id=\"outlined-basic\" \r\n            autoFocus={true}\r\n            value={valueInput}\r\n            multiline={true}\r\n            onChange={(e) => setChangeInput(e.target.value)}\r\n            onKeyPress={(e) => setOnKeyPress(e)}\r\n            onBlur={(e) => setOnBlur(e)}\r\n            onKeyDown={(e) => setOnKeyDown(e)}\r\n            placeholder=\"Nhập tin nhắn ...\"\r\n            autoComplete=\"false\"\r\n          />\r\n          { openEmojiGiphy \r\n            ? <Tooltip title=\"Chèn biểu tượng\" placement=\"top\"> \r\n                <ExpandMoreIcon className={classes.sizeIcon} onClick={onClickOpenEmojiGiphy} color=\"primary\" />\r\n              </Tooltip> \r\n            : <Tooltip title=\"Chèn biểu tượng\" placement=\"top\"> \r\n                <TagFacesIcon className={classes.sizeIcon} onClick={onClickOpenEmojiGiphy} color=\"primary\" />\r\n              </Tooltip>\r\n          }\r\n          { valueInput\r\n            ? <Tooltip title=\"Gửi tin nhắn\" placement=\"top\">\r\n                <SendIcon onClick={senMesssage} className={classes.sizeIcon} color=\"primary\" />\r\n              </Tooltip>\r\n            : <Tooltip title=\"Thêm tập tin\" placement=\"top\">\r\n                <div className={classes.inputWrapper}> \r\n                  <AddCircleOutlineIcon className={classes.sizeIcon} color=\"primary\"/> \r\n                  <input type=\"file\" className={classes.fileInput}  onChange={upLoadImage} /> \r\n                </div>\r\n              </Tooltip>\r\n          }\r\n        </ThemeProvider>\r\n      </Paper>\r\n    )\r\n  };\r\n \r\n  const viewChat = () => {\r\n    return (\r\n      <Popper open={open} anchorEl={anchorEl} placement={placement} transition >\r\n        {({ TransitionProps }) => (\r\n          <Fade {...TransitionProps} timeout={300}>\r\n            <Paper>\r\n              <div className={classes.positionSizeViewChat}> \r\n              {/* height:\"550px\",  */}\r\n                {renderHeader()}\r\n                {renderContentChat()}\r\n                {openEmojiGiphy && renderEmojiGiphy()}\r\n                {renderInput()}\r\n              </div>\r\n            </Paper>\r\n          </Fade>\r\n        )}\r\n      </Popper>\r\n    )\r\n  };\r\n\r\n  const handleClick = (newPlacement: PopperPlacementType) => {\r\n    setOpen(true)\r\n    setPlacement(newPlacement);\r\n  };\r\n\r\n  const renderAvatar = () => {\r\n    return (\r\n      <div className={classes.positionAvatar}>\r\n        <StyledBadge\r\n          overlap=\"circle\"\r\n          anchorOrigin={{ vertical: 'bottom', horizontal: 'right', }}\r\n          variant= { online ? \"dot\" : \"standard\" }\r\n        >\r\n          <Avatar src={avatarImage} onClick={() => handleClick(\"top-start\")} className={classes.large} alt=\"nhadatmoi.net\"/>\r\n        </StyledBadge>\r\n      </div>\r\n    )\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {viewChat()}\r\n      <Grid container justify=\"center\">\r\n        <Grid item>\r\n          { !open && renderAvatar()}\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
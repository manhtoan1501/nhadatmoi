{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\manh nhan\\\\Desktop\\\\Nhadatmoi\\\\components\\\\Chat\\\\Index.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Popper from '@material-ui/core/Popper';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { Grid, InputBase, Fade, Typography, Paper, CardHeader, Avatar, TextField, Divider, Tooltip, Input, IconButton } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport TagFacesIcon from '@material-ui/icons/TagFaces';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SendIcon from '@material-ui/icons/Send';\nimport axios from \"axios\";\nimport moment from \"moment\"; // import ReactFileReader from 'react-file-reader';\n// const ReactFileReader = require('react-file-reader');\n\nimport 'moment/locale/es';\nmoment.locale('vi');\nimport { dataEmoji, arrChat, giphyDefault, theme, useStyles, themeTextfieldAdmin, themeTextfieldUser, StyledBadge } from \"./constant\";\nexport default function PositionedPopper() {\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      anchorEl = _React$useState2[0],\n      setAnchorEl = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      open = _React$useState4[0],\n      setOpen = _React$useState4[1];\n\n  var _React$useState5 = React.useState(),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      placement = _React$useState6[0],\n      setPlacement = _React$useState6[1];\n\n  var _React$useState7 = React.useState(true),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      online = _React$useState8[0],\n      setOnline = _React$useState8[1];\n\n  var _React$useState9 = React.useState(false),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      internet = _React$useState10[0],\n      setInternet = _React$useState10[1];\n\n  var classes = useStyles();\n\n  var _React$useState11 = React.useState(false),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      texting = _React$useState12[0],\n      setTexting = _React$useState12[1];\n\n  var _React$useState13 = React.useState(\"\"),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      valueInput = _React$useState14[0],\n      setValueInput = _React$useState14[1];\n\n  var _React$useState15 = React.useState(),\n      _React$useState16 = _slicedToArray(_React$useState15, 2),\n      giphyData = _React$useState16[0],\n      setGiphyData = _React$useState16[1];\n\n  var _React$useState17 = React.useState(false),\n      _React$useState18 = _slicedToArray(_React$useState17, 2),\n      openEmojiGiphy = _React$useState18[0],\n      setOpenEmojiGiphy = _React$useState18[1];\n\n  var _React$useState19 = React.useState(),\n      _React$useState20 = _slicedToArray(_React$useState19, 2),\n      indexEmoji = _React$useState20[0],\n      setIndexEmoji = _React$useState20[1];\n\n  var _React$useState21 = React.useState(\"\"),\n      _React$useState22 = _slicedToArray(_React$useState21, 2),\n      valueSearchGiphy = _React$useState22[0],\n      setValueSearchGiphy = _React$useState22[1];\n\n  var onCloseChat = function onCloseChat() {\n    setOpen(false);\n  };\n\n  var setOnKeyPress = function setOnKeyPress(event) {\n    setTexting(true);\n  };\n\n  var setOnBlur = function setOnBlur(event) {\n    setTexting(true);\n  };\n\n  var setOnKeyDown = function setOnKeyDown(event) {\n    if (event.keyCode == 13) {\n      arrChat.push({\n        message: event.target.value,\n        type: 'user',\n        image: {\n          url: \"\",\n          width: \"\",\n          height: \"\"\n        },\n        date: String(new Date().getTime())\n      });\n      setValueInput(\"\");\n    }\n  };\n\n  var senMesssage = function senMesssage() {\n    arrChat.push({\n      message: valueInput,\n      type: 'user',\n      image: {\n        url: \"\",\n        width: \"\",\n        height: \"\"\n      },\n      date: String(new Date().getTime())\n    });\n    setValueInput(\"\");\n  };\n\n  var renderHeader = function renderHeader() {\n    return __jsx(CardHeader, {\n      className: classes.hearder,\n      avatar: __jsx(StyledBadge, {\n        overlap: \"circle\",\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right'\n        },\n        variant: online ? \"dot\" : \"standard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, __jsx(Avatar, {\n        className: classes.sizeAvatarSmall,\n        alt: \"nhadatmoi.net\",\n        src: \"https://image.crisp.chat/avatar/operator/da8d4459-5ea3-4119-bca1-9170f49ee69c/240/?1585999578742&quot\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      })),\n      title: \"Nguy\\u1EC5n Thanh Huy\\u1EC1n\",\n      action: __jsx(IconButton, {\n        color: \"inherit\",\n        \"aria-label\": \"settings\",\n        onClick: function onClick() {\n          return onCloseChat();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, __jsx(CloseIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    });\n  };\n\n  var setChangeInput = function setChangeInput(value) {\n    setValueInput(value);\n  };\n\n  var searchGiphy = function searchGiphy(event) {\n    var url, getData;\n    return _regeneratorRuntime.async(function searchGiphy$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setValueSearchGiphy(event.target.value);\n            url = \"https://api.giphy.com/v1/gifs/search?api_key=UgTMyvovmg74m8fPN6qYiB623nwS1IPc&q=\".concat(event.target.value, \"&limit=20&offset=0&rating=G&lang=vi\");\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(axios.get(url, {}).then(function (response) {// setGiphyData(response.data.data)\n            }));\n\n          case 4:\n            getData = _context.sent;\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }; // let dataSearch: any = []\n\n\n  var dataSearch = giphyDefault; // if(Array.isArray(giphyData)){\n  //   giphyData.map((item: any, index: number) => {\n  //     // dataSearch.push({ image:  item.images.original.url })\n  //     dataSearch.push({ \n  //       image: {\n  //         url: item.images.fixed_width.url,\n  //         height: item.images.fixed_width.height,\n  //         width: item.images.fixed_width.width,\n  //       }})\n  //   })\n  // }\n\n  var setItemGiphy = function setItemGiphy(index, name) {\n    setOpenEmojiGiphy(!openEmojiGiphy);\n\n    if (name == \"giphyDefault\") {\n      arrChat.push({\n        message: \"\",\n        type: 'user',\n        image: {\n          url: giphyDefault[index].image.url,\n          width: giphyDefault[index].image.width,\n          height: giphyDefault[index].image.height\n        },\n        date: String(new Date().getTime())\n      });\n    } else if (name == \"dataSearch\") {\n      arrChat.push({\n        message: \"\",\n        type: 'user',\n        image: {\n          url: giphyDefault[index].image.url,\n          width: giphyDefault[index].image.width,\n          height: giphyDefault[index].image.height\n        },\n        date: String(new Date().getTime())\n      });\n    }\n  };\n\n  var onClickEmoji = function onClickEmoji(index) {\n    valueInput = valueInput + dataEmoji[index][\"native\"];\n    setValueInput(valueInput);\n  };\n\n  var renderEmojiGiphy = function renderEmojiGiphy() {\n    return __jsx(\"div\", {\n      className: classes.emojiGiphy,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: classes.marinButtonEmojiGiphy,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, __jsx(\"button\", {\n      className: classes.buttonEmojiGiphy,\n      onClick: function onClick() {\n        return setViewEmoji(true);\n      },\n      style: {\n        backgroundColor: !viewEmoji ? \"#aaa\" : \"\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \" Bi\\u1EC3u t\\u01B0\\u1EE3ng\"), __jsx(\"button\", {\n      className: classes.buttonEmojiGiphy,\n      onClick: function onClick() {\n        return setViewEmoji(false);\n      },\n      style: {\n        backgroundColor: viewEmoji ? \"#aaa\" : \"\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \" \\u1EA2nh \\u0111\\u1ED9ng\")), !viewEmoji && __jsx(Paper, {\n      component: \"form\",\n      className: classes.rootPaper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, __jsx(IconButton, {\n      type: \"submit\",\n      className: classes.iconButton,\n      \"aria-label\": \"search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, __jsx(SearchIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    })), __jsx(InputBase, {\n      onChange: function onChange(e) {\n        return searchGiphy(e);\n      },\n      className: classes.inputBaseGiphy,\n      placeholder: \"T\\xECm ki\\u1EBFm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    })), viewEmoji ? __jsx(\"div\", {\n      className: classes.overflowHeightEmoji,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, dataEmoji.map(function (item, index) {\n      return __jsx(\"div\", {\n        onClick: function onClick() {\n          return onClickEmoji(index);\n        },\n        key: index,\n        className: classes.itemEmoji,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, item[\"native\"]);\n    })) : __jsx(\"div\", {\n      className: classes.overflowHeightGiphy,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, valueSearchGiphy ? dataSearch.map(function (item, index) {\n      return __jsx(\"div\", {\n        className: classes.dispalyImageGiphy,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, __jsx(\"img\", {\n        className: classes.imgListGiphy,\n        alt: \"giphy\",\n        src: item.image.url,\n        onClick: function onClick() {\n          return setItemGiphy(index, \"dataSearch\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }));\n    }) : giphyDefault.map(function (item, index) {\n      return __jsx(\"div\", {\n        className: classes.dispalyImageGiphy,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, __jsx(\"img\", {\n        className: classes.imgListGiphy,\n        alt: \"giphy\",\n        src: item.image.url,\n        onClick: function onClick() {\n          return setItemGiphy(index, \"giphyDefault\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }));\n    })));\n  };\n\n  var renderContentChat = function renderContentChat() {\n    return __jsx(\"div\", {\n      className: classes.overflowHeightEmojiGiphy,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, __jsx(Typography, {\n      align: \"center\",\n      className: classes.textSizeNewDate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, moment().format('LLL')), __jsx(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }), arrChat.map(function (item, index) {\n      var checkNewDate = false;\n\n      if (index > 0 && moment(Number(arrChat[index - 1].date)).format('YYYY-MM-DD') != moment(Number(arrChat[index].date)).format('YYYY-MM-DD')) {\n        checkNewDate = true;\n      }\n\n      var setViewAvatar = false;\n\n      if (item.type === 'admin' && index > 0) {\n        if (index === arrChat.length || arrChat[index - 1].type != arrChat[index].type) {\n          setViewAvatar = true;\n        }\n      } else if (item.type === 'admin' && index === 0) {\n        setViewAvatar = true;\n      }\n\n      console.log(\"setViewAvatar\", setViewAvatar);\n      return __jsx(\"div\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, checkNewDate && __jsx(Typography, {\n        align: \"center\",\n        className: classes.textSizeNewDate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, moment(Number(item.date)).format(\"LLL\"), \" \", __jsx(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      })), item.type === 'admin' ? __jsx(ThemeProvider, {\n        theme: themeTextfieldAdmin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: classes.viewAvatarChatContent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, setViewAvatar ? __jsx(Avatar, {\n        className: classes.avatarAdminText,\n        alt: \"nhadatmoi.net\",\n        src: \"https://image.crisp.chat/avatar/operator/da8d4459-5ea3-4119-bca1-9170f49ee69c/240/?1585999578742&quot\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }) : \"\"), __jsx(\"div\", {\n        className: classes.textFieldChatContent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, item.image.url ? __jsx(Tooltip, {\n        title: moment(Number(item.date)).fromNow(),\n        placement: \"top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: classes.viewContentImageGiphy,\n        style: {\n          width: \"\".concat(item.image.width, \"px\"),\n          height: \"\".concat(item.image.height, \"px\")\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, __jsx(\"img\", {\n        className: classes.imgGiphy,\n        alt: \"giphy\",\n        src: item.image.url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }))) : __jsx(Tooltip, {\n        title: moment(Number(item.date)).fromNow(),\n        placement: \"top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, __jsx(TextField, {\n        fullWidth: true,\n        label: \"\",\n        className: classes.textAdmin,\n        value: item.message,\n        margin: \"dense\",\n        id: \"outlined-basic\",\n        multiline: true,\n        InputProps: {\n          readOnly: true\n        },\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      })))) : __jsx(ThemeProvider, {\n        theme: themeTextfieldUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, item.image.url ? __jsx(Tooltip, {\n        title: moment(Number(item.date)).fromNow(),\n        placement: \"top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: classes.viewContentImageGiphy,\n        style: {\n          width: \"\".concat(item.image.width, \"px\"),\n          height: \"\".concat(item.image.height, \"px\")\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, __jsx(\"img\", {\n        className: classes.imgGiphy,\n        alt: \"giphy\",\n        src: item.image.url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }))) : __jsx(Tooltip, {\n        title: moment(Number(item.date)).fromNow(),\n        placement: \"top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: classes.textFieldUserChatContent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, __jsx(TextField, {\n        fullWidth: true,\n        label: \"\",\n        className: classes.textUser,\n        value: item.message,\n        margin: \"dense\",\n        id: \"outlined-basic\",\n        multiline: true,\n        InputProps: {\n          readOnly: true\n        },\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      })))));\n    }), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, openEmojiGiphy && renderEmojiGiphy()), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      id: \"output\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    })));\n  };\n\n  var _React$useState23 = React.useState(false),\n      _React$useState24 = _slicedToArray(_React$useState23, 2),\n      viewEmoji = _React$useState24[0],\n      setViewEmoji = _React$useState24[1];\n\n  var onClickOpenEmojiGiphy = function onClickOpenEmojiGiphy() {\n    setOpenEmojiGiphy(!openEmojiGiphy);\n    setViewEmoji(true);\n  };\n\n  var openFile = function openFile(event) {\n    var reader = new FileReader();\n    reader.readAsDataURL(acceptedFiles[0]);\n\n    reader.onload = function () {\n      setLoading(true);\n      setCompleted(0); // api(\"POST\", ${apiUpload}, {\n      //   base64image: reader.result,\n      //   fileName: (new Date()).getTime() + \"\" + acceptedFiles[0].name,\n      //   typeUpload: \"ad_sell_lease\",\n      // })\n      //   .then(function (res) {\n      //     getFile(res.location, acceptedFiles[0].name, acceptedFiles[0].size);\n      //     setLoading(false);\n      //   })\n      //   .catch(function (err) {\n      //     alert('HTTP Error: ' + err.message);\n      //   })\n    };\n  };\n\n  var _React$useState25 = React.useState(),\n      _React$useState26 = _slicedToArray(_React$useState25, 2),\n      file = _React$useState26[0],\n      setFile = _React$useState26[1];\n\n  var renderInput = function renderInput() {\n    return __jsx(Paper, {\n      component: \"form\",\n      className: classes.inputBase,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }, __jsx(ThemeProvider, {\n      theme: theme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    }, __jsx(Input, {\n      fullWidth: true // disabled={internet}\n      ,\n      margin: \"dense\",\n      id: \"outlined-basic\",\n      autoFocus: true // value={valueInput}\n      ,\n      value: valueInput,\n      multiline: true,\n      onChange: function onChange(e) {\n        return setChangeInput(e.target.value);\n      },\n      onKeyPress: function onKeyPress(e) {\n        return setOnKeyPress(e);\n      },\n      onBlur: function onBlur(e) {\n        return setOnBlur(e);\n      },\n      onKeyDown: function onKeyDown(e) {\n        return setOnKeyDown(e);\n      },\n      placeholder: \"Nh\\u1EADp tin nh\\u1EAFn ...\",\n      autoComplete: \"false\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }), openEmojiGiphy ? __jsx(Tooltip, {\n      title: \"Ch\\xE8n bi\\u1EC3u t\\u01B0\\u1EE3ng\",\n      placement: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    }, __jsx(ExpandMoreIcon, {\n      className: classes.sizeIcon,\n      onClick: onClickOpenEmojiGiphy,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    })) : __jsx(Tooltip, {\n      title: \"Ch\\xE8n bi\\u1EC3u t\\u01B0\\u1EE3ng\",\n      placement: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393\n      },\n      __self: this\n    }, __jsx(TagFacesIcon, {\n      className: classes.sizeIcon,\n      onClick: onClickOpenEmojiGiphy,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394\n      },\n      __self: this\n    })), valueInput ? __jsx(Tooltip, {\n      title: \"Th\\xEAm t\\u1EADp tin\",\n      placement: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402\n      },\n      __self: this\n    }, __jsx(SendIcon, {\n      onClick: senMesssage,\n      className: classes.sizeIcon,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403\n      },\n      __self: this\n    })) : __jsx(Tooltip, {\n      title: \"Th\\xEAm t\\u1EADp tin\",\n      placement: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: function onChange() {\n        return openFile(event);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409\n      },\n      __self: this\n    }))));\n  };\n\n  var viewChat = function viewChat() {\n    return __jsx(Popper, {\n      open: open,\n      anchorEl: anchorEl,\n      placement: placement,\n      transition: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433\n      },\n      __self: this\n    }, function (_ref) {\n      var TransitionProps = _ref.TransitionProps;\n      return __jsx(Fade, _extends({}, TransitionProps, {\n        timeout: 300,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440\n        },\n        __self: this\n      }), __jsx(Paper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: classes.positionSizeViewChat,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442\n        },\n        __self: this\n      }, renderHeader(), renderContentChat(), renderInput())));\n    });\n  };\n\n  var handleClick = function handleClick(newPlacement) {\n    setOpen(true);\n    setPlacement(newPlacement);\n  };\n\n  var renderAvatar = function renderAvatar() {\n    return __jsx(\"div\", {\n      className: classes.positionAvatar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461\n      },\n      __self: this\n    }, __jsx(StyledBadge, {\n      overlap: \"circle\",\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'right'\n      } // variant= { online ? \"dot\" : \"standard\" }\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462\n      },\n      __self: this\n    }, __jsx(Avatar, {\n      onClick: function onClick() {\n        return handleClick(\"top-start\");\n      },\n      className: classes.large,\n      alt: \"nhadatmoi.net\",\n      src: \"https://image.crisp.chat/avatar/operator/da8d4459-5ea3-4119-bca1-9170f49ee69c/240/?1585999578742&quot\" // src=\"https://file.vforum.vn/hinh/2018/03/hinh-mau-trang-tinh-tron-hinh-nen-anh-dai-dien-anh-bia-toan-mau-trang1.png\"\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470\n      },\n      __self: this\n    })));\n  };\n\n  return __jsx(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483\n    },\n    __self: this\n  }, viewChat(), __jsx(Grid, {\n    container: true,\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 485\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 486\n    },\n    __self: this\n  }, !open && renderAvatar())));\n}","map":{"version":3,"sources":["C:/Users/manh nhan/Desktop/Nhadatmoi/components/Chat/Index.tsx"],"names":["React","Popper","ThemeProvider","Grid","InputBase","Fade","Typography","Paper","CardHeader","Avatar","TextField","Divider","Tooltip","Input","IconButton","SearchIcon","TagFacesIcon","ExpandMoreIcon","CloseIcon","SendIcon","axios","moment","locale","dataEmoji","arrChat","giphyDefault","theme","useStyles","themeTextfieldAdmin","themeTextfieldUser","StyledBadge","PositionedPopper","useState","anchorEl","setAnchorEl","open","setOpen","placement","setPlacement","online","setOnline","internet","setInternet","classes","texting","setTexting","valueInput","setValueInput","giphyData","setGiphyData","openEmojiGiphy","setOpenEmojiGiphy","indexEmoji","setIndexEmoji","valueSearchGiphy","setValueSearchGiphy","onCloseChat","setOnKeyPress","event","setOnBlur","setOnKeyDown","keyCode","push","message","target","value","type","image","url","width","height","date","String","Date","getTime","senMesssage","renderHeader","hearder","vertical","horizontal","sizeAvatarSmall","setChangeInput","searchGiphy","get","then","response","getData","dataSearch","setItemGiphy","index","name","onClickEmoji","renderEmojiGiphy","emojiGiphy","marinButtonEmojiGiphy","buttonEmojiGiphy","setViewEmoji","backgroundColor","viewEmoji","rootPaper","iconButton","e","inputBaseGiphy","overflowHeightEmoji","map","item","itemEmoji","overflowHeightGiphy","dispalyImageGiphy","imgListGiphy","renderContentChat","overflowHeightEmojiGiphy","textSizeNewDate","format","checkNewDate","Number","setViewAvatar","length","console","log","viewAvatarChatContent","avatarAdminText","textFieldChatContent","fromNow","viewContentImageGiphy","imgGiphy","textAdmin","readOnly","textFieldUserChatContent","textUser","onClickOpenEmojiGiphy","openFile","reader","FileReader","readAsDataURL","acceptedFiles","onload","setLoading","setCompleted","file","setFile","renderInput","inputBase","sizeIcon","viewChat","TransitionProps","positionSizeViewChat","handleClick","newPlacement","renderAvatar","positionAvatar","large","root"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Popper, { PopperPlacementType } from '@material-ui/core/Popper';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport { \r\n  Grid, Button, InputBase, Fade,\r\n  Typography, Paper, Card, CardHeader, CardContent,\r\n  CardActionArea, CardMedia, Avatar, TextField,\r\n  Badge, Divider, Tooltip, Input, Chip, IconButton\r\n} from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport TagFacesIcon from '@material-ui/icons/TagFaces';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport axios, {Method} from \"axios\";\r\nimport moment from \"moment\"\r\n// import ReactFileReader from 'react-file-reader';\r\n// const ReactFileReader = require('react-file-reader');\r\nimport 'moment/locale/es'   \r\nmoment.locale('vi')\r\nimport { Theme, makeStyles, withStyles, createStyles } from '@material-ui/core/styles';\r\nimport { \r\n  dataEmoji,  arrChat, giphyDefault, theme, useStyles,\r\n  themeTextfieldAdmin, themeTextfieldUser, StyledBadge\r\n} from \"./constant\"\r\n\r\nexport default function PositionedPopper() {\r\n  const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(null);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [placement, setPlacement] = React.useState<PopperPlacementType>();\r\n  const [online, setOnline] = React.useState<boolean>(true)\r\n  const [internet, setInternet] = React.useState<boolean>(false)\r\n  const classes = useStyles();\r\n  const [texting, setTexting] = React.useState<boolean>(false)\r\n  let   [valueInput, setValueInput] = React.useState(\"\")\r\n  const [giphyData, setGiphyData] = React.useState<any>()\r\n  const [openEmojiGiphy, setOpenEmojiGiphy] = React.useState<boolean>(false)\r\n  const [indexEmoji, setIndexEmoji] = React.useState<number>()\r\n  const [valueSearchGiphy, setValueSearchGiphy] = React.useState(\"\")\r\n\r\n  const onCloseChat = () => {\r\n    setOpen(false)\r\n  }\r\n  const setOnKeyPress = (event: any) => {\r\n    setTexting(true)\r\n  }\r\n  const setOnBlur = (event: any) => {\r\n    setTexting(true)\r\n  }\r\n  const setOnKeyDown = (event: any) => {\r\n    if(event.keyCode == 13){\r\n      arrChat.push({ message: event.target.value, type: 'user', image: { url: \"\", width: \"\", height: \"\" }, date: String(new Date().getTime()) })\r\n      setValueInput(\"\")\r\n    }\r\n  }\r\n  const senMesssage = () => {\r\n    arrChat.push({ message: valueInput, type: 'user', image: { url: \"\", width: \"\", height: \"\" }, date: String(new Date().getTime()) })\r\n    setValueInput(\"\")\r\n  }\r\n  const renderHeader = () => {\r\n    return (\r\n      <CardHeader\r\n        className={classes.hearder}\r\n        avatar={\r\n          <StyledBadge\r\n            overlap=\"circle\"\r\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n            variant= { online ? \"dot\" : \"standard\" }\r\n          >\r\n            <Avatar \r\n              className={classes.sizeAvatarSmall} \r\n              alt=\"nhadatmoi.net\" \r\n              src=\"https://image.crisp.chat/avatar/operator/da8d4459-5ea3-4119-bca1-9170f49ee69c/240/?1585999578742&quot\"\r\n            />\r\n          </StyledBadge>\r\n        }\r\n        title=\"Nguyễn Thanh Huyền\"\r\n        action={\r\n          <IconButton color='inherit' aria-label=\"settings\" onClick={() => onCloseChat()} >\r\n            <CloseIcon/>\r\n          </IconButton>\r\n        }\r\n      />\r\n    )\r\n  }\r\n  const setChangeInput = (value: any) => {\r\n    setValueInput(value)\r\n  }\r\n  const searchGiphy = async (event: any)=>  { \r\n    setValueSearchGiphy(event.target.value)\r\n    let url = `https://api.giphy.com/v1/gifs/search?api_key=UgTMyvovmg74m8fPN6qYiB623nwS1IPc&q=${event.target.value}&limit=20&offset=0&rating=G&lang=vi`\r\n    let getData = await axios.get(url, {})\r\n      .then(function (response) {\r\n        // setGiphyData(response.data.data)\r\n      })\r\n  }\r\n  // let dataSearch: any = []\r\n  let dataSearch = giphyDefault\r\n  // if(Array.isArray(giphyData)){\r\n  //   giphyData.map((item: any, index: number) => {\r\n  //     // dataSearch.push({ image:  item.images.original.url })\r\n  //     dataSearch.push({ \r\n  //       image: {\r\n  //         url: item.images.fixed_width.url,\r\n  //         height: item.images.fixed_width.height,\r\n  //         width: item.images.fixed_width.width,\r\n  //       }})\r\n  //   })\r\n  // }\r\n\r\n  const setItemGiphy = (index: number, name: string) => {\r\n    setOpenEmojiGiphy(!openEmojiGiphy)\r\n    if(name == \"giphyDefault\") {\r\n      arrChat.push({ \r\n        message: \"\", \r\n        type: 'user', \r\n        image: {\r\n          url: giphyDefault[index].image.url,\r\n          width: giphyDefault[index].image.width,\r\n          height: giphyDefault[index].image.height,\r\n        },\r\n        date: String(new Date().getTime()) \r\n      })\r\n    } else if ( name == \"dataSearch\") {\r\n      arrChat.push({ \r\n        message: \"\", \r\n        type: 'user', \r\n        image: {\r\n          url: giphyDefault[index].image.url,\r\n          width: giphyDefault[index].image.width,\r\n          height: giphyDefault[index].image.height,\r\n        },\r\n        date: String(new Date().getTime())\r\n      })\r\n    }\r\n  }\r\n\r\n  const onClickEmoji = (index: number) => {\r\n    valueInput = valueInput +  dataEmoji[index].native\r\n    setValueInput(valueInput)\r\n  }\r\n\r\n  const renderEmojiGiphy = () => {\r\n    return (\r\n      <div className={classes.emojiGiphy}>\r\n        <div className={classes.marinButtonEmojiGiphy}>\r\n          <button \r\n              className={classes.buttonEmojiGiphy} \r\n              onClick={() => setViewEmoji(true)} \r\n              style={{ backgroundColor: !viewEmoji ? \"#aaa\" : \"\" }}\r\n            > Biểu tượng\r\n            </button>\r\n            <button \r\n              className={classes.buttonEmojiGiphy} \r\n              onClick={() => setViewEmoji(false)} \r\n              style={{ backgroundColor: viewEmoji ? \"#aaa\" : \"\" }}\r\n            > Ảnh động\r\n            </button>\r\n        </div>\r\n        { !viewEmoji && <Paper component=\"form\" className={classes.rootPaper}>\r\n            <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\">\r\n              <SearchIcon />\r\n            </IconButton>\r\n            <InputBase\r\n              onChange={(e) => searchGiphy(e)}\r\n              className={classes.inputBaseGiphy}\r\n              placeholder=\"Tìm kiếm\"\r\n            />\r\n          </Paper>}\r\n        { viewEmoji \r\n          ? <div className={classes.overflowHeightEmoji}>\r\n            {dataEmoji.map((item: any, index: number) => {\r\n              return (\r\n                <div \r\n                  onClick={() => onClickEmoji(index)} \r\n                  key={index} \r\n                  className={classes.itemEmoji}\r\n                >\r\n                  {item.native}\r\n                </div>\r\n              )\r\n            })}\r\n          </div>\r\n          : <div className={classes.overflowHeightGiphy}>\r\n              {valueSearchGiphy \r\n                ? dataSearch.map((item: any, index: number) => {\r\n                    return (\r\n                      <div className={classes.dispalyImageGiphy} >\r\n                        <img \r\n                          className={classes.imgListGiphy} \r\n                          alt=\"giphy\" \r\n                          src={item.image.url} \r\n                          onClick={() => setItemGiphy(index, \"dataSearch\")} \r\n                        />\r\n                      </div>\r\n                    )\r\n                  })\r\n                : giphyDefault.map((item: any, index: number) => {\r\n                    return (\r\n                      <div className={classes.dispalyImageGiphy} >\r\n                        <img \r\n                          className={classes.imgListGiphy} \r\n                          alt=\"giphy\" \r\n                          src={item.image.url} \r\n                          onClick={() => setItemGiphy(index, \"giphyDefault\")} \r\n                        />\r\n                      </div>\r\n                    )\r\n                  })\r\n              }\r\n            </div>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const renderContentChat = () => {\r\n    return (\r\n      <div className={classes.overflowHeightEmojiGiphy}>\r\n        <Typography align=\"center\" className={classes.textSizeNewDate}>\r\n          {moment().format('LLL')}\r\n        </Typography>\r\n        <Divider />\r\n        {arrChat.map((item: any, index: number) => {\r\n          let checkNewDate = false\r\n          if(index > 0 && (moment(Number(arrChat[index - 1].date)).format('YYYY-MM-DD') != moment(Number(arrChat[index].date)).format('YYYY-MM-DD'))) {\r\n            checkNewDate = true\r\n          }\r\n          let setViewAvatar = false\r\n          if(item.type === 'admin' && index > 0) {\r\n            if((index === arrChat.length) || (arrChat[index - 1].type != arrChat[index].type)){\r\n              setViewAvatar = true\r\n            }\r\n          } else if(item.type === 'admin' && index === 0 ) {\r\n            setViewAvatar = true\r\n          }\r\n          console.log(\"setViewAvatar\", setViewAvatar)\r\n          return (\r\n            <div key={index}>\r\n              { checkNewDate && <Typography align=\"center\" className={classes.textSizeNewDate}>\r\n                {moment(Number(item.date)).format(\"LLL\")} <Divider /></Typography>}\r\n              { item.type === 'admin' \r\n              ? <ThemeProvider theme={themeTextfieldAdmin}>\r\n                  <div className={classes.viewAvatarChatContent}>\r\n                    {\r\n                      setViewAvatar \r\n                      ? <Avatar \r\n                          className={classes.avatarAdminText} \r\n                          alt=\"nhadatmoi.net\" \r\n                          src=\"https://image.crisp.chat/avatar/operator/da8d4459-5ea3-4119-bca1-9170f49ee69c/240/?1585999578742&quot\"\r\n                        />\r\n                      : \"\"\r\n                    }\r\n                  </div>\r\n                  <div className={classes.textFieldChatContent}>\r\n                    {\r\n                      item.image.url \r\n                      ? <Tooltip title={moment(Number(item.date)).fromNow()} placement=\"top\">\r\n                          <div className={classes.viewContentImageGiphy} style={{ width: `${item.image.width}px`, height: `${item.image.height}px`}} >\r\n                            <img \r\n                              className={classes.imgGiphy} \r\n                              alt=\"giphy\" \r\n                              src={item.image.url} \r\n                            />\r\n                          </div>\r\n                        </Tooltip>\r\n                      : <Tooltip title={moment(Number(item.date)).fromNow()} placement=\"top\">\r\n                          <TextField \r\n                            fullWidth\r\n                            label=\"\"\r\n                            className={classes.textAdmin}\r\n                            value={item.message}\r\n                            margin=\"dense\"\r\n                            id=\"outlined-basic\" \r\n                            multiline={true}\r\n                            InputProps={{\r\n                              readOnly: true\r\n                            }}\r\n                            variant=\"outlined\" \r\n                          />\r\n                        </Tooltip>\r\n                    }\r\n                  </div>\r\n                </ThemeProvider>\r\n              : <ThemeProvider theme={themeTextfieldUser}>\r\n                  {\r\n                    item.image.url\r\n                    ? <Tooltip title={moment(Number(item.date)).fromNow()} placement=\"top\">\r\n                        <div className={classes.viewContentImageGiphy} style={{ width: `${item.image.width}px`, height: `${item.image.height}px`}} >\r\n                          <img \r\n                            className={classes.imgGiphy} \r\n                            alt=\"giphy\" \r\n                            src={item.image.url} \r\n                          />\r\n                        </div>\r\n                      </Tooltip>\r\n                    : <Tooltip title={moment(Number(item.date)).fromNow()} placement=\"top\">\r\n                        <div className={classes.textFieldUserChatContent}>\r\n                          <TextField \r\n                            fullWidth\r\n                            label=\"\"\r\n                            className={classes.textUser}\r\n                            value={item.message}\r\n                            margin=\"dense\"\r\n                            id=\"outlined-basic\" \r\n                            multiline={true}\r\n                            InputProps={{\r\n                              readOnly: true\r\n                            }}\r\n                            variant=\"outlined\" \r\n                          /> \r\n                        </div>\r\n                      </Tooltip>\r\n                  }\r\n                </ThemeProvider>\r\n              }\r\n            </div>\r\n          )\r\n        })}\r\n        <div>\r\n          {openEmojiGiphy && renderEmojiGiphy()}\r\n        </div>\r\n        <div>\r\n          <img id='output' />\r\n        </div>\r\n        {/* {!internet \r\n          ? <p className={classes.errInternet}>\r\n              <u>Không thể gửi tin nhắn này. Kiểm tra kết nối internet và thử lại</u>\r\n            </p>\r\n          : \"\"\r\n        }\r\n        {texting && <p className={classes.texting}>Đang nhập ...</p>} */}\r\n      </div>\r\n    )\r\n  }\r\n  const [viewEmoji, setViewEmoji] = React.useState(false)\r\n  const onClickOpenEmojiGiphy = () => {\r\n    setOpenEmojiGiphy(!openEmojiGiphy) \r\n    setViewEmoji(true)\r\n  }\r\n \r\n  const openFile = (event: any) => {\r\n    const reader = new FileReader;\r\n    reader.readAsDataURL(acceptedFiles[0]);\r\n    reader.onload = () => {\r\n      setLoading(true);\r\n      setCompleted(0);\r\n      // api(\"POST\", ${apiUpload}, {\r\n      //   base64image: reader.result,\r\n      //   fileName: (new Date()).getTime() + \"\" + acceptedFiles[0].name,\r\n      //   typeUpload: \"ad_sell_lease\",\r\n      // })\r\n      //   .then(function (res) {\r\n      //     getFile(res.location, acceptedFiles[0].name, acceptedFiles[0].size);\r\n      //     setLoading(false);\r\n      //   })\r\n      //   .catch(function (err) {\r\n      //     alert('HTTP Error: ' + err.message);\r\n      //   })\r\n    }\r\n  }\r\n\r\n  const [file, setFile] = React.useState()\r\n  const renderInput = () => {\r\n    return (\r\n      <Paper component=\"form\" className={classes.inputBase}>\r\n        <ThemeProvider theme={theme}>\r\n          <Input \r\n            fullWidth\r\n            // disabled={internet}\r\n            margin=\"dense\"\r\n            id=\"outlined-basic\" \r\n            autoFocus={true}\r\n            // value={valueInput}\r\n            value={valueInput}\r\n            multiline={true}\r\n            onChange={(e) => setChangeInput(e.target.value)}\r\n            onKeyPress={(e) => setOnKeyPress(e)}\r\n            onBlur={(e) => setOnBlur(e)}\r\n            onKeyDown={(e) => setOnKeyDown(e)}\r\n            placeholder=\"Nhập tin nhắn ...\"\r\n            autoComplete=\"false\"\r\n          />\r\n          { openEmojiGiphy \r\n            ? <Tooltip title=\"Chèn biểu tượng\" placement=\"top\"> \r\n                <ExpandMoreIcon \r\n                  className={classes.sizeIcon}\r\n                  onClick={onClickOpenEmojiGiphy}\r\n                  color=\"primary\"\r\n                />\r\n              </Tooltip> \r\n            : <Tooltip title=\"Chèn biểu tượng\" placement=\"top\"> \r\n                <TagFacesIcon \r\n                  className={classes.sizeIcon}\r\n                  onClick={onClickOpenEmojiGiphy}\r\n                  color=\"primary\"\r\n                />\r\n              </Tooltip>\r\n          }\r\n          { valueInput\r\n            ? <Tooltip title=\"Thêm tập tin\" placement=\"top\">\r\n                <SendIcon \r\n                  onClick={senMesssage} \r\n                  className={classes.sizeIcon} color=\"primary\"\r\n                />\r\n              </Tooltip>\r\n            : <Tooltip title=\"Thêm tập tin\" placement=\"top\">\r\n                <input \r\n                  type='file' accept='image/*' onChange={() => openFile(event)} >\r\n                </input>\r\n              </Tooltip>\r\n          }\r\n          {/* \r\n              <AddCircleOutlineIcon \r\n                  className={classes.sizeIcon} \r\n                  color=\"primary\"\r\n                  onChange={() => openFile(event)}\r\n                /> \r\n            <input \r\n              type='file' accept='image/*' onChange={() => openFile(event)} >\r\n            </input>\r\n          */}\r\n        </ThemeProvider>\r\n      </Paper>\r\n    )\r\n  }\r\n\r\n  \r\n\r\n  const viewChat = () => {\r\n    return (\r\n      <Popper \r\n        open={open} \r\n        anchorEl={anchorEl}\r\n        placement={placement} \r\n        transition\r\n      >\r\n        {({ TransitionProps }) => (\r\n          <Fade {...TransitionProps} timeout={300}>\r\n            <Paper>\r\n              <div className={classes.positionSizeViewChat} >\r\n                {renderHeader()}\r\n                {renderContentChat()}\r\n                {renderInput()}\r\n              </div>\r\n            </Paper>\r\n          </Fade>\r\n        )}\r\n      </Popper>\r\n    )\r\n  }\r\n\r\n  const handleClick = (newPlacement: PopperPlacementType) => {\r\n    setOpen(true)\r\n    setPlacement(newPlacement);\r\n  }\r\n\r\n  const renderAvatar = () => {\r\n    return (\r\n      <div className={classes.positionAvatar}>\r\n        <StyledBadge\r\n          overlap=\"circle\"\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'right',\r\n          }}\r\n          // variant= { online ? \"dot\" : \"standard\" }\r\n        >\r\n          <Avatar \r\n            onClick={() => handleClick(\"top-start\")}\r\n            className={classes.large} \r\n            alt=\"nhadatmoi.net\" \r\n            src=\"https://image.crisp.chat/avatar/operator/da8d4459-5ea3-4119-bca1-9170f49ee69c/240/?1585999578742&quot\"\r\n            // src=\"https://file.vforum.vn/hinh/2018/03/hinh-mau-trang-tinh-tron-hinh-nen-anh-dai-dien-anh-bia-toan-mau-trang1.png\"\r\n          />\r\n        </StyledBadge>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {viewChat()}\r\n      <Grid container justify=\"center\">\r\n        <Grid item>\r\n          { !open && renderAvatar()}\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
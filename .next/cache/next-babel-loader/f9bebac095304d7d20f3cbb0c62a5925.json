{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manh nhan\\\\Desktop\\\\new_ndm\\\\components\\\\AdSellLeases\\\\ViewedASLList.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport Validator from \"../../modules/validator\";\nimport GridAdSellLeases from \"../GridList/GridAdSellLeases\";\nimport { localStorageViewed } from \"../../constants\";\n\nconst RelatedAdSellLeases = props => {\n  let currentASLId = props.dataObject.id;\n  const [dataAdSellLeasesViewed, setDataAdSellLeaseViewed] = React.useState([]);\n  useEffect(() => {\n    let viewedItem = localStorage.getItem(localStorageViewed);\n\n    if (viewedItem && !Validator.isBlank(setDataAdSellLeaseViewed)) {\n      try {\n        let viewedItemObject = JSON.parse(viewedItem);\n        let dataASL = [];\n        let countNumber = 0;\n\n        for (let index in viewedItemObject) {\n          if (viewedItemObject[index].node.id !== currentASLId && countNumber < 6) {\n            dataASL.push(viewedItemObject[index]);\n            countNumber++;\n          }\n        }\n\n        setDataAdSellLeaseViewed(dataASL);\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  }, []);\n\n  if (dataAdSellLeasesViewed && dataAdSellLeasesViewed.length > 0) {\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: \"project-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, __jsx(\"h2\", {\n      className: \"project-info-title text-active u-margin-bottom-small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Tin rao \\u0111\\xE3 xem\")), __jsx(\"div\", {\n      className: 'project-body-ad-sell-lease',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, __jsx(GridAdSellLeases, {\n      grid: {\n        xl: 3,\n        lg: 4,\n        md: 6,\n        sm: 6,\n        xs: 12\n      },\n      gridData: dataAdSellLeasesViewed,\n      className: \"grid__list\",\n      maxLength: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    })));\n  } else {\n    return __jsx(React.Fragment, null);\n  }\n};\n\nexport default RelatedAdSellLeases;","map":{"version":3,"sources":["C:/Users/manh nhan/Desktop/new_ndm/components/AdSellLeases/ViewedASLList.tsx"],"names":["React","useEffect","Validator","GridAdSellLeases","localStorageViewed","RelatedAdSellLeases","props","currentASLId","dataObject","id","dataAdSellLeasesViewed","setDataAdSellLeaseViewed","useState","viewedItem","localStorage","getItem","isBlank","viewedItemObject","JSON","parse","dataASL","countNumber","index","node","push","e","console","log","length","xl","lg","md","sm","xs"],"mappings":";;AAAA,OAAOA,KAAP,IAAkCC,SAAlC,QAAkD,OAAlD;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,gBAAP,MAA6B,8BAA7B;AACA,SAAQC,kBAAR,QAAiC,iBAAjC;;AAQA,MAAMC,mBAA0D,GAAIC,KAAD,IAA+B;AAChG,MAAIC,YAAY,GAAGD,KAAK,CAACE,UAAN,CAAiBC,EAApC;AACA,QAAM,CAACC,sBAAD,EAAyBC,wBAAzB,IAAqDX,KAAK,CAACY,QAAN,CAAwC,EAAxC,CAA3D;AACAX,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIY,UAAU,GAAGC,YAAY,CAACC,OAAb,CAAqBX,kBAArB,CAAjB;;AACA,QAAIS,UAAU,IAAI,CAACX,SAAS,CAACc,OAAV,CAAkBL,wBAAlB,CAAnB,EAAgE;AAC9D,UAAI;AACF,YAAIM,gBAAgB,GAAGC,IAAI,CAACC,KAAL,CAAWN,UAAX,CAAvB;AACA,YAAIO,OAAO,GAAG,EAAd;AACA,YAAIC,WAAW,GAAG,CAAlB;;AACA,aAAK,IAAIC,KAAT,IAAkBL,gBAAlB,EAAoC;AAClC,cAAIA,gBAAgB,CAACK,KAAD,CAAhB,CAAwBC,IAAxB,CAA6Bd,EAA7B,KAAoCF,YAApC,IAAoDc,WAAW,GAAG,CAAtE,EAAyE;AACvED,YAAAA,OAAO,CAACI,IAAR,CAAaP,gBAAgB,CAACK,KAAD,CAA7B;AACAD,YAAAA,WAAW;AACZ;AACF;;AACDV,QAAAA,wBAAwB,CAACS,OAAD,CAAxB;AACD,OAXD,CAWE,OAAOK,CAAP,EAAU;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD;AACF;AACF,GAlBQ,EAkBN,EAlBM,CAAT;;AAoBA,MAAIf,sBAAsB,IAAIA,sBAAsB,CAACkB,MAAvB,GAAgC,CAA9D,EAAiE;AAC/D,WACE,4BACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,sDAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,CADF,EAIE;AAAK,MAAA,SAAS,EAAE,4BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,gBAAD;AACE,MAAA,IAAI,EAAE;AAACC,QAAAA,EAAE,EAAE,CAAL;AAAQC,QAAAA,EAAE,EAAE,CAAZ;AAAeC,QAAAA,EAAE,EAAE,CAAnB;AAAsBC,QAAAA,EAAE,EAAE,CAA1B;AAA6BC,QAAAA,EAAE,EAAE;AAAjC,OADR;AAEE,MAAA,QAAQ,EAAEvB,sBAFZ;AAGE,MAAA,SAAS,EAAC,YAHZ;AAIE,MAAA,SAAS,EAAE,CAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJF,CADF;AAeD,GAhBD,MAgBO;AACL,WAAQ,2BAAR;AACD;AAEF,CA3CD;;AA6CA,eAAeL,mBAAf","sourcesContent":["import React, {FunctionComponent, useEffect} from \"react\";\r\nimport Validator from \"../../modules/validator\";\r\nimport GridAdSellLeases from \"../GridList/GridAdSellLeases\";\r\nimport {localStorageViewed} from \"../../constants\";\r\nimport {AdSellLeaseItem} from '../../interfaces/adSellLeaseItem';\r\nimport {AdSellLeasesListProps} from '../../interfaces/interface';\r\n\r\ninterface ViewedASLListProps {\r\n  dataObject: AdSellLeaseItem\r\n}\r\n\r\nconst RelatedAdSellLeases: FunctionComponent<ViewedASLListProps> = (props: ViewedASLListProps) => {\r\n  let currentASLId = props.dataObject.id;\r\n  const [dataAdSellLeasesViewed, setDataAdSellLeaseViewed] = React.useState<AdSellLeasesListProps[]>([]);\r\n  useEffect(() => {\r\n    let viewedItem = localStorage.getItem(localStorageViewed);\r\n    if (viewedItem && !Validator.isBlank(setDataAdSellLeaseViewed)) {\r\n      try {\r\n        let viewedItemObject = JSON.parse(viewedItem);\r\n        let dataASL = [];\r\n        let countNumber = 0;\r\n        for (let index in viewedItemObject) {\r\n          if (viewedItemObject[index].node.id !== currentASLId && countNumber < 6) {\r\n            dataASL.push(viewedItemObject[index]);\r\n            countNumber++;\r\n          }\r\n        }\r\n        setDataAdSellLeaseViewed(dataASL);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  if (dataAdSellLeasesViewed && dataAdSellLeasesViewed.length > 0) {\r\n    return (\r\n      <>\r\n        <div className=\"project-info\">\r\n          <h2 className=\"project-info-title text-active u-margin-bottom-small\">Tin rao đã xem</h2>\r\n        </div>\r\n        <div className={'project-body-ad-sell-lease'}>\r\n          <GridAdSellLeases\r\n            grid={{xl: 3, lg: 4, md: 6, sm: 6, xs: 12}}\r\n            gridData={dataAdSellLeasesViewed}\r\n            className=\"grid__list\"\r\n            maxLength={6}\r\n          />\r\n        </div>\r\n      </>\r\n    );\r\n  } else {\r\n    return (<></>);\r\n  }\r\n\r\n};\r\n\r\nexport default RelatedAdSellLeases;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manh nhan\\\\Desktop\\\\new_ndm\\\\components\\\\Channel\\\\Index.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Members from \"./Tabs/Members\";\nimport Rating from \"./Tabs/Rating\";\nimport Introduce from \"./Tabs/Introduce\";\nimport AdSellLeases from \"./Tabs/AdSellLeases\";\nimport Header from \"./Header\";\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport Paper from \"@material-ui/core/Paper\";\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport _ from 'lodash';\nimport { Tabs, Tab, Grid, Button, Typography, Avatar, Hidden } from \"@material-ui/core\";\nimport { relatedChannel, indexStyles } from \"./Constant\";\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { GET_CHANNELS } from \"../../graphql/channel/queries\";\nimport { apolloClient } from \"../../utils\";\nconst themeInput = createMuiTheme({\n  overrides: {\n    MuiTab: {\n      root: {\n        padding: \"6px\"\n      },\n      wrapper: {\n        fontSize: \"13px\",\n        fontWeight: 700\n      }\n    }\n  }\n});\n;\n;\n;\nconst tabs = [{\n  value: \"ad\",\n  label: \"Tin rao\"\n}, {\n  value: \"introduce\",\n  label: \"Giới thiệu\"\n}, {\n  value: \"members\",\n  label: \"Môi giới\"\n}, {\n  value: \"rating\",\n  label: \"Đánh giá\"\n}];\n\nconst Index = props => {\n  const classes = indexStyles();\n  const [itemTab, setItemTab] = React.useState(\"members\");\n  const [count, setCount] = React.useState(0);\n  const [channels, setChannels] = React.useState();\n\n  const channelId = _.get(props, \"channel.id\", \"\");\n\n  const handleTabsChange = (event, value) => {\n    setItemTab(value);\n  };\n\n  const renderTabs = () => {\n    return __jsx(Paper, {\n      square: true,\n      className: classes.rootTabs,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, __jsx(Hidden, {\n      mdUp: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, __jsx(ThemeProvider, {\n      theme: themeInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, __jsx(Tabs, {\n      onChange: handleTabsChange,\n      scrollButtons: \"auto\",\n      indicatorColor: \"primary\",\n      textColor: \"primary\",\n      variant: \"fullWidth\",\n      value: itemTab,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, tabs.map(tab => __jsx(Tab, {\n      key: tab.value,\n      label: tab.label,\n      value: tab.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }))))), __jsx(Hidden, {\n      smDown: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, __jsx(Tabs, {\n      onChange: handleTabsChange,\n      scrollButtons: \"auto\",\n      indicatorColor: \"primary\",\n      textColor: \"primary\",\n      variant: \"standard\",\n      value: itemTab,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, tabs.map(tab => __jsx(Tab, {\n      key: tab.value,\n      label: tab.label,\n      value: tab.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    })))));\n  };\n\n  const renderTab = () => {\n    return __jsx(\"div\", {\n      className: classes.contentTab,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, itemTab === \"ad\" && __jsx(AdSellLeases, {\n      channelId: channelId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), itemTab === \"introduce\" && __jsx(Introduce, {\n      channelId: channelId,\n      slug: props.slug,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), itemTab === \"members\" && __jsx(Members, {\n      channelId: channelId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), itemTab === \"rating\" && __jsx(Rating, {\n      channelId: channelId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }));\n  };\n\n  const renderRelatedChannel = () => {\n    return __jsx(\"div\", {\n      className: classes.paddingRelatedChannel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, __jsx(Typography, {\n      variant: \"h6\",\n      className: classes.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"K\\xEAnh li\\xEAn quan \"), relatedChannel.map((item, index) => {\n      if (index < count * 6 + 6) {\n        return __jsx(\"div\", {\n          className: classes.contentChannel,\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }, __jsx(Grid, {\n          container: true,\n          spacing: 4,\n          alignItems: \"center\",\n          justify: \"center\",\n          className: classes.paddingContent,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }, __jsx(Grid, {\n          item: true,\n          xs: 12,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: classes.avatarLeft,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }, __jsx(Avatar, {\n          src: item.image,\n          className: classes.large,\n          alt: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        })), __jsx(\"div\", {\n          className: classes.contentFollow,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        }, __jsx(Typography, {\n          className: classes.titleFollow,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        }, item.title), __jsx(Typography, {\n          className: classes.follow,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        }, item.numberFollow, \"L\\u01B0\\u1EE3t theo d\\xF5i\"), item.follow && __jsx(CheckCircleIcon, {\n          style: {\n            color: \"#045EA8\",\n            fontSize: \"15px\",\n            float: \"right\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        })), __jsx(\"div\", {\n          className: classes.clearFloat,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        }))));\n      }\n\n      return \"\";\n    }), __jsx(Grid, {\n      container: true,\n      spacing: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, __jsx(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, __jsx(Button, {\n      onClick: () => setCount(count + 1),\n      fullWidth: true,\n      className: classes.button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"Xem th\\xEAm\"))));\n  };\n\n  React.useEffect(() => {\n    getChannels();\n  });\n\n  const getChannels = async () => {\n    let res = await apolloClient.query({\n      query: GET_CHANNELS,\n      variables: {\n        \"limit\": 8,\n        \"page\": 1,\n        \"filter\": \"{}\"\n      }\n    }).then(response => {\n      console.log('response', response); // return response.data.channelAdSellLeaseRatings.edges\n    }); // if(Array.isArray(ratingsChannel)){\n    //   setRatingsChannel(ratingsChannel)\n    //   setLoading(false)\n    // };\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, __jsx(Header, {\n    userLogin: props.userLogin,\n    channel: props.channel,\n    slug: props.slug,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: classes.paddingIndex,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, renderTabs(), __jsx(Grid, {\n    container: true,\n    spacing: 0,\n    className: classes.paddingContentTab,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 9,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, renderTab()), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, renderRelatedChannel()))));\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/manh nhan/Desktop/new_ndm/components/Channel/Index.tsx"],"names":["React","Members","Rating","Introduce","AdSellLeases","Header","CheckCircleIcon","Paper","ThemeProvider","_","Tabs","Tab","Grid","Button","Typography","Avatar","Hidden","relatedChannel","indexStyles","createMuiTheme","GET_CHANNELS","apolloClient","themeInput","overrides","MuiTab","root","padding","wrapper","fontSize","fontWeight","tabs","value","label","Index","props","classes","itemTab","setItemTab","useState","count","setCount","channels","setChannels","channelId","get","handleTabsChange","event","renderTabs","rootTabs","map","tab","renderTab","contentTab","slug","renderRelatedChannel","paddingRelatedChannel","title","item","index","contentChannel","paddingContent","avatarLeft","image","large","contentFollow","titleFollow","follow","numberFollow","color","float","clearFloat","button","useEffect","getChannels","res","query","variables","then","response","console","log","userLogin","channel","paddingIndex","paddingContentTab"],"mappings":"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","sourcesContent":["import React, { FunctionComponent } from \"react\";\r\nimport Members from \"./Tabs/Members\";\r\nimport Rating from \"./Tabs/Rating\";\r\nimport Introduce from \"./Tabs/Introduce\";\r\nimport AdSellLeases from \"./Tabs/AdSellLeases\";\r\nimport Header from \"./Header\";\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport _ from 'lodash';\r\nimport { Tabs, Tab, Grid, Button, Typography, Avatar, Hidden } from \"@material-ui/core\";\r\nimport { relatedChannel, indexStyles } from \"./Constant\";\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { GET_CHANNELS } from \"../../graphql/channel/queries\";\r\nimport { apolloClient } from \"../../utils\";\r\n\r\n\r\nconst themeInput = createMuiTheme({\r\n  overrides: {\r\n    MuiTab: {\r\n      root: {\r\n        padding: \"6px\",\r\n      },\r\n      wrapper: {\r\n        fontSize: \"13px\",\r\n        fontWeight: 700,\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\ninterface IndexProps {\r\n  userLogin: string\r\n  channel: ChannelProp\r\n  slug: string\r\n};\r\n\r\ninterface Channels {\r\n  edges: {\r\n    node: {\r\n      id: string\r\n      name: string\r\n      slug: string\r\n      avatar: string \r\n      cover: string  \r\n      official_status: number \r\n      follow_value: number\r\n    }\r\n  }\r\n};\r\n\r\ninterface ChannelProp {\r\n  id: string\r\n  name: string\r\n  slug: string\r\n  avatar: string\r\n  cover: string\r\n  description: string\r\n  nation: string\r\n  language: string\r\n  telephone: string\r\n  address: string\r\n  facebook: string\r\n  youtube: string\r\n  website: string\r\n  official_status: number\r\n  follow_value: number\r\n  followers: {\r\n    user_id: string\r\n  }[]\r\n  created_at: string\r\n};\r\n\r\n\r\nconst tabs = [\r\n  { value: \"ad\", label: \"Tin rao\" },\r\n  { value: \"introduce\", label: \"Giới thiệu\" },\r\n  { value: \"members\", label: \"Môi giới\" },\r\n  { value: \"rating\", label: \"Đánh giá\" },\r\n];\r\n\r\nconst Index: FunctionComponent<IndexProps> = (props: any) => {\r\n  const classes = indexStyles();\r\n  const [itemTab, setItemTab] = React.useState(\"members\");\r\n  const [count, setCount] = React.useState<number>(0);\r\n  const [channels, setChannels] = React.useState<Channels>();\r\n  const channelId = _.get(props, \"channel.id\", \"\");\r\n  const handleTabsChange = (event: any, value: any) => {\r\n    setItemTab(value);\r\n  };\r\n\r\n  const renderTabs = () => {\r\n    return (\r\n      <Paper square className={classes.rootTabs} >\r\n        <Hidden mdUp>\r\n          <ThemeProvider theme={themeInput}>\r\n            <Tabs\r\n              onChange={handleTabsChange}\r\n              scrollButtons=\"auto\"\r\n              indicatorColor=\"primary\"\r\n              textColor=\"primary\"\r\n              variant={\"fullWidth\"}\r\n              value={itemTab}\r\n            >\r\n              {tabs.map((tab) => <Tab key={tab.value} label={tab.label} value={tab.value}/> )}\r\n            </Tabs>\r\n          </ThemeProvider>\r\n        </Hidden>\r\n        <Hidden smDown>\r\n          <Tabs\r\n            onChange={handleTabsChange}\r\n            scrollButtons=\"auto\"\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            variant={ \"standard\" }\r\n            value={itemTab}\r\n          >\r\n            {tabs.map((tab) => <Tab key={tab.value} label={tab.label} value={tab.value}/> )}\r\n          </Tabs>\r\n        </Hidden>\r\n      </Paper>\r\n    );\r\n  };\r\n\r\n  const renderTab = () => {\r\n    return (\r\n      <div className={classes.contentTab}>\r\n        {itemTab === \"ad\" && <AdSellLeases channelId={channelId} />}\r\n        {itemTab === \"introduce\" && <Introduce channelId={channelId} slug={props.slug}/>}\r\n        {itemTab === \"members\" && <Members channelId={channelId}  />}\r\n        {itemTab === \"rating\" && <Rating channelId={channelId} />}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderRelatedChannel = () => {\r\n    return (\r\n      <div className={classes.paddingRelatedChannel}>\r\n        <Typography variant=\"h6\" className={classes.title}>Kênh liên quan </Typography>\r\n        {relatedChannel.map((item: any, index: number) => {\r\n          if ( index < count * 6 + 6 ) {\r\n            return (\r\n              <div className={classes.contentChannel} key={index} >\r\n                <Grid container spacing={4} alignItems=\"center\" justify=\"center\" className={classes.paddingContent}>\r\n                  <Grid item xs={12}>\r\n                    <div className={classes.avatarLeft}>\r\n                      <Avatar src={item.image} className={classes.large} alt=\"\" />\r\n                    </div>\r\n                    <div className={classes.contentFollow} >\r\n                      <Typography className={classes.titleFollow}>\r\n                        {item.title}\r\n                      </Typography>\r\n                      <Typography className={classes.follow}>\r\n                        {item.numberFollow}Lượt theo dõi \r\n                      </Typography>\r\n                      {item.follow && <CheckCircleIcon style={{ color: \"#045EA8\", fontSize: \"15px\", float: \"right\" }} />}\r\n                    </div>\r\n                    <div className={classes.clearFloat}></div>\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n            );\r\n          }\r\n          return \"\"\r\n        })}\r\n        <Grid container spacing={4}>\r\n          <Grid item xs={12}>\r\n            <Button onClick={() => setCount(count + 1)} fullWidth className={classes.button}>\r\n              Xem thêm\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  React.useEffect(()=> {\r\n    getChannels()\r\n  })\r\n\r\n  const getChannels = async () => { \r\n    let res = await apolloClient.query({ query: GET_CHANNELS, variables: {\r\n      \"limit\": 8,\r\n      \"page\": 1,\r\n      \"filter\": \"{}\",\r\n    }})\r\n    .then((response: any) => {\r\n      console.log('response', response)\r\n      // return response.data.channelAdSellLeaseRatings.edges\r\n    });\r\n    // if(Array.isArray(ratingsChannel)){\r\n    //   setRatingsChannel(ratingsChannel)\r\n    //   setLoading(false)\r\n    // };\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header userLogin={props.userLogin} channel={props.channel} slug={props.slug}/>\r\n      <div className={classes.paddingIndex}>\r\n        {renderTabs()}\r\n        <Grid container spacing={0} className={classes.paddingContentTab}>\r\n          <Grid item xs={12} md={9}>\r\n            {renderTab()}\r\n          </Grid>\r\n          <Grid item xs={12} md={3}>\r\n            {renderRelatedChannel()}\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}
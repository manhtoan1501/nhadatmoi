{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manh nhan\\\\Desktop\\\\new_ndm\\\\components\\\\Channel\\\\Index.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Agency from \"./Tabs/Agency\";\nimport Rating from \"./Tabs/Rating\";\nimport Introduce from \"./Tabs/Introduce\";\nimport AdSellLeases from \"./Tabs/AdSellLeases\";\nimport Header from \"./Header\";\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport Paper from \"@material-ui/core/Paper\";\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { Tabs, Tab, Grid, Button, Typography, Avatar, Hidden } from \"@material-ui/core\";\nimport { relatedChannel, indexStyles } from \"./Constant\";\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { GET_CHANNEL_BY_SLUG } from \"../../graphql/channel/queries\";\nimport { apolloClient } from \"../../utils\";\nconst themeInput = createMuiTheme({\n  overrides: {\n    MuiTab: {\n      root: {\n        padding: \"6px\"\n      },\n      wrapper: {\n        fontSize: \"13px\",\n        fontWeight: 700\n      }\n    }\n  }\n});\n\nconst Index = props => {\n  const classes = indexStyles();\n  const [itemTab, setItemTab] = React.useState(\"ad\");\n  const [count, setCount] = React.useState(0);\n  const tabs = [{\n    value: \"ad\",\n    label: \"Tin rao\"\n  }, {\n    value: \"introduce\",\n    label: \"Giới thiệu\"\n  }, {\n    value: \"agency\",\n    label: \"Môi giới\"\n  }, {\n    value: \"rating\",\n    label: \"Đánh giá\"\n  }];\n\n  const getChannel = async () => {\n    let slug = \"kenh-giai-tri-1588654533689\";\n    let channel = await apolloClient.query({\n      query: GET_CHANNEL_BY_SLUG,\n      variables: {\n        \"slug\": slug\n      }\n    }).then(response => {\n      console.log(\"response Tra ve ket qua cho anh\", response);\n    });\n    console.log(\"channel\", channel);\n  };\n\n  React.useEffect(() => {\n    getChannel();\n  });\n\n  const handleTabsChange = (event, value) => {\n    setItemTab(value);\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, __jsx(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: classes.paddingIndex,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, __jsx(Paper, {\n    square: true,\n    className: classes.rootTabs,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, __jsx(Hidden, {\n    mdUp: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, __jsx(ThemeProvider, {\n    theme: themeInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, __jsx(Tabs, {\n    onChange: handleTabsChange,\n    scrollButtons: \"auto\",\n    indicatorColor: \"primary\",\n    textColor: \"primary\",\n    variant: \"fullWidth\",\n    value: itemTab,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, tabs.map(tab => __jsx(Tab, {\n    key: tab.value,\n    label: tab.label,\n    value: tab.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }))))), __jsx(Hidden, {\n    smDown: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, __jsx(Tabs, {\n    onChange: handleTabsChange,\n    scrollButtons: \"auto\",\n    indicatorColor: \"primary\",\n    textColor: \"primary\",\n    variant: \"standard\",\n    value: itemTab,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, tabs.map(tab => __jsx(Tab, {\n    key: tab.value,\n    label: tab.label,\n    value: tab.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }))))), __jsx(Grid, {\n    container: true,\n    spacing: 0,\n    className: classes.paddingContentTab,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 9,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.contentTab,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, itemTab === \"ad\" && __jsx(AdSellLeases, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }), itemTab === \"introduce\" && __jsx(Introduce, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }), itemTab === \"agency\" && __jsx(Agency, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }), itemTab === \"rating\" && __jsx(Rating, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.paddingRelatedChannel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    className: classes.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, \"K\\xEAnh li\\xEAn \"), relatedChannel.map((item, index) => {\n    if (index < count * 6 + 6) {\n      return __jsx(\"div\", {\n        className: classes.contentChannel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, __jsx(Grid, {\n        key: index,\n        container: true,\n        spacing: 4,\n        alignItems: \"center\",\n        justify: \"center\",\n        className: classes.padingContent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, __jsx(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: classes.avatarLeft,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, __jsx(Avatar, {\n        src: item.image,\n        className: classes.large,\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      })), __jsx(\"div\", {\n        className: classes.contentFollow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, __jsx(Typography, {\n        className: classes.titleFollow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, item.title), __jsx(Typography, {\n        className: classes.follow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, item.numberfollow, \"L\\u01B0\\u1EE3t theo d\\xF5i\"), item.follow && __jsx(CheckCircleIcon, {\n        style: {\n          color: \"#045EA8\",\n          fontSize: \"15px\",\n          float: \"right\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      })), __jsx(\"div\", {\n        className: classes.clearFloat,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }))));\n    } else {\n      return \"\";\n    }\n  }), __jsx(Grid, {\n    container: true,\n    spacing: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, __jsx(Button, {\n    onClick: () => setCount(count + 1),\n    fullWidth: true,\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, \"Xem th\\xEAm\"))))))));\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/manh nhan/Desktop/new_ndm/components/Channel/Index.tsx"],"names":["React","Agency","Rating","Introduce","AdSellLeases","Header","CheckCircleIcon","Paper","ThemeProvider","Tabs","Tab","Grid","Button","Typography","Avatar","Hidden","relatedChannel","indexStyles","createMuiTheme","GET_CHANNEL_BY_SLUG","apolloClient","themeInput","overrides","MuiTab","root","padding","wrapper","fontSize","fontWeight","Index","props","classes","itemTab","setItemTab","useState","count","setCount","tabs","value","label","getChannel","slug","channel","query","variables","then","response","console","log","useEffect","handleTabsChange","event","paddingIndex","rootTabs","map","tab","paddingContentTab","contentTab","paddingRelatedChannel","title","item","index","contentChannel","padingContent","avatarLeft","image","large","contentFollow","titleFollow","follow","numberfollow","color","float","clearFloat","button"],"mappings":"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","sourcesContent":["import React, { FunctionComponent } from \"react\";\r\nimport Agency from \"./Tabs/Agency\";\r\nimport Rating from \"./Tabs/Rating\";\r\nimport Introduce from \"./Tabs/Introduce\";\r\nimport AdSellLeases from \"./Tabs/AdSellLeases\";\r\nimport Header from \"./Header\";\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport StyledCheckbox from \"./StyledCheckbox\";\r\nimport _ from 'lodash'\r\nimport {\r\n  Tabs,\r\n  Tab,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  Typography,\r\n  Avatar,\r\n  Hidden,\r\n} from \"@material-ui/core\";\r\nimport { relatedChannel, indexStyles } from \"./Constant\";\r\nimport { createMuiTheme } from '@material-ui/core/styles'\r\nimport { Badge } from '@material-ui/core'\r\nimport { Theme, makeStyles, withStyles, createStyles } from '@material-ui/core/styles'\r\nimport { GET_CHANNEL_BY_SLUG } from \"../../graphql/channel/queries\"\r\nimport {apolloClient} from \"../../utils\";\r\n\r\nconst themeInput = createMuiTheme({\r\n  overrides: {\r\n    MuiTab: {\r\n      root: {\r\n        padding: \"6px\",\r\n      },\r\n      wrapper: {\r\n        fontSize: \"13px\",\r\n        fontWeight: 700,\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\ninterface IndexProps {\r\n\r\n}\r\n\r\ninterface CommentsProp {\r\n  node: {\r\n    id: string;\r\n    ad_sell_lease_id: string;\r\n    content: string;\r\n    user_id: string;\r\n    media: string;\r\n    user: {\r\n      first_name: string;\r\n      last_name: string;\r\n      avatar: string;\r\n    };\r\n    like_number: string;\r\n    created_at: string;\r\n  };\r\n}\r\n\r\ninterface UserProps {\r\n  address: string;\r\n  avatar: string;\r\n  birthday: string;\r\n  email: string;\r\n  facebook: string;\r\n  first_name: string;\r\n  gender: string;\r\n  google_id: string;\r\n  intro: string;\r\n  id: string;\r\n  last_name: string;\r\n  phone: string;\r\n  mobile: string;\r\n  skype: string;\r\n  username: string;\r\n  viber: string;\r\n  website: string;\r\n  zalo: string;\r\n  created_at: string;\r\n  updated_at: string;\r\n}\r\n\r\ninterface RatingsProp {\r\n  node: {\r\n    id: string;\r\n    ad_sell_lease_id: string;\r\n    content: string;\r\n    user_id: string;\r\n    media: string;\r\n    user: {\r\n      first_name: string;\r\n      last_name: string;\r\n      avatar: string;\r\n    };\r\n    rate: number;\r\n    like_number: string;\r\n    created_at: string;\r\n  };\r\n}\r\n\r\nconst Index: FunctionComponent<IndexProps> = (props: any) => {\r\n  const classes = indexStyles();\r\n  const [itemTab, setItemTab] = React.useState(\"ad\");\r\n  const [count, setCount] = React.useState<number>(0);\r\n  const tabs = [\r\n    { value: \"ad\", label: \"Tin rao\" },\r\n    { value: \"introduce\", label: \"Giới thiệu\" },\r\n    { value: \"agency\", label: \"Môi giới\" },\r\n    { value: \"rating\", label: \"Đánh giá\" },\r\n  ];\r\n\r\n  const getChannel = async ()=> { \r\n    let slug = \"kenh-giai-tri-1588654533689\"\r\n    let channel = await apolloClient.query({ query: GET_CHANNEL_BY_SLUG, variables: {\r\n      \"slug\": slug,\r\n    }})\r\n    .then((response: any) => {\r\n      console.log(\"response Tra ve ket qua cho anh\", response)\r\n    })\r\n    console.log(\"channel\", channel)\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    getChannel()\r\n  })\r\n\r\n  const handleTabsChange = (event: any, value: any) => {\r\n    setItemTab(value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div className={classes.paddingIndex}>\r\n        <Paper square className={classes.rootTabs} >\r\n          <Hidden mdUp>\r\n            <ThemeProvider theme={themeInput}>\r\n              <Tabs\r\n                onChange={handleTabsChange}\r\n                scrollButtons=\"auto\"\r\n                indicatorColor=\"primary\"\r\n                textColor=\"primary\"\r\n                variant={\"fullWidth\"}\r\n                value={itemTab}\r\n              >\r\n                {tabs.map((tab) => <Tab key={tab.value} label={tab.label} value={tab.value}/> )}\r\n              </Tabs>\r\n            </ThemeProvider>\r\n          </Hidden>\r\n          <Hidden smDown>\r\n            <Tabs\r\n              onChange={handleTabsChange}\r\n              scrollButtons=\"auto\"\r\n              indicatorColor=\"primary\"\r\n              textColor=\"primary\"\r\n              variant={ \"standard\" }\r\n              value={itemTab}\r\n            >\r\n              {tabs.map((tab) => <Tab key={tab.value} label={tab.label} value={tab.value}/> )}\r\n            </Tabs>\r\n          </Hidden>\r\n        </Paper>\r\n        <Grid container spacing={0} className={classes.paddingContentTab}>\r\n          <Grid item xs={12} md={9}>\r\n            <div className={classes.contentTab}>\r\n              {itemTab === \"ad\" && <AdSellLeases />}\r\n              {itemTab === \"introduce\" && <Introduce />}\r\n              {itemTab === \"agency\" && <Agency />}\r\n              {itemTab === \"rating\" && <Rating />}\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={12} md={3}>\r\n            <div className={classes.paddingRelatedChannel}>\r\n              <Typography variant=\"h6\" className={classes.title}>Kênh liên </Typography>\r\n              {relatedChannel.map((item: any, index: number) => {\r\n                if (index < count * 6 + 6) {\r\n                  return (\r\n                    <div className={classes.contentChannel} >\r\n                      <Grid key={index} container spacing={4} alignItems=\"center\" justify=\"center\" className={classes.padingContent}>\r\n                        <Grid item xs={12}>\r\n                          <div className={classes.avatarLeft}>\r\n                            <Avatar src={item.image} className={classes.large} alt=\"\" />\r\n                          </div>\r\n                          <div className={classes.contentFollow} >\r\n                            <Typography className={classes.titleFollow}>\r\n                              {item.title}\r\n                            </Typography>\r\n                            <Typography className={classes.follow}>\r\n                              {item.numberfollow}Lượt theo dõi \r\n                            </Typography>\r\n                            {item.follow && <CheckCircleIcon style={{ color: \"#045EA8\", fontSize: \"15px\", float: \"right\" }} />}\r\n                          </div>\r\n                          <div className={classes.clearFloat}></div>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </div>\r\n                  );\r\n                } else {\r\n                  return \"\";\r\n                }\r\n              })}\r\n              <Grid container spacing={4}>\r\n                <Grid item xs={12}>\r\n                  <Button onClick={() => setCount(count + 1)} fullWidth className={classes.button}>\r\n                    Xem thêm\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"C:\\\\Users\\\\manh nhan\\\\Desktop\\\\data\\\\chat\\\\components\\\\AdSellLeases\\\\SuggestASL.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport { apolloClient } from \"../../utils\";\nimport { GET_AD_SELL_LEASES } from \"../../graphql/ad_sell_leases/queries\";\nimport Validator from \"../../modules/validator\";\nimport GridAdSellLeases from \"../GridList/GridAdSellLeases\";\n\nconst SuggestASL = props => {\n  let filterObject = {\n    recommendation: true\n  };\n  let currentASLId = props.dataObject.id; //Search Data AdsellLease\n\n  const [searchDataAdSellLease, setSearchDataAdSellLease] = React.useState([]);\n  useEffect(() => {\n    let dataFilter = _JSON$stringify(filterObject);\n\n    dataFilter = dataFilter.split('\"').join(\"'\");\n    apolloClient.query({\n      query: GET_AD_SELL_LEASES,\n      variables: {\n        \"page\": 1,\n        \"limit\": 7,\n        \"filter\": dataFilter\n      }\n    }).then(response => {\n      if (!Validator.isBlank(response.data) && !Validator.isBlank(response.data.adSellLeases.edges)) {\n        let dataASL = [];\n        let countNumber = 0;\n\n        for (let index in response.data.adSellLeases.edges) {\n          if (response.data.adSellLeases.edges[index].node.id !== currentASLId && countNumber < 6) {\n            dataASL.push(response.data.adSellLeases.edges[index]);\n            countNumber++;\n          }\n        }\n\n        setSearchDataAdSellLease(dataASL);\n      }\n    });\n  }, []);\n\n  if (searchDataAdSellLease && searchDataAdSellLease.length > 0) {\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: \"project-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, __jsx(\"h2\", {\n      className: \"project-info-title text-active u-margin-bottom-small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Nh\\u1EEFng ng\\u01B0\\u1EDDi xem tin rao n\\xE0y c\\u0169ng \\u0111\\xE3 xem\")), __jsx(\"div\", {\n      className: 'project-body-ad-sell-lease',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, __jsx(GridAdSellLeases, {\n      grid: {\n        xl: 3,\n        lg: 4,\n        md: 6,\n        sm: 6,\n        xs: 12\n      },\n      gridData: searchDataAdSellLease,\n      className: \"grid__list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })));\n  } else {\n    return __jsx(React.Fragment, null);\n  }\n};\n\nexport default SuggestASL;","map":{"version":3,"sources":["C:/Users/manh nhan/Desktop/data/chat/components/AdSellLeases/SuggestASL.tsx"],"names":["React","useEffect","apolloClient","GET_AD_SELL_LEASES","Validator","GridAdSellLeases","SuggestASL","props","filterObject","recommendation","currentASLId","dataObject","id","searchDataAdSellLease","setSearchDataAdSellLease","useState","dataFilter","split","join","query","variables","then","response","isBlank","data","adSellLeases","edges","dataASL","countNumber","index","node","push","length","xl","lg","md","sm","xs"],"mappings":";;;AAAA,OAAOA,KAAP,IAAkCC,SAAlC,QAAkD,OAAlD;AACA,SAAQC,YAAR,QAA2B,aAA3B;AACA,SAAQC,kBAAR,QAAiC,sCAAjC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,gBAAP,MAA6B,8BAA7B;;AAQA,MAAMC,UAA2C,GAAIC,KAAD,IAAyB;AAC3E,MAAIC,YAAY,GAAI;AAClBC,IAAAA,cAAc,EAAE;AADE,GAApB;AAGA,MAAIC,YAAY,GAAGH,KAAK,CAACI,UAAN,CAAiBC,EAApC,CAJ2E,CAK3E;;AACA,QAAM,CAACC,qBAAD,EAAwBC,wBAAxB,IAAoDd,KAAK,CAACe,QAAN,CAAwC,EAAxC,CAA1D;AACAd,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIe,UAAU,GAAG,gBAAeR,YAAf,CAAjB;;AACAQ,IAAAA,UAAU,GAAGA,UAAU,CAACC,KAAX,CAAiB,GAAjB,EAAsBC,IAAtB,CAA2B,GAA3B,CAAb;AACAhB,IAAAA,YAAY,CAACiB,KAAb,CAAmB;AAACA,MAAAA,KAAK,EAAEhB,kBAAR;AAA4BiB,MAAAA,SAAS,EAAE;AACtD,gBAAQ,CAD8C;AAEtD,iBAAS,CAF6C;AAGtD,kBAAUJ;AAH4C;AAAvC,KAAnB,EAIMK,IAJN,CAIWC,QAAQ,IAAI;AACrB,UAAI,CAAClB,SAAS,CAACmB,OAAV,CAAkBD,QAAQ,CAACE,IAA3B,CAAD,IAAqC,CAACpB,SAAS,CAACmB,OAAV,CAAkBD,QAAQ,CAACE,IAAT,CAAcC,YAAd,CAA2BC,KAA7C,CAA1C,EAA+F;AAC7F,YAAIC,OAAO,GAAG,EAAd;AACA,YAAIC,WAAW,GAAG,CAAlB;;AACA,aAAK,IAAIC,KAAT,IAAkBP,QAAQ,CAACE,IAAT,CAAcC,YAAd,CAA2BC,KAA7C,EAAoD;AAClD,cAAIJ,QAAQ,CAACE,IAAT,CAAcC,YAAd,CAA2BC,KAA3B,CAAiCG,KAAjC,EAAwCC,IAAxC,CAA6ClB,EAA7C,KAAoDF,YAApD,IAAoEkB,WAAW,GAAG,CAAtF,EAAyF;AACvFD,YAAAA,OAAO,CAACI,IAAR,CAAaT,QAAQ,CAACE,IAAT,CAAcC,YAAd,CAA2BC,KAA3B,CAAiCG,KAAjC,CAAb;AACAD,YAAAA,WAAW;AACZ;AACF;;AACDd,QAAAA,wBAAwB,CAACa,OAAD,CAAxB;AACD;AACF,KAhBD;AAiBD,GApBQ,EAoBN,EApBM,CAAT;;AAsBA,MAAId,qBAAqB,IAAIA,qBAAqB,CAACmB,MAAtB,GAA+B,CAA5D,EAA+D;AAC7D,WACI,4BACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,sDAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gFADF,CADF,EAIE;AAAK,MAAA,SAAS,EAAE,4BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,gBAAD;AACI,MAAA,IAAI,EAAE;AAACC,QAAAA,EAAE,EAAE,CAAL;AAAQC,QAAAA,EAAE,EAAE,CAAZ;AAAeC,QAAAA,EAAE,EAAE,CAAnB;AAAsBC,QAAAA,EAAE,EAAE,CAA1B;AAA6BC,QAAAA,EAAE,EAAE;AAAjC,OADV;AAEI,MAAA,QAAQ,EAAExB,qBAFd;AAGI,MAAA,SAAS,EAAC,YAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJF,CADJ;AAcD,GAfD,MAeO;AACL,WAAQ,2BAAR;AACD;AAEF,CAhDD;;AAkDA,eAAeP,UAAf","sourcesContent":["import React, {FunctionComponent, useEffect} from \"react\";\r\nimport {apolloClient} from \"../../utils\";\r\nimport {GET_AD_SELL_LEASES} from \"../../graphql/ad_sell_leases/queries\";\r\nimport Validator from \"../../modules/validator\";\r\nimport GridAdSellLeases from \"../GridList/GridAdSellLeases\";\r\nimport {AdSellLeasesListProps} from '../../interfaces/interface';\r\nimport {AdSellLeaseItem} from '../../interfaces/adSellLeaseItem';\r\n\r\ninterface ProjectProps {\r\n  dataObject: AdSellLeaseItem\r\n}\r\n\r\nconst SuggestASL: FunctionComponent<ProjectProps> = (props: ProjectProps) => {\r\n  let filterObject =  {\r\n    recommendation: true\r\n  };\r\n  let currentASLId = props.dataObject.id;\r\n  //Search Data AdsellLease\r\n  const [searchDataAdSellLease, setSearchDataAdSellLease] = React.useState<AdSellLeasesListProps[]>([]);\r\n  useEffect(() => {\r\n    let dataFilter = JSON.stringify(filterObject);\r\n    dataFilter = dataFilter.split('\"').join(\"'\");\r\n    apolloClient.query({query: GET_AD_SELL_LEASES, variables: {\r\n        \"page\": 1,\r\n        \"limit\": 7,\r\n        \"filter\": dataFilter\r\n      }}).then(response => {\r\n      if (!Validator.isBlank(response.data) && !Validator.isBlank(response.data.adSellLeases.edges)) {\r\n        let dataASL = [];\r\n        let countNumber = 0;\r\n        for (let index in response.data.adSellLeases.edges) {\r\n          if (response.data.adSellLeases.edges[index].node.id !== currentASLId && countNumber < 6) {\r\n            dataASL.push(response.data.adSellLeases.edges[index]);\r\n            countNumber++;\r\n          }\r\n        }\r\n        setSearchDataAdSellLease(dataASL);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  if (searchDataAdSellLease && searchDataAdSellLease.length > 0) {\r\n    return (\r\n        <>\r\n          <div className=\"project-info\">\r\n            <h2 className=\"project-info-title text-active u-margin-bottom-small\">Những người xem tin rao này cũng đã xem</h2>\r\n          </div>\r\n          <div className={'project-body-ad-sell-lease'}>\r\n            <GridAdSellLeases\r\n                grid={{xl: 3, lg: 4, md: 6, sm: 6, xs: 12}}\r\n                gridData={searchDataAdSellLease}\r\n                className=\"grid__list\"\r\n            />\r\n          </div>\r\n        </>\r\n    );\r\n  } else {\r\n    return (<></>);\r\n  }\r\n\r\n};\r\n\r\nexport default SuggestASL;\r\n"]},"metadata":{},"sourceType":"module"}
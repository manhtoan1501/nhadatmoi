{"ast":null,"code":"var addCommas = function addCommas(inputString) {\n  var rx = /(\\d+)(\\d{3})/;\n  return String(inputString).replace(/^\\d+/, function (w) {\n    while (rx.test(w)) {\n      w = w.replace(rx, '$1.$2');\n    }\n\n    return w;\n  });\n};\n\nvar getMonths = function getMonths() {\n  return {\n    '1': '01',\n    '2': '02',\n    '3': '03',\n    '4': '04',\n    '5': '05',\n    '6': '06',\n    '7': '07',\n    '8': '08',\n    '9': '09',\n    '10': '10',\n    '11': '11',\n    '12': '12'\n  };\n};\n\nvar getGender = function getGender() {\n  return {\n    'female': 'Nữ',\n    'male': 'Nam',\n    'none': 'Không xác định'\n  };\n};\n\nvar getDays = function getDays() {\n  return {\n    '1': '01',\n    '2': '02',\n    '3': '03',\n    '4': '04',\n    '5': '05',\n    '6': '06',\n    '7': '07',\n    '8': '08',\n    '9': '09',\n    '10': '10',\n    '11': '11',\n    '12': '12',\n    '13': '13',\n    '14': '14',\n    '15': '15',\n    '16': '16',\n    '17': '17',\n    '18': '18',\n    '19': '19',\n    '20': '20',\n    '21': '21',\n    '22': '22',\n    '23': '23',\n    '24': '24',\n    '25': '25',\n    '26': '26',\n    '27': '27',\n    '28': '28',\n    '29': '29',\n    '30': '30',\n    '31': '31'\n  };\n};\n\nvar truncateString = function truncateString(string, length, ending) {\n  if (length === null) {\n    length = 100;\n  }\n\n  if (ending === null) {\n    ending = '...';\n  }\n\n  if (string.length > length) {\n    return string.substring(0, length - ending.length) + ending;\n  } else {\n    return string;\n  }\n};\n\nvar stripTags = function stripTags(input, allowed) {\n  allowed = (((allowed || '') + '').toLowerCase().match(/<[a-z][a-z0-9]*>/g) || []).join('');\n  var tags = /<\\/?([a-z][a-z0-9]*)\\b[^>]*>/gi;\n  return input.replace(tags, function ($0, $1) {\n    return allowed.indexOf('<' + $1.toLowerCase() + '>') > -1 ? $0 : '';\n  });\n}; // @ts-ignore\n\n\nvar stripProperties = function stripProperties(input, allowed) {\n  allowed = (((allowed || '') + '').toLowerCase().match(/[a-z][a-z0-9]*/g) || []).join('');\n  var properties = /\\s([a-z][a-z0-9]*)=\"[^\"]*\"/gi; // @ts-ignore\n\n  return input.replace(properties, function ($0, $1) {\n    return allowed.indexOf($1.toLowerCase()) > -1 ? $0 : '';\n  });\n};\n\nexport default {\n  truncateString: truncateString,\n  getDays: getDays,\n  getGender: getGender,\n  getMonths: getMonths,\n  addCommas: addCommas,\n  stripTags: stripTags,\n  stripProperties: stripProperties\n};","map":{"version":3,"sources":["C:/Users/manh nhan/Desktop/new_ndm/modules/stringProcess.tsx"],"names":["addCommas","inputString","rx","String","replace","w","test","getMonths","getGender","getDays","truncateString","string","length","ending","substring","stripTags","input","allowed","toLowerCase","match","join","tags","$0","$1","indexOf","stripProperties","properties"],"mappings":"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","sourcesContent":["const addCommas = (inputString: string) => {\r\n  let rx=  /(\\d+)(\\d{3})/;\r\n  return String(inputString).replace(/^\\d+/, function(w){\r\n    while(rx.test(w)){\r\n      w= w.replace(rx, '$1.$2');\r\n    }\r\n    return w;\r\n  });\r\n};\r\n\r\nconst getMonths = () => {\r\n  return {\r\n    '1' : '01',\r\n    '2' : '02',\r\n    '3' : '03',\r\n    '4' : '04',\r\n    '5' : '05',\r\n    '6' : '06',\r\n    '7' : '07',\r\n    '8' : '08',\r\n    '9' : '09',\r\n    '10' : '10',\r\n    '11' : '11',\r\n    '12' : '12',\r\n  };\r\n};\r\n\r\nconst getGender = () => {\r\n  return {\r\n    'female' : 'Nữ',\r\n    'male' : 'Nam',\r\n    'none' : 'Không xác định'\r\n  }\r\n};\r\n\r\nconst getDays = () => {\r\n  return {\r\n    '1' : '01',\r\n    '2' : '02',\r\n    '3' : '03',\r\n    '4' : '04',\r\n    '5' : '05',\r\n    '6' : '06',\r\n    '7' : '07',\r\n    '8' : '08',\r\n    '9' : '09',\r\n    '10' : '10',\r\n    '11' : '11',\r\n    '12' : '12',\r\n    '13' : '13',\r\n    '14' : '14',\r\n    '15' : '15',\r\n    '16' : '16',\r\n    '17' : '17',\r\n    '18' : '18',\r\n    '19' : '19',\r\n    '20' : '20',\r\n    '21' : '21',\r\n    '22' : '22',\r\n    '23' : '23',\r\n    '24' : '24',\r\n    '25' : '25',\r\n    '26' : '26',\r\n    '27' : '27',\r\n    '28' : '28',\r\n    '29' : '29',\r\n    '30' : '30',\r\n    '31' : '31'\r\n  };\r\n};\r\n\r\nconst truncateString = (string: string, length: number, ending: string) => {\r\n  if (length === null) {\r\n    length = 100;\r\n  }\r\n  if (ending === null) {\r\n    ending = '...';\r\n  }\r\n  if (string.length > length) {\r\n    return string.substring(0, length - ending.length) + ending;\r\n  } else {\r\n    return string;\r\n  }\r\n};\r\n\r\nconst stripTags = (input: string, allowed: string) => {\r\n  allowed = (((allowed || '') + '').toLowerCase().match(/<[a-z][a-z0-9]*>/g) || []).join('');\r\n  const tags = /<\\/?([a-z][a-z0-9]*)\\b[^>]*>/gi;\r\n  return input.replace(tags, ($0, $1) => (allowed.indexOf('<' + $1.toLowerCase() + '>') > -1 ? $0 : ''));\r\n};\r\n\r\n// @ts-ignore\r\nconst stripProperties = (input, allowed) => {\r\n  allowed = (((allowed || '') + '').toLowerCase().match(/[a-z][a-z0-9]*/g) || []).join('');\r\n  const properties = /\\s([a-z][a-z0-9]*)=\"[^\"]*\"/gi;\r\n  // @ts-ignore\r\n  return input.replace(properties, ($0, $1) => (allowed.indexOf($1.toLowerCase()) > -1 ? $0 : ''));\r\n};\r\n\r\nexport default {\r\n  truncateString,\r\n  getDays,\r\n  getGender,\r\n  getMonths,\r\n  addCommas,\r\n  stripTags,\r\n  stripProperties\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}
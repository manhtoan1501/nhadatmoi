{"ast":null,"code":"import StringProcess from \"./stringProcess\";\n\nconst priceProcess = (priceValue, priceUnit) => {\n  if (!priceValue || Number(priceValue) === 0) {\n    return 'Giá liên hệ';\n  } else {\n    return formatPriceValue(priceValue, priceUnit) + ' ' + getPriceUnit(priceValue, priceUnit);\n  }\n};\n\nlet millionUnit = 'triệu';\nlet billionUnit = 'tỉ';\n\nconst formatPriceValue = (priceValue, priceUnit) => {\n  if (priceValue && priceUnit && (priceUnit === 'million' || priceUnit === 'triệu')) {\n    let priceValueNumber = Number(priceValue);\n\n    if (priceValueNumber < 1000) {\n      priceValueNumber = Math.round(priceValueNumber * 100) / 100;\n      return StringProcess.addCommas(String(Number(priceValueNumber)));\n    } else {\n      priceValueNumber = priceValueNumber / 1000;\n      priceValueNumber = Math.round(priceValueNumber * 100) / 100;\n      return StringProcess.addCommas(String(Number(priceValueNumber)));\n    }\n  } else {\n    return StringProcess.addCommas(String(Number(priceValue)));\n  }\n};\n\nconst getPriceUnit = (priceValue, priceUnit) => {\n  if (priceValue && priceUnit && (priceUnit === 'million' || priceUnit === 'triệu')) {\n    let priceValueNumber = Number(priceValue);\n\n    if (priceValueNumber < 1000) {\n      return millionUnit;\n    } else {\n      return billionUnit;\n    }\n  } else {\n    return priceUnit ? priceUnit : 'đồng';\n  }\n};\n\nexport default {\n  priceProcess\n};","map":{"version":3,"sources":["C:/Users/manh nhan/Desktop/new_ndm/modules/priceProcess.tsx"],"names":["StringProcess","priceProcess","priceValue","priceUnit","Number","formatPriceValue","getPriceUnit","millionUnit","billionUnit","priceValueNumber","Math","round","addCommas","String"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,iBAA1B;;AAEA,MAAMC,YAAY,GAAG,CAACC,UAAD,EAA0BC,SAA1B,KAAqD;AACxE,MAAI,CAACD,UAAD,IAAeE,MAAM,CAACF,UAAD,CAAN,KAAuB,CAA1C,EAA6C;AAC3C,WAAO,aAAP;AACD,GAFD,MAEO;AACL,WAAOG,gBAAgB,CAACH,UAAD,EAAaC,SAAb,CAAhB,GAA0C,GAA1C,GAAgDG,YAAY,CAACJ,UAAD,EAAaC,SAAb,CAAnE;AACD;AACF,CAND;;AAQA,IAAII,WAAW,GAAG,OAAlB;AACA,IAAIC,WAAW,GAAG,IAAlB;;AAEA,MAAMH,gBAAgB,GAAG,CAACH,UAAD,EAA0BC,SAA1B,KAAqD;AAC5E,MAAID,UAAU,IAAIC,SAAd,KAA4BA,SAAS,KAAK,SAAd,IAA2BA,SAAS,KAAK,OAArE,CAAJ,EAAmF;AACjF,QAAIM,gBAAgB,GAAGL,MAAM,CAACF,UAAD,CAA7B;;AACA,QAAIO,gBAAgB,GAAG,IAAvB,EAA6B;AAC3BA,MAAAA,gBAAgB,GAAGC,IAAI,CAACC,KAAL,CAAWF,gBAAgB,GAAG,GAA9B,IAAmC,GAAtD;AACA,aAAOT,aAAa,CAACY,SAAd,CAAwBC,MAAM,CAACT,MAAM,CAACK,gBAAD,CAAP,CAA9B,CAAP;AACD,KAHD,MAGO;AACLA,MAAAA,gBAAgB,GAAGA,gBAAgB,GAAC,IAApC;AACAA,MAAAA,gBAAgB,GAAGC,IAAI,CAACC,KAAL,CAAWF,gBAAgB,GAAG,GAA9B,IAAmC,GAAtD;AACA,aAAOT,aAAa,CAACY,SAAd,CAAwBC,MAAM,CAACT,MAAM,CAACK,gBAAD,CAAP,CAA9B,CAAP;AACD;AACF,GAVD,MAUO;AACL,WAAOT,aAAa,CAACY,SAAd,CAAwBC,MAAM,CAACT,MAAM,CAACF,UAAD,CAAP,CAA9B,CAAP;AACD;AACF,CAdD;;AAeA,MAAMI,YAAY,GAAG,CAACJ,UAAD,EAA0BC,SAA1B,KAAqD;AACxE,MAAID,UAAU,IAAIC,SAAd,KAA4BA,SAAS,KAAK,SAAd,IAA2BA,SAAS,KAAK,OAArE,CAAJ,EAAmF;AACjF,QAAIM,gBAAgB,GAAGL,MAAM,CAACF,UAAD,CAA7B;;AACA,QAAIO,gBAAgB,GAAG,IAAvB,EAA6B;AAC3B,aAAOF,WAAP;AACD,KAFD,MAEO;AACL,aAAOC,WAAP;AACD;AACF,GAPD,MAOO;AACL,WAASL,SAAD,GAAYA,SAAZ,GAAsB,MAA9B;AACD;AACF,CAXD;;AAaA,eAAe;AACbF,EAAAA;AADa,CAAf","sourcesContent":["import StringProcess from \"./stringProcess\";\r\n\r\nconst priceProcess = (priceValue: string|null, priceUnit: string|null) => {\r\n  if (!priceValue || Number(priceValue) === 0) {\r\n    return 'Giá liên hệ'\r\n  } else {\r\n    return formatPriceValue(priceValue, priceUnit) + ' ' + getPriceUnit(priceValue, priceUnit);\r\n  }\r\n};\r\n\r\nlet millionUnit = 'triệu';\r\nlet billionUnit = 'tỉ';\r\n\r\nconst formatPriceValue = (priceValue: string|null, priceUnit: string|null) => {\r\n  if (priceValue && priceUnit && (priceUnit === 'million' || priceUnit === 'triệu')) {\r\n    let priceValueNumber = Number(priceValue);\r\n    if (priceValueNumber < 1000) {\r\n      priceValueNumber = Math.round(priceValueNumber * 100)/100;\r\n      return StringProcess.addCommas(String(Number(priceValueNumber)));\r\n    } else {\r\n      priceValueNumber = priceValueNumber/1000;\r\n      priceValueNumber = Math.round(priceValueNumber * 100)/100;\r\n      return StringProcess.addCommas(String(Number(priceValueNumber)));\r\n    }\r\n  } else {\r\n    return StringProcess.addCommas(String(Number(priceValue)));\r\n  }\r\n};\r\nconst getPriceUnit = (priceValue: string|null, priceUnit: string|null) => {\r\n  if (priceValue && priceUnit && (priceUnit === 'million' || priceUnit === 'triệu')) {\r\n    let priceValueNumber = Number(priceValue);\r\n    if (priceValueNumber < 1000) {\r\n      return millionUnit;\r\n    } else {\r\n      return billionUnit;\r\n    }\r\n  } else {\r\n    return ((priceUnit)?priceUnit:'đồng')\r\n  }\r\n};\r\n\r\nexport default {\r\n  priceProcess\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}
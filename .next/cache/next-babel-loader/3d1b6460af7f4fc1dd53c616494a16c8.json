{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useState, useRef } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Card, CardContent, Divider, IconButton, Input, Paper, Tooltip } from '@material-ui/core';\nimport SendIcon from '@material-ui/icons/Send';\nimport AddPhotoIcon from '@material-ui/icons/AddPhotoAlternate';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  paper: {\n    flexGrow: 1,\n    padding: theme.spacing(0.5, 2)\n  },\n  input: {\n    width: '100%'\n  },\n  divider: {\n    width: 1,\n    height: 24\n  },\n  fileInput: {\n    display: 'none'\n  }\n}));\n\nconst AddPost = props => {\n  const {\n    className\n  } = props,\n        rest = _objectWithoutProperties(props, [\"className\"]);\n\n  const classes = useStyles();\n  const fileInputRef = useRef(null);\n  const {\n    0: value,\n    1: setValue\n  } = useState('');\n\n  const handleChange = event => {\n    event.persist();\n    setValue(event.target.value);\n  };\n\n  const handleAttach = () => {\n    if (fileInputRef.current) {\n      fileInputRef.current.click();\n    }\n  };\n\n  return __jsx(Card, _extends({}, rest, {\n    className: clsx(classes.root, className)\n  }), __jsx(CardContent, {\n    className: classes.content\n  }, __jsx(Paper, {\n    className: classes.paper,\n    elevation: 1\n  }, __jsx(Input, {\n    className: classes.input,\n    disableUnderline: true,\n    onChange: handleChange,\n    placeholder: `What's on your mind,`\n  })), __jsx(Tooltip, {\n    title: \"Send\"\n  }, __jsx(IconButton, {\n    color: value.length > 0 ? 'primary' : 'default'\n  }, __jsx(SendIcon, null))), __jsx(Divider, {\n    className: classes.divider\n  }), __jsx(Tooltip, {\n    title: \"Attach image\"\n  }, __jsx(IconButton, {\n    edge: \"end\",\n    onClick: handleAttach\n  }, __jsx(AddPhotoIcon, null))), __jsx(Tooltip, {\n    title: \"Attach file\"\n  }, __jsx(IconButton, {\n    edge: \"end\",\n    onClick: handleAttach\n  }, __jsx(AttachFileIcon, null))), __jsx(\"input\", {\n    className: classes.fileInput,\n    ref: fileInputRef,\n    type: \"file\"\n  })));\n};\n\nexport default AddPost;","map":null,"metadata":{},"sourceType":"module"}
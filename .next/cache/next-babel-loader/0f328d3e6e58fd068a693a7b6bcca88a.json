{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\toan\\\\Desktop\\\\NDM\\\\chat\\\\components\\\\PageDetail\\\\TextBlock.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport StringProcess from '../../modules/stringProcess';\n\nconst TextBlock = props => {\n  let domTitle = __jsx(React.Fragment, null);\n\n  if (props.type === \"h1\") {\n    domTitle = __jsx(\"h1\", {\n      className: \"project-info-title text-active u-margin-bottom-small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, props.title);\n  }\n\n  if (props.type === \"h2\") {\n    domTitle = __jsx(\"h2\", {\n      className: \"project-info-title text-active u-margin-bottom-small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, props.title);\n  }\n\n  if (props.type === \"h3\") {\n    domTitle = __jsx(\"h2\", {\n      className: \"project-info-title text-active u-margin-bottom-small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, props.title);\n  }\n\n  const freshText = input => {\n    input = StringProcess.stripProperties(input, ['href', 'src', 'rel']);\n    input = StringProcess.stripTags(input, '<a><br/><br><img><p><h1><h2><h3><h4><h5><u><img><video><audio><li><ul><table><tr><td><sup><sub>');\n    input = input.replace(/https:\\/\\/nhadatmoi.net\\/data/g, 'https://static.nhadatmoi.net/data');\n    input = input.replace(/&nbsp;/g, ' ');\n    return input;\n  };\n\n  let content = freshText(String(props.content));\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, domTitle, __jsx(\"div\", {\n    className: \"project-info__description u-margin-bottom-medium\",\n    dangerouslySetInnerHTML: {\n      __html: content\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }));\n};\n\nexport default TextBlock;","map":{"version":3,"sources":["C:/Users/toan/Desktop/NDM/chat/components/PageDetail/TextBlock.tsx"],"names":["React","StringProcess","TextBlock","props","domTitle","type","title","freshText","input","stripProperties","stripTags","replace","content","String","__html"],"mappings":";;AAAA,OAAOA,KAAP,MAAuC,OAAvC;AACA,OAAOC,aAAP,MAA0B,6BAA1B;;AAQA,MAAMC,SAA4C,GAAIC,KAAD,IACrD;AACE,MAAIC,QAAQ,GAAI,2BAAhB;;AACA,MAAID,KAAK,CAACE,IAAN,KAAe,IAAnB,EAAyB;AACvBD,IAAAA,QAAQ,GAAI;AAAI,MAAA,SAAS,EAAC,sDAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsED,KAAK,CAACG,KAA5E,CAAZ;AACD;;AACD,MAAIH,KAAK,CAACE,IAAN,KAAe,IAAnB,EAAyB;AACvBD,IAAAA,QAAQ,GAAI;AAAI,MAAA,SAAS,EAAC,sDAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsED,KAAK,CAACG,KAA5E,CAAZ;AACD;;AACD,MAAIH,KAAK,CAACE,IAAN,KAAe,IAAnB,EAAyB;AACvBD,IAAAA,QAAQ,GAAI;AAAI,MAAA,SAAS,EAAC,sDAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsED,KAAK,CAACG,KAA5E,CAAZ;AACD;;AAED,QAAMC,SAAS,GAAIC,KAAD,IAAmB;AACnCA,IAAAA,KAAK,GAAGP,aAAa,CAACQ,eAAd,CAA8BD,KAA9B,EAAqC,CAAC,MAAD,EAAS,KAAT,EAAgB,KAAhB,CAArC,CAAR;AACAA,IAAAA,KAAK,GAAGP,aAAa,CAACS,SAAd,CAAwBF,KAAxB,EAA+B,iGAA/B,CAAR;AACAA,IAAAA,KAAK,GAAGA,KAAK,CAACG,OAAN,CAAc,gCAAd,EAAgD,mCAAhD,CAAR;AACAH,IAAAA,KAAK,GAAGA,KAAK,CAACG,OAAN,CAAc,SAAd,EAAyB,GAAzB,CAAR;AACA,WAAOH,KAAP;AACD,GAND;;AAQA,MAAII,OAAO,GAAGL,SAAS,CAACM,MAAM,CAACV,KAAK,CAACS,OAAP,CAAP,CAAvB;AACA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKR,QADL,EAEI;AAAK,IAAA,SAAS,EAAC,kDAAf;AAAkE,IAAA,uBAAuB,EAAE;AAACU,MAAAA,MAAM,EAAEF;AAAT,KAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAMD,CA5BD;;AA6BA,eAAeV,SAAf","sourcesContent":["import React, {FunctionComponent} from \"react\";\r\nimport StringProcess from '../../modules/stringProcess';\r\n\r\ninterface TextBlockProps {\r\n  content: string,\r\n  title: string,\r\n  type: string\r\n}\r\n\r\nconst TextBlock: FunctionComponent<TextBlockProps> = (props: TextBlockProps) =>\r\n{\r\n  let domTitle = (<></>);\r\n  if (props.type === \"h1\") {\r\n    domTitle = (<h1 className=\"project-info-title text-active u-margin-bottom-small\">{props.title}</h1>);\r\n  }\r\n  if (props.type === \"h2\") {\r\n    domTitle = (<h2 className=\"project-info-title text-active u-margin-bottom-small\">{props.title}</h2>);\r\n  }\r\n  if (props.type === \"h3\") {\r\n    domTitle = (<h2 className=\"project-info-title text-active u-margin-bottom-small\">{props.title}</h2>);\r\n  }\r\n\r\n  const freshText = (input: string) => {\r\n    input = StringProcess.stripProperties(input, ['href', 'src', 'rel']);\r\n    input = StringProcess.stripTags(input, '<a><br/><br><img><p><h1><h2><h3><h4><h5><u><img><video><audio><li><ul><table><tr><td><sup><sub>');\r\n    input = input.replace(/https:\\/\\/nhadatmoi.net\\/data/g, 'https://static.nhadatmoi.net/data');\r\n    input = input.replace(/&nbsp;/g, ' ');\r\n    return input;\r\n  };\r\n\r\n  let content = freshText(String(props.content));\r\n  return (\r\n      <div>\r\n          {domTitle}\r\n          <div className=\"project-info__description u-margin-bottom-medium\" dangerouslySetInnerHTML={{__html: content}} />\r\n      </div>\r\n  );\r\n};\r\nexport default TextBlock;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manh nhan\\\\Desktop\\\\Nhadatmoi\\\\components\\\\Index\\\\SearchHomepage.tsx\";\nvar __jsx = React.createElement;\nimport * as React from 'react'; //Import Icon\n\nimport Router from 'next/router';\nimport SearchForm from '../../components/Search/SearchForm';\n\nconst SearchHomepage = () => {\n  const dropdownSearch = [{\n    type: 'du-an-bat-dong-san',\n    name: 'Dự án'\n  }, {\n    type: 'nha-dat-ban',\n    name: 'Tin rao'\n  }];\n  const [typeSearch, setType] = React.useState(dropdownSearch[0]);\n\n  const handleChangeType = inputType => {\n    setType(inputType);\n    handleCloseSearchType();\n  };\n\n  const [keywordSearch, setKeywordSearch] = React.useState('');\n\n  const onClickSearch = () => {\n    if (typeSearch.type === 'nha-dat-ban') {\n      let urlProcess = {\n        pathname: '/nha-dat-ban',\n        query: {\n          title: keywordSearch\n        }\n      };\n      let slugAs = '/nha-dat-ban?title=' + keywordSearch;\n      Router.push(urlProcess, slugAs, {\n        shallow: false\n      });\n    } else {\n      let urlProcess = {\n        pathname: '/du-an-bat-dong-san',\n        query: {\n          name: keywordSearch\n        }\n      };\n      let slugAs = '/du-an-bat-dong-san?name=' + keywordSearch;\n      Router.push(urlProcess, slugAs, {\n        shallow: false\n      });\n    }\n  };\n\n  const onChangeWards = event => {\n    setKeywordSearch(event.target.value);\n\n    if (event.key == \"Enter\" || event.keyCode == 13) {\n      onClickSearch();\n    }\n  };\n\n  const [anchorElSearchType, setAnchorElSearchType] = React.useState(null);\n\n  const handleClickSearchType = event => {\n    setAnchorElSearchType(event.currentTarget);\n  };\n\n  const handleCloseSearchType = () => {\n    setAnchorElSearchType(null);\n  };\n\n  const openSearchType = Boolean(anchorElSearchType);\n  const id = openSearchType ? 'simple-popover' : undefined;\n  const imageBackground = ['https://static.nhadatmoi.net/default/background/afternoon-min.jpg', 'https://static.nhadatmoi.net/default/background/ecommerce-min.jpg', 'https://static.nhadatmoi.net/default/background/house-lake-min.jpg', 'https://static.nhadatmoi.net/default/background/image_us-min.jpg', 'https://static.nhadatmoi.net/default/background/image_winter.jpg', 'https://static.nhadatmoi.net/default/background/lake_view-min.jpg', 'https://static.nhadatmoi.net/default/background/lake_view_2-min.jpg', 'https://static.nhadatmoi.net/default/background/new-city-2-min.jpg', 'https://static.nhadatmoi.net/default/background/new-city-min.jpg', 'https://static.nhadatmoi.net/default/background/river-min.jpg'];\n  let tempDate = new Date();\n  let currentDate = Number(tempDate.getDate());\n  let backgroundOffset = Number(currentDate % 10);\n  let backgroundUrl = imageBackground[0];\n\n  if (typeof imageBackground[backgroundOffset] && imageBackground[backgroundOffset]) {\n    backgroundUrl = imageBackground[backgroundOffset];\n  }\n\n  return __jsx(SearchForm, {\n    path: \"\",\n    searchLocation: \"home\",\n    backgroundUrl: backgroundUrl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  });\n};\n\nexport default SearchHomepage; // return (\n//   <Grid \n//     container spacing={0} item xs={12} \n//     className=\"search_homepage__banner\"\n//     style={{backgroundImage: 'url(' + backgroundUrl + ')'}} \n//     direction=\"row\" justify=\"center\" alignItems=\"center\"\n//   >\n//     <Grid item xs className=\"search_homepage__body\">\n//       <div className=\"search_homepage__body_title\">{searchHomeBodyTitle}</div>\n//       <div className=\"search_homepage__body_description\">{searchHomeBodyDescription}</div>\n//       <div className=\"search_homepage__body__box\" >\n//         <SearchForm path='' searchLocation=\"home\" />\n//       </div>\n//       <div className=\"search_homepage__body_example\">{searchHomeBodyExample}</div>\n//     </Grid>\n//   </Grid>\n// );","map":{"version":3,"sources":["C:/Users/manh nhan/Desktop/Nhadatmoi/components/Index/SearchHomepage.tsx"],"names":["React","Router","SearchForm","SearchHomepage","dropdownSearch","type","name","typeSearch","setType","useState","handleChangeType","inputType","handleCloseSearchType","keywordSearch","setKeywordSearch","onClickSearch","urlProcess","pathname","query","title","slugAs","push","shallow","onChangeWards","event","target","value","key","keyCode","anchorElSearchType","setAnchorElSearchType","handleClickSearchType","currentTarget","openSearchType","Boolean","id","undefined","imageBackground","tempDate","Date","currentDate","Number","getDate","backgroundOffset","backgroundUrl"],"mappings":"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","sourcesContent":["import * as React from 'react'\r\n\r\n//Import Icon\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Button from '@material-ui/core/Button';\r\nimport Router from 'next/router';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ArrowDropUp from '@material-ui/icons/ArrowDropUp';\r\nimport ArrowDropDown from '@material-ui/icons/ArrowDropDown';\r\nimport SearchForm from '../../components/Search/SearchForm'\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport {ListItem, ListItemIcon, ListItemText, Popover, Typography} from \"@material-ui/core\";\r\nimport EcoIcon from \"@material-ui/icons/Eco\";\r\nimport ViewList from \"@material-ui/icons/ViewList\";\r\n\r\nimport Moment from 'react-moment';\r\n\r\nconst SearchHomepage: React.FunctionComponent = () => {\r\n  const dropdownSearch = [\r\n    {type: 'du-an-bat-dong-san', name: 'Dự án'},\r\n    {type: 'nha-dat-ban', name: 'Tin rao'},\r\n  ];\r\n\r\n  const [typeSearch, setType] = React.useState(dropdownSearch[0]);\r\n  const handleChangeType = (inputType: {type: string, name: string}) => {\r\n    setType(inputType);\r\n    handleCloseSearchType();\r\n  };\r\n\r\n  const [keywordSearch, setKeywordSearch] = React.useState('');\r\n\r\n  const onClickSearch = () => {\r\n    if (typeSearch.type === 'nha-dat-ban') {\r\n      let urlProcess = { pathname: '/nha-dat-ban', query: { title: keywordSearch } }\r\n      let slugAs = '/nha-dat-ban?title=' + keywordSearch;\r\n      Router.push(urlProcess, slugAs, { shallow: false });\r\n    } else {\r\n      let urlProcess = { pathname: '/du-an-bat-dong-san', query: { name: keywordSearch } }\r\n      let slugAs = '/du-an-bat-dong-san?name=' + keywordSearch;\r\n      Router.push(urlProcess, slugAs, { shallow: false });\r\n    }\r\n  };\r\n\r\n  const onChangeWards = (event: any) => {\r\n    setKeywordSearch(event.target.value);\r\n    if (event.key == \"Enter\" || event.keyCode == 13) {\r\n      onClickSearch();\r\n    }\r\n  };\r\n\r\n  const [anchorElSearchType, setAnchorElSearchType] = React.useState<HTMLButtonElement | null>(null);\r\n  const handleClickSearchType = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setAnchorElSearchType(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseSearchType = () => {\r\n    setAnchorElSearchType(null);\r\n  };\r\n\r\n  const openSearchType = Boolean(anchorElSearchType);\r\n  const id = openSearchType ? 'simple-popover' : undefined;\r\n\r\n  const imageBackground = [\r\n    'https://static.nhadatmoi.net/default/background/afternoon-min.jpg',\r\n    'https://static.nhadatmoi.net/default/background/ecommerce-min.jpg',\r\n    'https://static.nhadatmoi.net/default/background/house-lake-min.jpg',\r\n    'https://static.nhadatmoi.net/default/background/image_us-min.jpg',\r\n    'https://static.nhadatmoi.net/default/background/image_winter.jpg',\r\n    'https://static.nhadatmoi.net/default/background/lake_view-min.jpg',\r\n    'https://static.nhadatmoi.net/default/background/lake_view_2-min.jpg',\r\n    'https://static.nhadatmoi.net/default/background/new-city-2-min.jpg',\r\n    'https://static.nhadatmoi.net/default/background/new-city-min.jpg',\r\n    'https://static.nhadatmoi.net/default/background/river-min.jpg'\r\n  ];\r\n  let tempDate = new Date();\r\n  let currentDate = Number(tempDate.getDate());\r\n  let backgroundOffset = Number(currentDate%10);\r\n  let backgroundUrl = imageBackground[0];\r\n  if (typeof imageBackground[backgroundOffset] && imageBackground[backgroundOffset]) {\r\n    backgroundUrl = imageBackground[backgroundOffset]\r\n  }\r\n\r\n  return (\r\n    <SearchForm path='' searchLocation=\"home\" backgroundUrl={backgroundUrl} />\r\n  )\r\n};\r\n\r\nexport default SearchHomepage;\r\n\r\n// return (\r\n//   <Grid \r\n//     container spacing={0} item xs={12} \r\n//     className=\"search_homepage__banner\"\r\n//     style={{backgroundImage: 'url(' + backgroundUrl + ')'}} \r\n//     direction=\"row\" justify=\"center\" alignItems=\"center\"\r\n//   >\r\n//     <Grid item xs className=\"search_homepage__body\">\r\n//       <div className=\"search_homepage__body_title\">{searchHomeBodyTitle}</div>\r\n//       <div className=\"search_homepage__body_description\">{searchHomeBodyDescription}</div>\r\n//       <div className=\"search_homepage__body__box\" >\r\n//         <SearchForm path='' searchLocation=\"home\" />\r\n//       </div>\r\n//       <div className=\"search_homepage__body_example\">{searchHomeBodyExample}</div>\r\n//     </Grid>\r\n//   </Grid>\r\n// );"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _Array$isArray from \"@babel/runtime-corejs2/core-js/array/is-array\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react'; //Import Material Libs\n\nimport Grid from \"@material-ui/core/Grid\";\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete, { createFilterOptions } from '@material-ui/lab/Autocomplete';\nimport Typography from '@material-ui/core/Typography'; //Import Dynamic\n\nimport dynamic from 'next/dynamic'; //Import without SSR Slider\n\nvar Slider = dynamic(function () {\n  return import('@material-ui/core/Slider');\n}, {\n  ssr: false,\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('@material-ui/core/Slider')];\n    },\n    modules: ['@material-ui/core/Slider']\n  }\n}); //Import Apollo Client\n\nimport { apolloClient } from \"../../utils\"; //Import Query GraphQL\n\nimport { GET_CITY_LIST } from \"../../graphql/city/queries\";\nimport { GET_DISTRICT_LIST } from \"../../graphql/district/queries\";\nimport { GET_WARD_LIST } from \"../../graphql/ward/queries\";\nimport { GET_DIRECTIONS } from \"../../graphql/directions/queries\";\nimport Validator from \"../../modules/validator\";\n\nfunction valueText(value) {\n  return \"\".concat(value);\n}\n\nvar bedRoomNumber = [{\n  node: {\n    id: 1,\n    value: {\n      max: 2,\n      min: 0\n    },\n    name: '0 - 2 phòng'\n  }\n}, {\n  node: {\n    id: 2,\n    value: {\n      max: 5,\n      min: 3\n    },\n    name: '3 - 5 phòng'\n  }\n}, {\n  node: {\n    id: 3,\n    value: {\n      max: 100,\n      min: 6\n    },\n    name: 'trên 5 phòng'\n  }\n}];\n\nvar LayeredNavigation = function LayeredNavigation(props) {\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      openDirection = _React$useState2[0],\n      setOpenDirection = _React$useState2[1];\n\n  var handleClickDirection = function handleClickDirection() {\n    setOpenDirection(!openDirection);\n  };\n\n  var _React$useState3 = React.useState(true),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      openBedRoom = _React$useState4[0],\n      setOpenBedRoom = _React$useState4[1];\n\n  var handleClickBedRoom = function handleClickBedRoom() {\n    setOpenBedRoom(!openBedRoom);\n  };\n\n  var priceRangeValue = [0, 50]; //set Price\n\n  if (!Validator.isBlank(props.dataLayeredNavigation.price_range.max) || !Validator.isBlank(props.dataLayeredNavigation.price_range.min)) {\n    var minValue = Number(props.dataLayeredNavigation.price_range.min / 1000000000);\n    var maxValue = Number(props.dataLayeredNavigation.price_range.max / 1000000000);\n    priceRangeValue = [minValue, maxValue];\n  }\n\n  var areaRangeValue = [0, 500]; //set AreaRangeValue\n\n  if (!Validator.isBlank(props.dataLayeredNavigation.area_range.max) || !Validator.isBlank(props.dataLayeredNavigation.area_range.min)) {\n    areaRangeValue = [props.dataLayeredNavigation.area_range.min, props.dataLayeredNavigation.area_range.max];\n  }\n\n  ;\n  var idBedRoomNumber = -1;\n\n  if (Number(props.dataLayeredNavigation.bed_room_number.max) < 3 && Number(props.dataLayeredNavigation.bed_room_number.max) > 0) {\n    idBedRoomNumber = 1;\n  }\n\n  if (Number(props.dataLayeredNavigation.bed_room_number.max) < 6 && Number(props.dataLayeredNavigation.bed_room_number.max) > 2) {\n    idBedRoomNumber = 2;\n  }\n\n  if (5 < Number(props.dataLayeredNavigation.bed_room_number.max)) {\n    idBedRoomNumber = 3;\n  }\n\n  var _React$useState5 = React.useState(priceRangeValue),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      priceValue = _React$useState6[0],\n      setPriceValue = _React$useState6[1];\n\n  var _React$useState7 = React.useState(areaRangeValue),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      areaValue = _React$useState8[0],\n      setAreaValue = _React$useState8[1];\n\n  var _React$useState9 = React.useState(),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      citesList = _React$useState10[0],\n      setCitesList = _React$useState10[1];\n\n  var _React$useState11 = React.useState(),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      districtList = _React$useState12[0],\n      setDistrictList = _React$useState12[1];\n\n  var _React$useState13 = React.useState(),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      wardList = _React$useState14[0],\n      setWardList = _React$useState14[1];\n\n  var _React$useState15 = React.useState(),\n      _React$useState16 = _slicedToArray(_React$useState15, 2),\n      directionList = _React$useState16[0],\n      setDirectionList = _React$useState16[1];\n\n  var _React$useState17 = React.useState(idBedRoomNumber),\n      _React$useState18 = _slicedToArray(_React$useState17, 2),\n      activeBedRoom = _React$useState18[0],\n      setActiveBedRoom = _React$useState18[1];\n\n  var _React$useState19 = React.useState(String(props.dataLayeredNavigation.home_direction)),\n      _React$useState20 = _slicedToArray(_React$useState19, 2),\n      activeDirection = _React$useState20[0],\n      setActiveDirection = _React$useState20[1];\n\n  var closeIcon = __jsx(\"svg\", {\n    viewBox: \"0 0 352 512\"\n  }, __jsx(\"path\", {\n    d: \"M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z\"\n  }));\n\n  useEffect(function () {\n    apolloClient.query({\n      query: GET_CITY_LIST,\n      variables: {\n        \"page\": 1,\n        \"limit\": 1000,\n        \"filter\": \"'{}'\"\n      }\n    }).then(function (response) {\n      if (typeof response.data.citys.edges !== \"undefined\") {\n        setCitesList(response.data.citys.edges);\n\n        for (var index in response.data.citys.edges) {\n          if (response.data.citys.edges[index].node.id === props.dataLayeredNavigation.city) {\n            setDefaultCity(response.data.citys.edges[index]);\n          }\n        }\n      }\n    });\n\n    if (!Validator.isBlank(props.dataLayeredNavigation.city)) {\n      updateDistrictLayeredNavigation(props.dataLayeredNavigation.city);\n    }\n\n    if (!Validator.isBlank(props.dataLayeredNavigation.district)) {\n      updateWardLayeredNavigation(props.dataLayeredNavigation.district);\n    }\n\n    apolloClient.query({\n      query: GET_DIRECTIONS,\n      variables: {\n        \"page\": 1,\n        \"limit\": 1000,\n        \"filter\": \"'{}'\"\n      }\n    }).then(function (response) {\n      if (typeof response.data.directions.edges !== \"undefined\") {\n        setDirectionList(response.data.directions.edges);\n      }\n    });\n  }, []);\n  var filterOptions = createFilterOptions({\n    matchFrom: 'any',\n    stringify: function stringify(option) {\n      return option.node.name;\n    }\n  });\n  var cityDataSelect = {\n    options: citesList,\n    getOptionLabel: function getOptionLabel(option) {\n      return option.node.name;\n    },\n    filterOptions: filterOptions\n  };\n  var districtDataSelect = {\n    options: districtList,\n    getOptionLabel: function getOptionLabel(option) {\n      return option.node.name;\n    },\n    filterOptions: filterOptions\n  };\n  var wardDataSelect = {\n    options: wardList,\n    getOptionLabel: function getOptionLabel(option) {\n      return option.node.name;\n    },\n    filterOptions: filterOptions\n  };\n\n  var _React$useState21 = React.useState(props.dataLayeredNavigation),\n      _React$useState22 = _slicedToArray(_React$useState21, 2),\n      dataLayeredNavigation = _React$useState22[0],\n      setDataLayeredNavigation = _React$useState22[1];\n\n  var onChangeCites = function onChangeCites(value) {\n    if (value) {\n      dataLayeredNavigation.city = value.node.id;\n      dataLayeredNavigation.slug = value.node.slug;\n      updateDistrictLayeredNavigation(value.node.id);\n    } else {\n      dataLayeredNavigation.city = '';\n      dataLayeredNavigation.slug = '';\n    }\n\n    dataLayeredNavigation.district = '';\n    dataLayeredNavigation.ward = '';\n    dataLayeredNavigation.page = 1;\n    setDistrictList([]);\n    setWardList([]);\n    setDataLayeredNavigation(dataLayeredNavigation); //Set Default Value\n\n    setDefaultDistrict(defaultValueLocation);\n    setDefaultWard(defaultValueLocation);\n    props.updateLayeredNavigation(dataLayeredNavigation);\n  };\n\n  var handlePriceChange = function handlePriceChange(event, newValue) {\n    setPriceValue(newValue);\n\n    if (_Array$isArray(newValue) && newValue.length != null && newValue.length > 0) {\n      var _minValue = 0;\n      var _maxValue = 0;\n      newValue.map(function (value, index) {\n        if (index === 0) {\n          _minValue = value;\n        }\n\n        if (index === 1) {\n          _maxValue = value;\n        }\n\n        var dataToFilter = {\n          min: _minValue * 1000000000,\n          max: _maxValue * 1000000000\n        };\n        dataLayeredNavigation.price_range = dataToFilter;\n        setDataLayeredNavigation(dataLayeredNavigation);\n        delayUpdateLayeredNavigation(dataLayeredNavigation);\n      });\n    }\n  };\n\n  var handleAreaChange = function handleAreaChange(event, newValue) {\n    setAreaValue(newValue);\n\n    if (_Array$isArray(newValue) && newValue.length != null && newValue.length > 0) {\n      var _minValue2 = 0;\n      var _maxValue2 = 0;\n      newValue.map(function (value, index) {\n        if (index === 0) {\n          _minValue2 = value;\n        }\n\n        if (index === 1) {\n          _maxValue2 = value;\n        }\n\n        var dataToFilter = {\n          min: _minValue2,\n          max: _maxValue2\n        };\n        dataLayeredNavigation.area_range = dataToFilter;\n        setDataLayeredNavigation(dataLayeredNavigation);\n        delayUpdateLayeredNavigation(dataLayeredNavigation);\n      });\n    }\n  };\n\n  var timerId = setTimeout(function () {}, 600); // @ts-ignore\n\n  var delayUpdateLayeredNavigation = function delayUpdateLayeredNavigation(dataLayeredNavigation) {\n    clearTimeout(timerId);\n    timerId = setTimeout(function () {\n      props.updateLayeredNavigation(dataLayeredNavigation);\n    }, 600);\n  };\n\n  var onChangeDistricts = function onChangeDistricts(value) {\n    if (value) {\n      dataLayeredNavigation.district = value.node.id;\n      dataLayeredNavigation.slug = value.node.slug;\n      updateWardLayeredNavigation(value.node.id);\n    } else {\n      var citySlug = defaultCity.node.slug;\n      dataLayeredNavigation.district = '';\n      dataLayeredNavigation.slug = citySlug;\n    }\n\n    dataLayeredNavigation.page = 1;\n    dataLayeredNavigation.ward = '';\n    setWardList([]);\n    setDefaultWard(defaultValueLocation);\n    props.updateLayeredNavigation(dataLayeredNavigation);\n  };\n\n  var onChangeWards = function onChangeWards(value) {\n    if (value) {\n      dataLayeredNavigation.ward = value.node.id;\n      dataLayeredNavigation.slug = value.node.slug;\n    } else {\n      var districtSlug = defaultDistrict.node.slug;\n      dataLayeredNavigation.district = '';\n      dataLayeredNavigation.ward = '';\n      dataLayeredNavigation.slug = districtSlug;\n    }\n\n    dataLayeredNavigation.page = 1;\n    setDataLayeredNavigation(dataLayeredNavigation);\n    props.updateLayeredNavigation(dataLayeredNavigation);\n  };\n\n  var onClickDirection = function onClickDirection(value) {\n    if (value !== activeDirection) {\n      dataLayeredNavigation.home_direction = value;\n      setActiveDirection(value);\n    } else {\n      dataLayeredNavigation.home_direction = '';\n      setActiveDirection('');\n    }\n\n    setDataLayeredNavigation(dataLayeredNavigation);\n    props.updateLayeredNavigation(dataLayeredNavigation);\n  };\n\n  var onClickBedRoom = function onClickBedRoom(value, id) {\n    if (id !== activeBedRoom) {\n      dataLayeredNavigation.bed_room_number = value;\n      setActiveBedRoom(id);\n    } else {\n      dataLayeredNavigation.bed_room_number = {\n        max: 0,\n        min: 0\n      };\n      setActiveBedRoom(-1);\n    }\n\n    setDataLayeredNavigation(dataLayeredNavigation);\n    props.updateLayeredNavigation(dataLayeredNavigation);\n  };\n\n  var updateDistrictLayeredNavigation = function updateDistrictLayeredNavigation(cityId) {\n    apolloClient.query({\n      query: GET_DISTRICT_LIST,\n      variables: {\n        \"page\": 1,\n        \"limit\": 100,\n        \"filter\": \"{'city_id': '\" + cityId + \"'}\"\n      }\n    }).then(function (response) {\n      if (typeof response.data.districts.edges !== \"undefined\") {\n        setDistrictList(response.data.districts.edges);\n\n        for (var index in response.data.districts.edges) {\n          if (response.data.districts.edges[index].node.id === props.dataLayeredNavigation.district) {\n            setDefaultDistrict(response.data.districts.edges[index]);\n          }\n        }\n      }\n    });\n  };\n\n  var updateWardLayeredNavigation = function updateWardLayeredNavigation(districtId) {\n    apolloClient.query({\n      query: GET_WARD_LIST,\n      variables: {\n        \"page\": 1,\n        \"limit\": 100,\n        \"filter\": \"{'district_id': '\" + districtId + \"'}\"\n      }\n    }).then(function (response) {\n      if (typeof response.data.wards.edges !== \"undefined\") {\n        setWardList(response.data.wards.edges);\n\n        for (var index in response.data.wards.edges) {\n          if (response.data.wards.edges[index].node.id === props.dataLayeredNavigation.ward) {\n            setDefaultWard(response.data.wards.edges[index]);\n          }\n        }\n      }\n    });\n  };\n\n  var handleFieldChange = function handleFieldChange(event, title, value) {\n    dataLayeredNavigation.name = value;\n    dataLayeredNavigation.title = value;\n    setDataLayeredNavigation(dataLayeredNavigation);\n    delayUpdateLayeredNavigation(dataLayeredNavigation);\n  };\n\n  var defaultKeywordValue = '';\n\n  if (!Validator.isBlank(props.dataLayeredNavigation.name)) {\n    defaultKeywordValue = String(props.dataLayeredNavigation.name);\n  }\n\n  if (!Validator.isBlank(props.dataLayeredNavigation.title)) {\n    defaultKeywordValue = String(props.dataLayeredNavigation.title);\n  }\n\n  var defaultValueLocation = {\n    node: {\n      id: '',\n      name: '',\n      slug: ''\n    }\n  };\n\n  var _React$useState23 = React.useState(defaultValueLocation),\n      _React$useState24 = _slicedToArray(_React$useState23, 2),\n      defaultCity = _React$useState24[0],\n      setDefaultCity = _React$useState24[1];\n\n  var _React$useState25 = React.useState(defaultValueLocation),\n      _React$useState26 = _slicedToArray(_React$useState25, 2),\n      defaultDistrict = _React$useState26[0],\n      setDefaultDistrict = _React$useState26[1];\n\n  var _React$useState27 = React.useState(defaultValueLocation),\n      _React$useState28 = _slicedToArray(_React$useState27, 2),\n      defaultWard = _React$useState28[0],\n      setDefaultWard = _React$useState28[1]; // @ts-ignore\n\n\n  return __jsx(Grid, {\n    className: props.className\n  }, __jsx(Grid, {\n    container: true,\n    className: \"search_layered__title\"\n  }, \"L\\u1ECDc k\\u1EBFt qu\\u1EA3 t\\xECm ki\\u1EBFm\"), __jsx(TextField, {\n    id: \"standard-basic\",\n    label: \"T\\u1EEB kh\\xF3a\",\n    className: \"search_layered__keyword\",\n    defaultValue: defaultKeywordValue,\n    onChange: function onChange(event) {\n      return handleFieldChange(event, 'title', event.target.value);\n    }\n  }), __jsx(FormControl, {\n    className: \"search_layered__select\"\n  }, // @ts-ignore\n  !Validator.isBlank(citesList) && !Validator.isBlank(citesList.length) && citesList.length > 0 && !Validator.isBlank(defaultCity.node.id) && __jsx(Autocomplete, _extends({}, cityDataSelect, {\n    onChange: function onChange(event, value) {\n      return onChangeCites(value);\n    },\n    clearOnEscape: true,\n    defaultValue: defaultCity,\n    renderInput: function renderInput(params) {\n      return __jsx(TextField, _extends({}, params, {\n        label: \"T\\u1EC9nh/Th\\xE0nh ph\\u1ED1\",\n        fullWidth: true\n      }));\n    }\n  })), // @ts-ignore\n  !Validator.isBlank(citesList) && !Validator.isBlank(citesList.length) && citesList.length > 0 && Validator.isBlank(defaultCity.node.id) && __jsx(Autocomplete, _extends({}, cityDataSelect, {\n    onChange: function onChange(event, value) {\n      return onChangeCites(value);\n    },\n    clearOnEscape: true,\n    renderInput: function renderInput(params) {\n      return __jsx(TextField, _extends({}, params, {\n        label: \"T\\u1EC9nh/Th\\xE0nh ph\\u1ED1\",\n        fullWidth: true\n      }));\n    }\n  }))), // @ts-ignore\n  districtList != null && districtList.length != null && districtList.length > 0 && !Validator.isBlank(defaultDistrict.node.id) && __jsx(FormControl, {\n    className: \"search_layered__select\"\n  }, __jsx(Autocomplete, _extends({}, districtDataSelect, {\n    clearOnEscape: true,\n    defaultValue: defaultDistrict,\n    onChange: function onChange(event, value) {\n      return onChangeDistricts(value);\n    },\n    renderInput: function renderInput(params) {\n      return __jsx(TextField, _extends({}, params, {\n        label: \"Qu\\u1EADn/Huy\\u1EC7n\",\n        fullWidth: true\n      }));\n    }\n  }))), // @ts-ignore\n  districtList != null && districtList.length != null && districtList.length > 0 && Validator.isBlank(defaultDistrict.node.id) && __jsx(FormControl, {\n    className: \"search_layered__select\"\n  }, __jsx(Autocomplete, _extends({}, districtDataSelect, {\n    clearOnEscape: true,\n    onChange: function onChange(event, value) {\n      return onChangeDistricts(value);\n    },\n    renderInput: function renderInput(params) {\n      return __jsx(TextField, _extends({}, params, {\n        label: \"Qu\\u1EADn/Huy\\u1EC7n\",\n        fullWidth: true\n      }));\n    }\n  }))), wardList != null && wardList.length != null && wardList.length > 0 && !Validator.isBlank(defaultWard.node.id) && __jsx(FormControl, {\n    className: \"search_layered__select margin_bottom\"\n  }, __jsx(Autocomplete, _extends({}, wardDataSelect, {\n    clearOnEscape: true,\n    defaultValue: defaultWard,\n    onChange: function onChange(event, value) {\n      return onChangeWards(value);\n    },\n    renderInput: function renderInput(params) {\n      return __jsx(TextField, _extends({}, params, {\n        label: \"Ph\\u01B0\\u1EDDng/X\\xE3\",\n        fullWidth: true\n      }));\n    }\n  }))), wardList != null && wardList.length != null && wardList.length > 0 && Validator.isBlank(defaultWard.node.id) && __jsx(FormControl, {\n    className: \"search_layered__select margin_bottom\"\n  }, __jsx(Autocomplete, _extends({}, wardDataSelect, {\n    clearOnEscape: true,\n    defaultValue: defaultWard,\n    onChange: function onChange(event, value) {\n      return onChangeWards(value);\n    },\n    renderInput: function renderInput(params) {\n      return __jsx(TextField, _extends({}, params, {\n        label: \"Ph\\u01B0\\u1EDDng/X\\xE3\",\n        fullWidth: true\n      }));\n    }\n  }))), __jsx(Typography, {\n    id: \"range-slider\",\n    gutterBottom: true,\n    className: \"search_layered__slider__text\"\n  }, \"Di\\u1EC7n t\\xEDch (m\", __jsx(\"sup\", null, \"2\"), \")\"), __jsx(Slider, {\n    className: \"search_layered__slider__content\",\n    value: areaValue,\n    onChange: handleAreaChange,\n    valueLabelDisplay: \"auto\",\n    \"aria-labelledby\": \"range-slider\",\n    max: 500,\n    getAriaValueText: valueText\n  }), __jsx(Typography, {\n    id: \"range-slider\",\n    gutterBottom: true,\n    className: \"search_layered__slider__text\"\n  }, \"Kho\\u1EA3ng gi\\xE1 (t\\u1EC9 \\u0111\\u1ED3ng)\"), __jsx(Slider, {\n    className: \"search_layered__slider__content\",\n    value: priceValue,\n    onChange: handlePriceChange,\n    valueLabelDisplay: \"auto\",\n    \"aria-labelledby\": \"range-slider\",\n    getAriaValueText: valueText,\n    max: 50,\n    step: 0.5\n  }), __jsx(List, {\n    component: \"nav\",\n    \"aria-labelledby\": \"nested-list-subheader\",\n    className: \"search_layered__dropdown\"\n  }, directionList != null && directionList.length != null && directionList.length > 0 && __jsx(\"div\", null, __jsx(ListItem, {\n    button: true,\n    onClick: handleClickDirection\n  }, __jsx(ListItemText, {\n    primary: \"H\\u01B0\\u1EDBng nh\\xE0\",\n    className: \"search_layered__expand\"\n  }), openDirection ? __jsx(ExpandLess, null) : __jsx(ExpandMore, null)), __jsx(Collapse, {\n    \"in\": openDirection,\n    timeout: \"auto\",\n    unmountOnExit: true,\n    className: \"search_layered__expand__list\"\n  }, directionList.map(function (direction, index) {\n    return __jsx(ListItemText, {\n      key: \"layered_second_\" + index,\n      primary: \"Hướng \" + direction.node.name,\n      secondary: closeIcon,\n      className: activeDirection === direction.node.id ? 'search_layered__expand__list__item active' : 'search_layered__expand__list__item',\n      onClick: function onClick(event) {\n        return onClickDirection(direction.node.id);\n      }\n    });\n  }))), __jsx(ListItem, {\n    button: true,\n    onClick: handleClickBedRoom\n  }, __jsx(ListItemText, {\n    primary: \"S\\u1ED1 ph\\xF2ng\",\n    className: \"search_layered__expand\"\n  }), openBedRoom ? __jsx(ExpandLess, null) : __jsx(ExpandMore, null)), __jsx(Collapse, {\n    \"in\": openBedRoom,\n    timeout: \"auto\",\n    unmountOnExit: true,\n    className: \"search_layered__expand__list\"\n  }, bedRoomNumber.map(function (bedRoom, index) {\n    return __jsx(ListItemText, {\n      key: \"layered_navigation_\" + index,\n      primary: bedRoom.node.name,\n      secondary: closeIcon,\n      className: activeBedRoom === bedRoom.node.id ? 'search_layered__expand__list__item active' : 'search_layered__expand__list__item',\n      onClick: function onClick(event) {\n        return onClickBedRoom(bedRoom.node.value, bedRoom.node.id);\n      }\n    });\n  }))));\n};\n\nexport default LayeredNavigation;","map":null,"metadata":{},"sourceType":"module"}
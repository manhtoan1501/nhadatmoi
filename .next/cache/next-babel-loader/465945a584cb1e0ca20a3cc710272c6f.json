{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Array$isArray from \"@babel/runtime-corejs2/core-js/array/is-array\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\manh nhan\\\\Desktop\\\\new_ndm\\\\components\\\\Channel\\\\Tabs\\\\Rating.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Typography, CardHeader, Avatar, Grid } from '@material-ui/core';\nimport Rating from '@material-ui/lab/Rating';\nimport { ratings, ratingStyles } from \"../Constant\";\nimport { apolloClient } from \"../../../utils\";\nimport { GET_RATINGS_CHANNEL_BY_ID, GET_AVERAGE_RATING } from \"../../../graphql/channel/queries\";\nimport GradeIcon from '@material-ui/icons/Grade';\nimport LoadingCircle from \"../LoadingCircle\";\nimport _ from \"lodash\";\nimport moment from \"moment\";\nimport 'moment/locale/es';\nmoment.locale('vi');\n;\n;\n;\nvar avatar = \"https://1.bp.blogspot.com/-gx54Ig64I_k/WnktM_nzPXI/AAAAAAAAHgw/E7pSRwrXu_c3tSSg-vbO2iQgg4GbVxGKwCLcBGAs/s1600/anh-girl-xinh-9x-kute%2B%252811%2529.jpg\";\n\nvar Ratings = function Ratings(props) {\n  var classes = ratingStyles();\n\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      averageRating = _React$useState2[0],\n      setAverageRating = _React$useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      ratingsChannel = _React$useState4[0],\n      setRatingsChannel = _React$useState4[1];\n\n  var _React$useState5 = React.useState(true),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      loading = _React$useState6[0],\n      setLoading = _React$useState6[1];\n\n  React.useEffect(function () {\n    getAdChannel();\n    getAverageRating();\n  });\n\n  var getAdChannel = function getAdChannel() {\n    var id, ratingsChannel;\n    return _regeneratorRuntime.async(function getAdChannel$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            id = props.channelId;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(apolloClient.query({\n              query: GET_RATINGS_CHANNEL_BY_ID,\n              variables: {\n                \"id\": id,\n                \"limit\": 18,\n                \"page\": 1\n              }\n            }).then(function (response) {\n              return response.data.channelAdSellLeaseRatings.edges;\n            }));\n\n          case 3:\n            ratingsChannel = _context.sent;\n\n            if (_Array$isArray(ratingsChannel)) {\n              setRatingsChannel(ratingsChannel);\n              setLoading(false);\n            }\n\n            ;\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, _Promise);\n  };\n\n  var getAverageRating = function getAverageRating() {\n    var res;\n    return _regeneratorRuntime.async(function getAverageRating$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(apolloClient.query({\n              query: GET_AVERAGE_RATING,\n              variables: {\n                \"id\": props.channelId\n              }\n            }).then(function (response) {\n              var averageRating = _.get(response, \"data.channelAverageRatings\", {});\n\n              setAverageRating(averageRating);\n            }));\n\n          case 2:\n            res = _context2.sent;\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, _Promise);\n  };\n\n  var renderRatingChanel = function renderRatingChanel() {\n    return ratingsChannel.map(function (item, index) {\n      return __jsx(\"div\", {\n        key: index,\n        style: {\n          marginLeft: \"-160px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, __jsx(CardHeader, {\n        avatar: __jsx(Avatar, {\n          alt: \"Reviewer\",\n          src: item.node.user_id.avatar || avatar,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, item.node.user_id.avatar),\n        disableTypography: true,\n        subheader: __jsx(\"div\", {\n          className: classes.subheader,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, __jsx(Typography, {\n          variant: \"body2\",\n          className: classes.rating,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, \"\\u0110\\xE1nh gi\\xE1 b\\u1EDFi:\"), __jsx(Typography, {\n          className: classes.userRating,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, item.node.user_id.first_name, \" \", item.node.user_id.last_name), __jsx(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }), __jsx(Rating, {\n          disabled: true,\n          name: \"simple-controlled\",\n          value: item.node.rate,\n          style: {\n            color: \"#045EA8\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }), __jsx(Typography, {\n          variant: \"body2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, moment(Number(item.node.created_at)).fromNow())),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }));\n    });\n  };\n\n  var count_rating = _.get(averageRating, \"count_rating\", 1);\n\n  var fiveRating = _parseInt(\"\".concat(_.get(averageRating, \"five_star\", 0) / count_rating * 100));\n\n  var fourRating = _parseInt(\"\".concat(_.get(averageRating, \"four_star\", 0) / count_rating * 100));\n\n  var threeRating = _parseInt(\"\".concat(_.get(averageRating, \"three_star\", 0) / count_rating * 100));\n\n  var twoRating = _parseInt(\"\".concat(_.get(averageRating, \"two_star\", 0) / count_rating * 100));\n\n  var oneRating = _parseInt(\"\".concat(_.get(averageRating, \"one_star\", 0) / count_rating * 100));\n\n  var renderAverageRating = function renderAverageRating() {\n    var total = ratingsChannel.length;\n    var arrTotalRating = [{\n      width: \"\".concat(fiveRating, \"%\")\n    }, {\n      width: \"\".concat(fourRating, \"%\")\n    }, {\n      width: \"\".concat(threeRating, \"%\")\n    }, {\n      width: \"\".concat(twoRating, \"%\")\n    }, {\n      width: \"\".concat(oneRating, \"%\")\n    }];\n    return __jsx(\"div\", {\n      style: {\n        marginTop: \"-24px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: classes.averageRatingTotal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      className: classes.averageRatingLevel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"3.0\"), __jsx(Grid, {\n      container: true,\n      alignItems: \"center\",\n      justify: \"center\",\n      spacing: 0,\n      className: classes.averageViewRating,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, __jsx(Grid, {\n      item: true,\n      xs: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, __jsx(Rating, {\n      disabled: true,\n      name: \"simple-controlled\",\n      value: 3,\n      style: {\n        color: \"#045EA8\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    })), __jsx(Grid, {\n      item: true,\n      xs: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, __jsx(Typography, {\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, total)))), __jsx(\"div\", {\n      className: classes.averageRatingDescribe,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, arrTotalRating.map(function (item, index) {\n      return __jsx(\"div\", {\n        className: classes.levelRatingMargin,\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: classes.levelRating,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, 5 - index, __jsx(GradeIcon, {\n        className: classes.levelRatingIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      })), __jsx(\"div\", {\n        className: classes.averageRatingDescribeFive,\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: classes.averageRatingDescribeFiveLevel,\n        style: {\n          width: item.width\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      })));\n    })), __jsx(\"div\", {\n      className: classes.clearFloat,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }));\n  };\n\n  return __jsx(\"div\", {\n    className: classes.rootRating,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, __jsx(Typography, {\n    variant: \"h5\",\n    className: classes.titleRating,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, \"\\u0110\\xE1nh gi\\xE1 ch\\u1EA5t l\\u01B0\\u1EE3ng\"), renderAverageRating(), loading ? __jsx(LoadingCircle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }) : \"\", __jsx(\"div\", {\n    className: classes.ratingList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, __jsx(Typography, {\n    variant: \"h5\",\n    className: classes.titleRating,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, \"\\u0110\\xE1nh gi\\xE1 g\\u1EA7n nh\\u1EA5t\"), _Array$isArray(ratings) ? renderRatingChanel() : __jsx(Typography, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, \"Kh\\xF4ng c\\xF3 \\u0111\\xE1nh gi\\xE1 n\\xE0o\")));\n};\n\nexport default Ratings;","map":{"version":3,"sources":["C:/Users/manh nhan/Desktop/new_ndm/components/Channel/Tabs/Rating.tsx"],"names":["React","Typography","CardHeader","Avatar","Grid","Rating","ratings","ratingStyles","apolloClient","GET_RATINGS_CHANNEL_BY_ID","GET_AVERAGE_RATING","GradeIcon","LoadingCircle","_","moment","locale","avatar","Ratings","props","classes","useState","averageRating","setAverageRating","ratingsChannel","setRatingsChannel","loading","setLoading","useEffect","getAdChannel","getAverageRating","id","channelId","query","variables","then","response","data","channelAdSellLeaseRatings","edges","get","res","renderRatingChanel","map","item","index","marginLeft","node","user_id","subheader","rating","userRating","first_name","last_name","rate","color","Number","created_at","fromNow","count_rating","fiveRating","fourRating","threeRating","twoRating","oneRating","renderAverageRating","total","length","arrTotalRating","width","marginTop","averageRatingTotal","averageRatingLevel","averageViewRating","averageRatingDescribe","levelRatingMargin","levelRating","levelRatingIcon","averageRatingDescribeFive","averageRatingDescribeFiveLevel","clearFloat","rootRating","titleRating","ratingList"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Typography, CardHeader, Avatar, Grid } from '@material-ui/core';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport { ratings, ratingStyles } from \"../Constant\";\r\nimport { apolloClient } from \"../../../utils\";\r\nimport { GET_RATINGS_CHANNEL_BY_ID, GET_AVERAGE_RATING } from \"../../../graphql/channel/queries\";\r\nimport GradeIcon from '@material-ui/icons/Grade';\r\nimport LoadingCircle from \"../LoadingCircle\"\r\nimport _ from \"lodash\";\r\nimport moment from \"moment\";\r\nimport 'moment/locale/es';\r\nmoment.locale('vi');\r\n\r\ninterface Props {\r\n  channelId: string\r\n};\r\n\r\ninterface RatingProps {\r\n  node: {\r\n    id: string\r\n    user_id: {\r\n      id: string\r\n      first_name: string\r\n      last_name: string\r\n      avatar: string\r\n    }\r\n    ad_sell_lease_id: {\r\n      id: string\r\n      title: string\r\n    }\r\n    rate: Number\r\n    created_at: string\r\n  }\r\n};\r\n\r\ninterface AverageRating {\r\n  count_rating: number\r\n  average_point: number\r\n  five_star: number\r\n  four_star: number\r\n  three_star: number\r\n  two_star: number\r\n  one_star: number\r\n};\r\n\r\nconst avatar = \"https://1.bp.blogspot.com/-gx54Ig64I_k/WnktM_nzPXI/AAAAAAAAHgw/E7pSRwrXu_c3tSSg-vbO2iQgg4GbVxGKwCLcBGAs/s1600/anh-girl-xinh-9x-kute%2B%252811%2529.jpg\";\r\nconst Ratings: React.FunctionComponent<Props> = (props: Props) => {\r\n  const classes = ratingStyles();\r\n  const [averageRating, setAverageRating] = React.useState<AverageRating>();\r\n  const [ratingsChannel, setRatingsChannel] = React.useState<RatingProps[]>([]);\r\n  const [loading, setLoading] = React.useState(true)\r\n  React.useEffect(() => {\r\n    getAdChannel();\r\n    getAverageRating();\r\n  });\r\n\r\n  const getAdChannel = async () => { \r\n    let id = props.channelId;\r\n    let ratingsChannel = await apolloClient.query({ query: GET_RATINGS_CHANNEL_BY_ID, variables: {\r\n      \"id\": id,\r\n      \"limit\": 18,\r\n      \"page\": 1,\r\n    }})\r\n    .then((response: any) => {\r\n      return response.data.channelAdSellLeaseRatings.edges\r\n    });\r\n    if(Array.isArray(ratingsChannel)){\r\n      setRatingsChannel(ratingsChannel)\r\n      setLoading(false)\r\n    };\r\n  };\r\n\r\n  const getAverageRating = async () => { \r\n    let res = await apolloClient.query({ query: GET_AVERAGE_RATING, variables: {\r\n      \"id\": props.channelId\r\n    }})\r\n    .then((response: any) => {\r\n      let averageRating = _.get(response, \"data.channelAverageRatings\", {})\r\n      setAverageRating(averageRating)\r\n    });\r\n  };\r\n\r\n  const renderRatingChanel = () => {\r\n    return ratingsChannel.map((item: any, index: number) => {\r\n      return (\r\n        <div key={index} style={{ marginLeft: \"-160px\" }}>\r\n          <CardHeader \r\n            avatar={ <Avatar alt=\"Reviewer\" src={item.node.user_id.avatar || avatar}>{item.node.user_id.avatar}</Avatar>}\r\n            disableTypography\r\n            subheader={\r\n              <div className={classes.subheader}>\r\n                <Typography variant=\"body2\" className={classes.rating}>Đánh giá bởi:</Typography>\r\n                <Typography className={classes.userRating}>{item.node.user_id.first_name} {item.node.user_id.last_name}</Typography><br />\r\n                <Rating\r\n                  disabled\r\n                  name=\"simple-controlled\"\r\n                  value={item.node.rate}\r\n                  style={{ color: \"#045EA8\" }}\r\n                />\r\n                <Typography variant=\"body2\">{moment(Number(item.node.created_at)).fromNow()}</Typography>\r\n              </div>\r\n            }\r\n          />\r\n        </div>\r\n      ) \r\n    }); \r\n  };\r\n\r\n  const count_rating   = _.get(averageRating, \"count_rating\", 1);\r\n  const fiveRating     = parseInt(`${(_.get(averageRating, \"five_star\", 0)/count_rating)*100}`);\r\n  const fourRating     = parseInt(`${(_.get(averageRating, \"four_star\", 0)/count_rating)*100}`);\r\n  const threeRating    = parseInt(`${(_.get(averageRating, \"three_star\", 0)/count_rating)*100}`);\r\n  const twoRating      = parseInt(`${(_.get(averageRating, \"two_star\", 0)/count_rating)*100}`);\r\n  const oneRating      = parseInt(`${(_.get(averageRating, \"one_star\", 0)/count_rating)*100}`);\r\n  const renderAverageRating = () => {\r\n    const total = ratingsChannel.length;\r\n    const arrTotalRating = [\r\n      { width: `${fiveRating}%` },\r\n      { width: `${fourRating}%` },\r\n      { width: `${threeRating}%` },\r\n      { width: `${twoRating}%` },\r\n      { width: `${oneRating}%` },\r\n    ];\r\n    return (\r\n      <div style={{ marginTop: \"-24px\" }} >\r\n        <div className={classes.averageRatingTotal}>\r\n          <p className={classes.averageRatingLevel}>3.0</p>\r\n          <Grid container alignItems=\"center\" justify=\"center\" spacing={0} className={classes.averageViewRating}>\r\n            <Grid item xs={8}>\r\n              <Rating disabled name=\"simple-controlled\" value={3} style={{ color: \"#045EA8\" }}/>\r\n            </Grid>\r\n            <Grid item xs={4}><Typography variant=\"h5\">{total}</Typography></Grid>\r\n          </Grid>\r\n        </div>\r\n        <div className={classes.averageRatingDescribe}>\r\n          {arrTotalRating.map((item: any, index: number) => {\r\n            return (\r\n              <div className={classes.levelRatingMargin} key={index}>\r\n                <div className={classes.levelRating}>\r\n                  {5 - index}\r\n                  <GradeIcon className={classes.levelRatingIcon} />\r\n                </div>\r\n                <div className={classes.averageRatingDescribeFive} key={index} >\r\n                  <div className={classes.averageRatingDescribeFiveLevel} style= {{ width: item.width }}></div>\r\n                </div>\r\n              </div>\r\n            )\r\n          })}\r\n        </div>\r\n        <div className={classes.clearFloat}></div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={classes.rootRating}>\r\n      <Typography variant=\"h5\" className={classes.titleRating}>Đánh giá chất lượng</Typography>\r\n      {renderAverageRating()}\r\n      {loading ? <LoadingCircle /> : \"\"}\r\n      <div className={classes.ratingList}>\r\n        <Typography variant=\"h5\" className={classes.titleRating}>Đánh giá gần nhất</Typography>\r\n        {Array.isArray(ratings) ? renderRatingChanel() : <Typography align=\"center\">Không có đánh giá nào</Typography> }\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default Ratings;"]},"metadata":{},"sourceType":"module"}
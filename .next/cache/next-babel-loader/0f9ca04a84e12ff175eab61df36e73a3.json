{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\toan\\\\Desktop\\\\NDM\\\\chat\\\\components\\\\Popover\\\\Index.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    popover: {\n      pointerEvents: 'none'\n    },\n    paper: {\n      padding: theme.spacing(1)\n    }\n  };\n});\nexport default function MouseOverPopover() {\n  var _this = this;\n\n  var classes = useStyles();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var popoverOpen = function popoverOpen(event) {\n    setOpen(event.currentTarget);\n  };\n\n  var popoverClose = function popoverClose() {\n    setOpen(null);\n  };\n\n  var Product = [{\n    name: 'Giường ngủ',\n    elements: [{\n      element: 'Giường gỗ tự nhiên'\n    }, {\n      element: 'Giường gỗ nhân tạo'\n    }, {\n      element: 'Giường gỗ cổ điển'\n    }, {\n      element: 'Giườn hiện đại'\n    }]\n  } // {\n  //     name: 'Bàn ăn',\n  //     elements: [{ element: 'Bàn ăn tự nhiên' }, { element: 'Bàn ăn nhân tạo' }, { element: 'Bàn ăn cổ điển' }, { element: 'Bàn ăn hiện đại' }]\n  // },\n  ];\n  return Product.map(function (item, index) {\n    return __jsx(\"div\", {\n      ket: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, __jsx(Typography, {\n      \"aria-owns\": open ? 'mouse-over-popover' + index : undefined // aria-haspopup=\"true\"\n      ,\n      color: \"primary\",\n      onMouseEnter: popoverOpen,\n      onMouseLeave: popoverClose,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }, item.name), __jsx(Popover, {\n      id: \"mouse-over-popover\" + index,\n      className: classes.popover,\n      classes: {\n        paper: classes.paper\n      },\n      open: open,\n      anchorEl: open,\n      anchorOrigin: {\n        // Vị trí ghim\n        vertical: 'center',\n        // Theo chieu doc\n        horizontal: 'center' //  theo chieu ngang\n\n      },\n      transformOrigin: {\n        // Biến đổi\n        vertical: 'top',\n        horizontal: 'left'\n      },\n      onClose: popoverClose,\n      disableRestoreFocus: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }, item.elements.map(function (e, count) {\n      return __jsx(Typography, {\n        key: count,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 58\n        }\n      }, e.element);\n    }))));\n  });\n}","map":{"version":3,"sources":["C:/Users/toan/Desktop/NDM/chat/components/Popover/Index.jsx"],"names":["React","Popover","Typography","makeStyles","useStyles","theme","popover","pointerEvents","paper","padding","spacing","MouseOverPopover","classes","useState","open","setOpen","popoverOpen","event","currentTarget","popoverClose","Product","name","elements","element","map","item","index","undefined","vertical","horizontal","e","count"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,IAAMC,SAAS,GAAGD,UAAU,CAAC,UAACE,KAAD;AAAA,SAAY;AACrCC,IAAAA,OAAO,EAAE;AACLC,MAAAA,aAAa,EAAE;AADV,KAD4B;AAIrCC,IAAAA,KAAK,EAAE;AACHC,MAAAA,OAAO,EAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd;AADN;AAJ8B,GAAZ;AAAA,CAAD,CAA5B;AASA,eAAe,SAASC,gBAAT,GAA4B;AAAA;;AACvC,MAAMC,OAAO,GAAGR,SAAS,EAAzB;;AADuC,wBAEfJ,KAAK,CAACa,QAAN,CAAe,KAAf,CAFe;AAAA;AAAA,MAEhCC,IAFgC;AAAA,MAE1BC,OAF0B;;AAIvC,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AAC3BF,IAAAA,OAAO,CAACE,KAAK,CAACC,aAAP,CAAP;AACH,GAFD;;AAIA,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACvBJ,IAAAA,OAAO,CAAC,IAAD,CAAP;AACH,GAFD;;AAIA,MAAMK,OAAO,GAAG,CACZ;AACIC,IAAAA,IAAI,EAAE,YADV;AAEIC,IAAAA,QAAQ,EAAE,CAAC;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAD,EAAoC;AAAEA,MAAAA,OAAO,EAAE;AAAX,KAApC,EAAuE;AAAEA,MAAAA,OAAO,EAAE;AAAX,KAAvE,EAAyG;AAAEA,MAAAA,OAAO,EAAE;AAAX,KAAzG;AAFd,GADY,CAKZ;AACA;AACA;AACA;AARY,GAAhB;AAWA,SAAOH,OAAO,CAACI,GAAR,CAAY,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAChC,WACI;AAAK,MAAA,GAAG,EAAEA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,UAAD;AACI,mBAAWZ,IAAI,GAAG,uBAAuBY,KAA1B,GAAkCC,SADrD,CAEI;AAFJ;AAGI,MAAA,KAAK,EAAC,SAHV;AAII,MAAA,YAAY,EAAEX,WAJlB;AAKI,MAAA,YAAY,EAAEG,YALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOKM,IAAI,CAACJ,IAPV,CADJ,EAUI,MAAC,OAAD;AACI,MAAA,EAAE,EAAE,uBAAuBK,KAD/B;AAEI,MAAA,SAAS,EAAEd,OAAO,CAACN,OAFvB;AAGI,MAAA,OAAO,EAAE;AACLE,QAAAA,KAAK,EAAEI,OAAO,CAACJ;AADV,OAHb;AAMI,MAAA,IAAI,EAAEM,IANV;AAOI,MAAA,QAAQ,EAAEA,IAPd;AAQI,MAAA,YAAY,EAAE;AAAE;AACZc,QAAAA,QAAQ,EAAE,QADA;AACU;AACpBC,QAAAA,UAAU,EAAE,QAFF,CAEY;;AAFZ,OARlB;AAYI,MAAA,eAAe,EAAE;AAAE;AACfD,QAAAA,QAAQ,EAAE,KADG;AAEbC,QAAAA,UAAU,EAAE;AAFC,OAZrB;AAgBI,MAAA,OAAO,EAAEV,YAhBb;AAiBI,MAAA,mBAAmB,MAjBvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAmBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKM,IAAI,CAACH,QAAL,CAAcE,GAAd,CAAkB,UAACM,CAAD,EAAIC,KAAJ;AAAA,aAAc,MAAC,UAAD;AAAY,QAAA,GAAG,EAAEA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyBD,CAAC,CAACP,OAA3B,CAAd;AAAA,KAAlB,CADL,CAnBJ,CAVJ,CADJ;AAoCH,GArCM,CAAP;AAuCH","sourcesContent":["import React from 'react';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    popover: {\r\n        pointerEvents: 'none',\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nexport default function MouseOverPopover() {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const popoverOpen = (event) => {\r\n        setOpen(event.currentTarget);\r\n    };\r\n\r\n    const popoverClose = () => {\r\n        setOpen(null);\r\n    };\r\n\r\n    const Product = [\r\n        {\r\n            name: 'Giường ngủ',\r\n            elements: [{ element: 'Giường gỗ tự nhiên' }, { element: 'Giường gỗ nhân tạo' }, { element: 'Giường gỗ cổ điển' }, { element: 'Giườn hiện đại' }]\r\n        },\r\n        // {\r\n        //     name: 'Bàn ăn',\r\n        //     elements: [{ element: 'Bàn ăn tự nhiên' }, { element: 'Bàn ăn nhân tạo' }, { element: 'Bàn ăn cổ điển' }, { element: 'Bàn ăn hiện đại' }]\r\n        // },\r\n    ]\r\n\r\n    return Product.map((item, index) => {\r\n        return (\r\n            <div ket={index}>\r\n                <Typography\r\n                    aria-owns={open ? 'mouse-over-popover' + index : undefined}\r\n                    // aria-haspopup=\"true\"\r\n                    color='primary'\r\n                    onMouseEnter={popoverOpen}\r\n                    onMouseLeave={popoverClose}\r\n                >\r\n                    {item.name}\r\n                </Typography>\r\n                <Popover\r\n                    id={\"mouse-over-popover\" + index}\r\n                    className={classes.popover}\r\n                    classes={{\r\n                        paper: classes.paper,\r\n                    }}\r\n                    open={open}\r\n                    anchorEl={open}\r\n                    anchorOrigin={{ // Vị trí ghim\r\n                        vertical: 'center', // Theo chieu doc\r\n                        horizontal: 'center', //  theo chieu ngang\r\n                    }}\r\n                    transformOrigin={{ // Biến đổi\r\n                        vertical: 'top',\r\n                        horizontal: 'left',\r\n                    }}\r\n                    onClose={popoverClose}\r\n                    disableRestoreFocus\r\n                >\r\n                    <div>\r\n                        {item.elements.map((e, count) => <Typography key={count}>{e.element}</Typography>)}\r\n                    </div>\r\n                </Popover>\r\n            </div>\r\n        );\r\n    })\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _Array$isArray from \"@babel/runtime-corejs2/core-js/array/is-array\";\nvar _jsxFileName = \"C:\\\\Users\\\\manh nhan\\\\Desktop\\\\new_ndm\\\\components\\\\Channel\\\\Tabs\\\\Members.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport { Avatar } from \"@material-ui/core\";\nimport PhoneInTalkIcon from '@material-ui/icons/PhoneInTalk';\nimport { member, memberStyles } from \"../Constant\";\nimport { GET_MEMBER_CHANNEL_BY_ID } from \"../../../graphql/channel/queries\";\nimport { apolloClient } from \"../../../utils\";\n\nconst Info = props => {\n  const classes = memberStyles();\n  const [members, getMembers] = React.useState([]);\n\n  const getMemberChannel = async () => {\n    let id = \"5eb0f1c5e20716472e9fb50f\";\n    let members = await apolloClient.query({\n      query: GET_MEMBER_CHANNEL_BY_ID,\n      variables: {\n        \"id\": id,\n        \"limit\": 18,\n        \"page\": 1\n      }\n    }).then(response => {\n      return response.data.channelMembers.edges;\n    });\n\n    if (_Array$isArray(members)) {\n      getMembers(members);\n    }\n  };\n\n  React.useEffect(() => {\n    getMemberChannel();\n  });\n  console.log(\"members\", members);\n\n  const renderMember = () => {\n    return __jsx(Grid, {\n      container: true,\n      direction: \"row\",\n      alignItems: \"center\",\n      spacing: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, member.map((item, index) => {\n      return __jsx(Grid, {\n        key: index,\n        item: true,\n        lg: 2,\n        md: 3,\n        sm: 4,\n        xs: 6,\n        className: classes.marginMember,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: classes.members,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, __jsx(Avatar, {\n        alt: \"\",\n        className: classes.avatar,\n        src: item.avatar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), __jsx(\"div\", {\n        className: classes.nameMember,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, __jsx(Typography, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, item.name)), __jsx(\"a\", {\n        title: \"G\\u1ECDi ngay\",\n        href: \"tel:0936162822\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, __jsx(PhoneInTalkIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      })), __jsx(Typography, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, item.phone)));\n    }));\n  };\n\n  const renderMembers = () => {\n    return __jsx(Grid, {\n      container: true,\n      direction: \"row\",\n      alignItems: \"center\",\n      spacing: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, members.map((item, index) => {\n      return __jsx(Grid, {\n        key: index,\n        item: true,\n        lg: 2,\n        md: 3,\n        sm: 4,\n        xs: 6,\n        className: classes.marginMember,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: classes.members,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, __jsx(Avatar, {\n        alt: \"\",\n        className: classes.avatar,\n        src: item.avatar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }), __jsx(\"div\", {\n        className: classes.nameMember,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, __jsx(Typography, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, item.first_name, \" \", item.last_name)), __jsx(\"a\", {\n        title: \"G\\u1ECDi ngay\",\n        href: `${item.mobile || item.phone}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, __jsx(PhoneInTalkIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      })), __jsx(Typography, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, item.mobile || item.phone)));\n    }));\n  };\n\n  return __jsx(\"div\", {\n    className: classes.rootMember,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, __jsx(Typography, {\n    variant: \"h5\",\n    className: classes.titleMember,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \"Danh s\\xE1ch m\\xF4i gi\\u1EDBi\"), renderMember());\n};\n\nexport default Info;","map":{"version":3,"sources":["C:/Users/manh nhan/Desktop/new_ndm/components/Channel/Tabs/Members.tsx"],"names":["React","Grid","Typography","Avatar","PhoneInTalkIcon","member","memberStyles","GET_MEMBER_CHANNEL_BY_ID","apolloClient","Info","props","classes","members","getMembers","useState","getMemberChannel","id","query","variables","then","response","data","channelMembers","edges","useEffect","console","log","renderMember","map","item","index","marginMember","avatar","nameMember","name","phone","renderMembers","first_name","last_name","mobile","rootMember","titleMember"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport clsx from \"clsx\";\nimport { Grid, Typography, Card, CardContent, CardActions } from \"@material-ui/core\";\nimport { createStyles, Theme, makeStyles } from \"@material-ui/core/styles\";\nimport { List, Avatar } from \"@material-ui/core\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport WcIcon from \"@material-ui/icons/Wc\";\nimport PhoneIcon from \"@material-ui/icons/Phone\";\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport PhoneInTalkIcon from '@material-ui/icons/PhoneInTalk';\nimport { member, memberStyles} from \"../Constant\"\nimport { GET_MEMBER_CHANNEL_BY_ID } from \"../../../graphql/channel/queries\"\nimport { apolloClient } from \"../../../utils\";\n\ninterface InfoProps {\n  \n}\n\ninterface User {\n  address: string;\n  avatar: string;\n  birthday: string;\n  email: string;\n  facebook: string;\n  first_name: string;\n  gender: string;\n  google_id: string;\n  id: string;\n  intro: string;\n  last_name: string;\n  phone: string;\n  mobile: string;\n  skype: string;\n  username: string;\n  viber: string;\n  website: string;\n  zalo: string;\n  created_at: string;\n  updated_at: string;\n}\n\ninterface Member {\n  node: {\n    avatar: string\n    first_name: string\n    last_name: string\n    mobile: string\n    phone: string\n  }\n}\n\nconst Info: React.FunctionComponent<InfoProps> = (props: InfoProps) => {\n  const classes = memberStyles();\n  const [members, getMembers] = React.useState<Member[]>([])\n\n  const getMemberChannel = async ()=> { \n    let id = \"5eb0f1c5e20716472e9fb50f\"\n    let members = await apolloClient.query({ query: GET_MEMBER_CHANNEL_BY_ID, variables: {\n      \"id\": id,\n      \"limit\": 18,\n      \"page\": 1,\n    }})\n    .then((response: any) => {\n      return response.data.channelMembers.edges\n    })\n    if(Array.isArray(members)){\n      getMembers(members)\n    }\n  };\n\n  React.useEffect(() => {\n    getMemberChannel()\n  })\n\n  console.log(\"members\", members)\n\n\n  const renderMember = () => {\n    return (\n      <Grid container direction=\"row\" alignItems=\"center\" spacing={1}>\n        {member.map((item: any, index: number) => {\n          return (\n            <Grid key={index} item lg={2} md={3} sm={4} xs={6} className={classes.marginMember}>\n              <div className={classes.members} >\n                <Avatar alt=\"\" className={classes.avatar} src={item.avatar} />\n                <div className={classes.nameMember}>\n                  <Typography>{item.name}</Typography>\n                </div>\n                <a title=\"Gọi ngay\" href=\"tel:0936162822\">\n                  <PhoneInTalkIcon />\n                </a>\n                <Typography>{item.phone}</Typography>\n              </div>\n            </Grid>\n          );\n        })}\n      </Grid>\n    )\n  }\n\n  const renderMembers = () => {\n    return (\n      <Grid container direction=\"row\" alignItems=\"center\" spacing={1}>\n        {members.map((item: any, index: number) => {\n          return (\n            <Grid key={index} item lg={2} md={3} sm={4} xs={6} className={classes.marginMember}>\n              <div className={classes.members} >\n                <Avatar alt=\"\" className={classes.avatar} src={item.avatar} />\n                <div className={classes.nameMember}>\n                  <Typography>{item.first_name} {item.last_name}</Typography>\n                </div>\n                <a title=\"Gọi ngay\" href={`${item.mobile || item.phone}`}>\n                  <PhoneInTalkIcon />\n                </a>\n                <Typography>{item.mobile || item.phone}</Typography>\n              </div>\n            </Grid>\n          );\n        })}\n      </Grid>\n    )\n  }\n\n  return (\n    <div className={classes.rootMember}>\n      <Typography variant=\"h5\" className={classes.titleMember}>Danh sách môi giới</Typography>\n        {renderMember()}\n    </div>\n  );\n};\n\nexport default Info;\n"]},"metadata":{},"sourceType":"module"}
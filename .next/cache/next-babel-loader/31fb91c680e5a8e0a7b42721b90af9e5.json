{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react'; //Import Layout\n\nimport Layout from '../../components/Layout/Layout';\nimport processQueryUrl from \"../../modules/LayeredNavigation/processQueryUrl\"; //Import Components\n\nimport TitleBlock from \"../../components/Index/TitleBlock\";\nimport GridAdSellLeases from \"../../components/GridList/GridAdSellLeases\";\nimport GridProject from \"../../components/GridList/GridProject\";\nimport LayeredNavigation from \"../../components/LayeredNavigation/LayeredNavigation\";\nimport TopLayered from \"../../components/LayeredNavigation/TopLayered\";\nimport Grid from \"@material-ui/core/Grid\";\nimport SearchKeyword from \"../../components/Search/KeywordSlide\";\nimport PaginationPage from \"../../components/Pagination/Pagination\";\nimport LoadingPage from \"../../components/Display/LoadingPage\";\nimport StringProcess from \"./../../modules/stringProcess\";\nimport Validator from \"../../modules/validator\";\nimport CategoryContent from \"../../components/Search/CategoryContent\";\nimport Router, { useRouter } from 'next/router'; //Import SCSS\n\nimport \"../../assets/scss/style.scss\";\nimport { apolloClient } from \"../../utils\";\nimport { GET_AD_SELL_LEASES } from \"../../graphql/ad_sell_leases/queries\";\nimport EmptyPage from \"../../components/Display/EmptyPage\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport { useEffect } from \"react\";\nimport { GET_PROJECT_LIST } from \"../../graphql/project/queries\";\nimport { mainURL } from \"../../constants\";\nimport urlProcess from \"../../modules/urlProcess\";\n\n// @ts-ignore\nconst MainSearchPage = props => {\n  //Define Query Data\n  const [queryFilter, setQueryFilter] = React.useState(\"'{}'\");\n  const [totalNumber, setTotalNumber] = React.useState(0);\n  const [isNextPage, setNextPage] = React.useState(false);\n  const [isPrevPage, setPrevPage] = React.useState(false);\n  const [statusLoading, setStatusLoading] = React.useState(false);\n  const [typeView, setTypeView] = React.useState(\"grid\"); //Search Data AdsellLease\n\n  const [searchDataAdSellLease, setSearchDataAdSellLease] = React.useState([]); //Search Data Project\n\n  const [searchDataProject, setSearchDataProject] = React.useState([]); //Layered Navigation Data\n\n  const [dataLayeredNavigation, setDataLayeredNavigation] = React.useState(props.dataQuery);\n  const router = useRouter();\n\n  const updateLayeredNavigation = data => {\n    let valueString = getFilterString(data);\n    setDataLayeredNavigation(data);\n    setQueryFilter(valueString);\n    processRenderPage(1, null, valueString);\n    updateQueryString(data);\n  };\n\n  const updateQueryString = data => {\n    let queryString = processQueryUrl.processQueryUrl(data, props.typePage);\n    let slugAs = '/nha-dat-ban';\n    let urlProcess = '/nha-dat-ban';\n\n    if (props.typePage !== 'ad-sell-lease-location' && props.typePage !== 'ad-sell-lease-index') {\n      slugAs = '/du-an-bat-dong-san';\n      urlProcess = '/du-an-bat-dong-san';\n    }\n\n    if (data.slug && (props.typePage === 'ad-sell-lease-location' || props.typePage === 'ad-sell-lease-index')) {\n      urlProcess = urlProcess + '/[slug]';\n      slugAs = slugAs + '/' + data.slug;\n    }\n\n    if (queryString) {\n      slugAs = slugAs + '?' + queryString;\n    }\n\n    Router.push(urlProcess, slugAs, {\n      shallow: false\n    });\n  };\n\n  const getFilterString = filterQuery => {\n    let filterQueryProcess = processQueryUrl.processQueryString(filterQuery);\n\n    let valueString = _JSON$stringify(filterQueryProcess);\n\n    valueString = valueString.split('\"').join(\"'\");\n    return valueString;\n  }; //First Render Data\n\n\n  useEffect(() => {\n    let valueString = getFilterString(props.dataQuery);\n    processRenderPage(props.dataQuery.page, null, valueString);\n  }, [props.dataQuery]); //Process Render Page\n\n  const processRenderPage = (page, limit, filter) => {\n    setStatusLoading(true);\n    let queryFilterPrepare = filter ? filter : queryFilter;\n    let queryGraphQL = GET_AD_SELL_LEASES;\n\n    if (props.typePage !== 'ad-sell-lease-location' && props.typePage !== 'ad-sell-lease-index') {\n      queryGraphQL = GET_PROJECT_LIST;\n    }\n\n    apolloClient.query({\n      query: queryGraphQL,\n      variables: {\n        \"page\": dataLayeredNavigation.page,\n        \"limit\": dataLayeredNavigation.limit,\n        \"filter\": queryFilterPrepare\n      }\n    }).then(response => {\n      setStatusLoading(false);\n\n      if (props.typePage !== 'ad-sell-lease-location' && props.typePage !== 'ad-sell-lease-index') {\n        //Set Search Data\n        if (!Validator.isBlank(response.data) && !Validator.isBlank(response.data.projects.edges)) {\n          setSearchDataProject(response.data.projects.edges);\n        }\n\n        if (!Validator.isBlank(response.data) && !Validator.isBlank(response.data.projects.edges)) {\n          setTotalNumber(response.data.projects.edges.length);\n        }\n\n        if (!Validator.isBlank(response.data) && !Validator.isBlank(response.data.projects.pageInfo.hasNextPage)) {\n          setNextPage(response.data.projects.pageInfo.hasNextPage);\n        }\n\n        if (!Validator.isBlank(response.data) && !Validator.isBlank(response.data.projects.pageInfo.hasPreviousPage)) {\n          setPrevPage(response.data.projects.pageInfo.hasPreviousPage);\n        } //If Blank\n\n\n        if (Validator.isBlank(response.data) || Validator.isBlank(response.data.projects.edges)) {\n          setSearchDataProject([]);\n          setTotalNumber(0);\n          setNextPage(false);\n          setPrevPage(false);\n        }\n      } else {\n        //Set Search Data\n        if (!Validator.isBlank(response.data) && !Validator.isBlank(response.data.adSellLeases.edges)) {\n          setSearchDataAdSellLease(response.data.adSellLeases.edges);\n        }\n\n        if (!Validator.isBlank(response.data) && !Validator.isBlank(response.data.adSellLeases.edges)) {\n          setTotalNumber(response.data.adSellLeases.edges.length);\n        }\n\n        if (!Validator.isBlank(response.data) && !Validator.isBlank(response.data.adSellLeases.pageInfo.hasNextPage)) {\n          setNextPage(response.data.adSellLeases.pageInfo.hasNextPage);\n        }\n\n        if (!Validator.isBlank(response.data) && !Validator.isBlank(response.data.adSellLeases.pageInfo.hasPreviousPage)) {\n          setPrevPage(response.data.adSellLeases.pageInfo.hasPreviousPage);\n        } //If Blank\n\n\n        if (Validator.isBlank(response.data) || Validator.isBlank(response.data.adSellLeases.edges)) {\n          setSearchDataAdSellLease([]);\n          setTotalNumber(0);\n          setNextPage(false);\n          setPrevPage(false);\n        }\n      }\n    });\n  }; //Process Open Left Layered Navigation\n\n\n  const [state, setState] = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false\n  }); // @ts-ignore\n\n  const toggleDrawer = (side, open) => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState(_objectSpread({}, state, {\n      [side]: open\n    }));\n  }; // @ts-ignore\n\n\n  const handleOpenPopup = () => {\n    setState(_objectSpread({}, state, {\n      [\"right\"]: true\n    }));\n  }; // change view grid, list\n\n\n  const onChangeView = type => {\n    setTypeView(type);\n  }; //Process Next Page, Previous Page\n\n\n  const onNextPage = () => {\n    let nextPage = Number(dataLayeredNavigation.page) + 1;\n    dataLayeredNavigation.page = nextPage;\n    setDataLayeredNavigation(dataLayeredNavigation);\n    processRenderPage(nextPage, null, null);\n    updateQueryString(dataLayeredNavigation);\n  };\n\n  const onPrevPage = () => {\n    let previousPage = Number(dataLayeredNavigation.page) - 1;\n\n    if (previousPage >= 1) {\n      dataLayeredNavigation.page = previousPage;\n      setDataLayeredNavigation(dataLayeredNavigation);\n      processRenderPage(previousPage, null, null);\n      updateQueryString(dataLayeredNavigation);\n    }\n  }; //Prepare and Filter Location\n\n\n  let locationItem = {\n    id: null,\n    name: null,\n    title: null,\n    slug: null,\n    seo_title: null,\n    description: null,\n    seo_description: null,\n    image: null\n  };\n\n  if (!Validator.isBlank(props.location.city) && !Validator.isBlank(props.location.city.id)) {\n    locationItem = _Object$assign(locationItem, props.location.city);\n  }\n\n  if (!Validator.isBlank(props.location.district) && !Validator.isBlank(props.location.district.id)) {\n    locationItem = _Object$assign(locationItem, props.location.district);\n  }\n\n  if (!Validator.isBlank(props.location.ward) && !Validator.isBlank(props.location.ward.id)) {\n    locationItem = _Object$assign(locationItem, props.location.ward);\n  } //Prepare page content\n\n\n  let titlePage = '';\n  let descriptionPage = '';\n  let heading = '';\n\n  if (props.typePage !== 'ad-sell-lease-location' && props.typePage !== 'ad-sell-lease-index') {\n    if (!Validator.isBlank(locationItem.name)) {\n      if (!Validator.isBlank(locationItem.seo_title)) {\n        titlePage = String(locationItem.seo_title);\n      } else {\n        titlePage = 'Dự án tại ' + locationItem.name + ' năm 2020';\n      }\n\n      if (!Validator.isBlank(locationItem.title)) {\n        heading = String(locationItem.title);\n      } else {\n        heading = 'Dự án tại ' + locationItem.name;\n      }\n\n      if (!Validator.isBlank(locationItem.seo_description)) {\n        descriptionPage = String(locationItem.seo_description);\n      } else {\n        descriptionPage = '';\n      }\n    } else {\n      titlePage = \"Tin tức dự án bất động sản toàn quốc đầy đủ, cập nhật nhất\";\n      heading = 'Tìm dự án';\n      descriptionPage = 'Nhà Đất Mới cập nhật liên tục tất cả dự án bất động sản trên toàn quốc với đầy đủ thông tin về quy mô, mức giá, tiến độ và đánh giá tiềm năng phát triển.';\n    }\n  } else {\n    if (!Validator.isBlank(locationItem.name)) {\n      if (!Validator.isBlank(locationItem.seo_title)) {\n        titlePage = String(locationItem.seo_title);\n      } else {\n        titlePage = 'Mua bán nhà tại ' + locationItem.name + ' năm 2020';\n      }\n\n      if (!Validator.isBlank(locationItem.title)) {\n        heading = String(locationItem.title);\n      } else {\n        heading = 'Mua bán nhà tại ' + locationItem.name;\n      }\n\n      if (!Validator.isBlank(locationItem.seo_description)) {\n        descriptionPage = String(locationItem.seo_description);\n      } else {\n        descriptionPage = '';\n      }\n    } else {\n      titlePage = \"Tin rao bất động sản uy tín nhất hiện nay - Nhà Đất Mới\";\n      heading = 'Tìm tin rao';\n      descriptionPage = 'Website đăng tin, mua bán bất động sản uy tín, nhanh chóng và hiệu quả. 100% tin rao trên toàn quốc đều được kiểm chứng và xác thực bởi hệ thống thông minh.';\n    }\n  }\n\n  let pathString = 'nha-dat-ban';\n\n  if (props.typePage !== 'ad-sell-lease-location' && props.typePage !== 'ad-sell-lease-index') {\n    pathString = 'du-an-bat-dong-san';\n  }\n\n  let canonicalTag = mainURL + '/' + pathString;\n\n  if (props.slug) {\n    canonicalTag = canonicalTag + '/' + props.slug;\n  }\n\n  let imageAvatar = 'https://static.nhadatmoi.net/default/home_default.jpg';\n\n  if (locationItem.image) {\n    let imageString = String(locationItem.image);\n    imageAvatar = urlProcess.processImageUrl(imageString, '');\n  }\n\n  const freshText = input => {\n    input = StringProcess.stripProperties(input, []);\n    input = StringProcess.stripTags(input, '');\n    input = input.replace(/&nbsp;/g, ' ');\n    return input;\n  };\n\n  const convertDescription = input => {\n    return input.replace(/&#(\\d+);/g, function (match, dec) {\n      return String.fromCharCode(dec);\n    });\n  };\n\n  if (locationItem.description && (descriptionPage === '' || !descriptionPage)) {\n    let textToReplace = String(locationItem.description);\n    descriptionPage = freshText(textToReplace);\n    descriptionPage = convertDescription(descriptionPage);\n    descriptionPage = StringProcess.truncateString(descriptionPage, 255, '');\n  } // @ts-ignore\n\n\n  return __jsx(Layout, _extends({\n    title: titlePage,\n    description: descriptionPage\n  }, props, {\n    image: imageAvatar,\n    canonical: canonicalTag,\n    path: pathString\n  }), __jsx(\"div\", {\n    className: \"body_container\"\n  }, __jsx(Hidden, {\n    smDown: true\n  }, __jsx(LayeredNavigation, {\n    className: \"search_layered\",\n    updateLayeredNavigation: updateLayeredNavigation,\n    dataLayeredNavigation: dataLayeredNavigation\n  })), __jsx(Drawer, {\n    anchor: \"right\",\n    open: state.right,\n    onClose: toggleDrawer('right', false)\n  }, __jsx(LayeredNavigation, {\n    className: \"search_layered\",\n    updateLayeredNavigation: updateLayeredNavigation,\n    dataLayeredNavigation: dataLayeredNavigation\n  })), __jsx(Grid, {\n    item: true,\n    className: \"search_body border\"\n  }, __jsx(TitleBlock, {\n    title: heading,\n    description: \"Hiển thị \" + StringProcess.addCommas(Number(totalNumber).toString()) + \" kết quả\",\n    type: \"h1\",\n    path: \"\"\n  }), __jsx(TopLayered, {\n    onChangeView: type => onChangeView(type),\n    className: \"top_layered\",\n    onOpen: () => handleOpenPopup(),\n    updateLayeredNavigation: updateLayeredNavigation,\n    dataLayeredNavigation: dataLayeredNavigation\n  }), statusLoading && __jsx(LoadingPage, {\n    className: \"loading_page\",\n    grid: {\n      xl: 3,\n      lg: 4,\n      md: 6,\n      sm: 6,\n      xs: 12\n    },\n    numberLimit: 12\n  }), !statusLoading && searchDataAdSellLease.length == 0 && (props.typePage === 'ad-sell-lease-location' || props.typePage === 'ad-sell-lease-index') && __jsx(EmptyPage, {\n    title: \"Kh\\xF4ng t\\xECm th\\u1EA5y k\\u1EBFt qu\\u1EA3 n\\xE0o\",\n    description: \"Vui l\\xF2ng s\\u1EED d\\u1EE5ng t\\u1EEB kh\\xF3a kh\\xE1c ho\\u1EB7c s\\u1EED d\\u1EE5ng b\\u1ED9 l\\u1ECDc n\\xE2ng cao \\u0111\\u1EC3 t\\xECm ki\\u1EBFm k\\u1EBFt qu\\u1EA3 ph\\xF9 h\\u1EE3p\"\n  }), !statusLoading && searchDataProject.length == 0 && props.typePage === 'project-index' && __jsx(EmptyPage, {\n    title: \"Kh\\xF4ng t\\xECm th\\u1EA5y k\\u1EBFt qu\\u1EA3 n\\xE0o\",\n    description: \"Vui l\\xF2ng s\\u1EED d\\u1EE5ng t\\u1EEB kh\\xF3a kh\\xE1c ho\\u1EB7c s\\u1EED d\\u1EE5ng b\\u1ED9 l\\u1ECDc n\\xE2ng cao \\u0111\\u1EC3 t\\xECm ki\\u1EBFm k\\u1EBFt qu\\u1EA3 ph\\xF9 h\\u1EE3p\"\n  }), !statusLoading && searchDataAdSellLease.length > 0 && (props.typePage === 'ad-sell-lease-location' || props.typePage === 'ad-sell-lease-index') && __jsx(\"div\", null, __jsx(GridAdSellLeases, {\n    grid: {\n      xl: 3,\n      lg: 4,\n      md: 6,\n      sm: 6,\n      xs: 12\n    },\n    gridData: searchDataAdSellLease,\n    className: \"grid__list\",\n    typeView: typeView\n  }), __jsx(PaginationPage, {\n    isNextPage: isNextPage,\n    isPrevPage: isPrevPage,\n    currentPage: 2,\n    onNextPage: onNextPage,\n    onPrevPage: onPrevPage\n  })), !statusLoading && searchDataProject.length > 0 && props.typePage === 'project-index' && __jsx(\"div\", null, __jsx(GridProject, {\n    grid: {\n      xl: 3,\n      lg: 4,\n      md: 6,\n      sm: 6,\n      xs: 12\n    },\n    gridData: searchDataProject,\n    className: \"grid__list\",\n    typeView: typeView\n  }), __jsx(PaginationPage, {\n    isNextPage: isNextPage,\n    isPrevPage: isPrevPage,\n    currentPage: 2,\n    onNextPage: onNextPage,\n    onPrevPage: onPrevPage\n  })), __jsx(CategoryContent, {\n    description: locationItem.description\n  }), __jsx(SearchKeyword, null))));\n};\n\nexport default MainSearchPage;","map":null,"metadata":{},"sourceType":"module"}
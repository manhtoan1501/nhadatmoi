{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manh nhan\\\\Desktop\\\\new_ndm\\\\components\\\\Channel\\\\GridAdSellLeases.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport GridItemASL from \"./GridItemASL\";\nimport Grid from \"@material-ui/core/Grid\";\nimport StringProcess from \"./../../modules/stringProcess\";\nimport urlProcess from \"../../modules/urlProcess\";\nimport PriceProcess from \"../../modules/priceProcess\";\n\nconst GridList = props => {\n  return __jsx(Grid, {\n    container: true,\n    spacing: 0,\n    item: true,\n    xs: 12,\n    direction: \"row\",\n    style: {\n      padding: \"0px\",\n      margin: \"0px\"\n    },\n    alignItems: \"baseline\",\n    className: props.className,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, props.gridData.map((dataItem, index) => {\n    let priceValue = PriceProcess.priceProcess(dataItem.node.price.value, dataItem.node.price.unit);\n    let dataGrid = {\n      image: urlProcess.processImageUrl(dataItem.node.avatar.src, 'ad_sell_lease'),\n      title: dataItem.node.title,\n      address: dataItem.node.address.text,\n      area: StringProcess.addCommas(dataItem.node.area.value),\n      price: priceValue,\n      slug: dataItem.node.slug,\n      updated_at: dataItem.node.updated_at,\n      created_at: dataItem.node.created_at,\n      view_count: dataItem.node.view_count,\n      id: dataItem.node.id,\n      like_status: dataItem.node.like_status,\n      path: '/tin-rao/'\n    };\n\n    if (props.maxLength && index >= props.maxLength) {\n      return __jsx(React.Fragment, null);\n    } else {\n      return __jsx(GridItemASL, {\n        grid: props.grid,\n        dataGird: dataGrid,\n        key: \"grid_item_ad_sell_\" + index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      });\n    }\n  }));\n};\n\nexport default GridList;","map":{"version":3,"sources":["C:/Users/manh nhan/Desktop/new_ndm/components/Channel/GridAdSellLeases.tsx"],"names":["React","GridItemASL","Grid","StringProcess","urlProcess","PriceProcess","GridList","props","padding","margin","className","gridData","map","dataItem","index","priceValue","priceProcess","node","price","value","unit","dataGrid","image","processImageUrl","avatar","src","title","address","text","area","addCommas","slug","updated_at","created_at","view_count","id","like_status","path","maxLength","grid"],"mappings":";;AAAA,OAAOA,KAAP,MAAuC,OAAvC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;;AA+CA,MAAMC,QAA0C,GAAIC,KAAD,IAA0B;AAC3E,SACE,MAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAA4B,IAAA,IAAI,MAAhC;AAAiC,IAAA,EAAE,EAAE,EAArC;AAAyC,IAAA,SAAS,EAAC,KAAnD;AAAwD,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE,KAAX;AAAkBC,MAAAA,MAAM,EAAE;AAA1B,KAA/D;AACE,IAAA,UAAU,EAAC,UADb;AACwB,IAAA,SAAS,EAAEF,KAAK,CAACG,SADzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGH,KAAK,CAACI,QAAN,CAAeC,GAAf,CAAmB,CAACC,QAAD,EAAWC,KAAX,KAA6B;AAC/C,QAAIC,UAAU,GAAGV,YAAY,CAACW,YAAb,CAA0BH,QAAQ,CAACI,IAAT,CAAcC,KAAd,CAAoBC,KAA9C,EAAqDN,QAAQ,CAACI,IAAT,CAAcC,KAAd,CAAoBE,IAAzE,CAAjB;AACA,QAAIC,QAAQ,GAAG;AACbC,MAAAA,KAAK,EAAElB,UAAU,CAACmB,eAAX,CAA2BV,QAAQ,CAACI,IAAT,CAAcO,MAAd,CAAqBC,GAAhD,EAAqD,eAArD,CADM;AAEbC,MAAAA,KAAK,EAAEb,QAAQ,CAACI,IAAT,CAAcS,KAFR;AAGbC,MAAAA,OAAO,EAAEd,QAAQ,CAACI,IAAT,CAAcU,OAAd,CAAsBC,IAHlB;AAIbC,MAAAA,IAAI,EAAE1B,aAAa,CAAC2B,SAAd,CAAwBjB,QAAQ,CAACI,IAAT,CAAcY,IAAd,CAAmBV,KAA3C,CAJO;AAKbD,MAAAA,KAAK,EAAEH,UALM;AAMbgB,MAAAA,IAAI,EAAElB,QAAQ,CAACI,IAAT,CAAcc,IANP;AAObC,MAAAA,UAAU,EAAEnB,QAAQ,CAACI,IAAT,CAAce,UAPb;AAQbC,MAAAA,UAAU,EAAEpB,QAAQ,CAACI,IAAT,CAAcgB,UARb;AASbC,MAAAA,UAAU,EAAErB,QAAQ,CAACI,IAAT,CAAciB,UATb;AAUbC,MAAAA,EAAE,EAAEtB,QAAQ,CAACI,IAAT,CAAckB,EAVL;AAWbC,MAAAA,WAAW,EAAEvB,QAAQ,CAACI,IAAT,CAAcmB,WAXd;AAYbC,MAAAA,IAAI,EAAE;AAZO,KAAf;;AAcA,QAAI9B,KAAK,CAAC+B,SAAN,IAAmBxB,KAAK,IAAIP,KAAK,CAAC+B,SAAtC,EAAiD;AAC/C,aAAQ,2BAAR;AACD,KAFD,MAEO;AACL,aACE,MAAC,WAAD;AAAa,QAAA,IAAI,EAAE/B,KAAK,CAACgC,IAAzB;AAA+B,QAAA,QAAQ,EAAElB,QAAzC;AAAmD,QAAA,GAAG,EAAE,uBAAuBP,KAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD;AAEF,GAxBA,CAFH,CADF;AA8BD,CA/BD;;AAgCA,eAAeR,QAAf","sourcesContent":["import React, {FunctionComponent} from 'react';\r\nimport GridItemASL from \"./GridItemASL\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport StringProcess from \"./../../modules/stringProcess\";\r\nimport urlProcess from \"../../modules/urlProcess\";\r\nimport PriceProcess from \"../../modules/priceProcess\";\r\n\r\n\r\ninterface GridProps {\r\n  node: {\r\n    id: string\r\n    title: string,\r\n    slug: string,\r\n    created_at: string,\r\n    updated_at: string,\r\n    view_count: number,\r\n    like_status: boolean,\r\n    price: {\r\n      unit: string\r\n      value: string\r\n    },\r\n    avatar: {\r\n      alt_text: string\r\n      src: string\r\n      description: string\r\n    },\r\n    address: {\r\n      text: string,\r\n      ward: string,\r\n      district: string,\r\n      city: string\r\n    },\r\n    area: {\r\n      unit: string\r\n      value: string\r\n    }\r\n  }\r\n}\r\n\r\ninterface GridListProps {\r\n  gridData: GridProps[];\r\n  className: string;\r\n  maxLength?: number;\r\n  grid: {\r\n    lg: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12;\r\n    md: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12;\r\n    sm: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12;\r\n    xs: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12;\r\n    xl: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12;\r\n  };\r\n}\r\n\r\nconst GridList: FunctionComponent<GridListProps> = (props: GridListProps) => {\r\n  return (\r\n    <Grid container spacing={0} item xs={12} direction=\"row\"style={{ padding: \"0px\", margin: \"0px\" }} \r\n      alignItems=\"baseline\" className={props.className}>\r\n      {props.gridData.map((dataItem, index: number) => {\r\n        let priceValue = PriceProcess.priceProcess(dataItem.node.price.value, dataItem.node.price.unit);\r\n        let dataGrid = {\r\n          image: urlProcess.processImageUrl(dataItem.node.avatar.src, 'ad_sell_lease'),\r\n          title: dataItem.node.title,\r\n          address: dataItem.node.address.text,\r\n          area: StringProcess.addCommas(dataItem.node.area.value),\r\n          price: priceValue,\r\n          slug: dataItem.node.slug,\r\n          updated_at: dataItem.node.updated_at,\r\n          created_at: dataItem.node.created_at,\r\n          view_count: dataItem.node.view_count,\r\n          id: dataItem.node.id,\r\n          like_status: dataItem.node.like_status,\r\n          path: '/tin-rao/'\r\n        };\r\n        if (props.maxLength && index >= props.maxLength) {\r\n          return (<></>);\r\n        } else {\r\n          return (\r\n            <GridItemASL grid={props.grid} dataGird={dataGrid} key={\"grid_item_ad_sell_\" + index}/>\r\n          )\r\n        }\r\n\r\n      })}\r\n    </Grid>\r\n  );\r\n};\r\nexport default GridList;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Validator from \"../validator\";\nimport QueryString from \"query-string\";\n\nvar processQueryString = function processQueryString(data) {\n  var dataQueryNew = {};\n\n  if (!Validator.isBlank(data.title)) {\n    dataQueryNew = _objectSpread({}, dataQueryNew, {}, {\n      title: data.title\n    });\n  }\n\n  if (!Validator.isBlank(data.name)) {\n    dataQueryNew = _objectSpread({}, dataQueryNew, {}, {\n      name: data.name\n    });\n  }\n\n  if (!Validator.isBlank(data.city)) {\n    dataQueryNew = _objectSpread({}, dataQueryNew, {}, {\n      city: data.city\n    });\n  }\n\n  if (!Validator.isBlank(data.district)) {\n    dataQueryNew = _objectSpread({}, dataQueryNew, {}, {\n      district: data.district\n    });\n  }\n\n  if (!Validator.isBlank(data.ward)) {\n    dataQueryNew = _objectSpread({}, dataQueryNew, {}, {\n      ward: data.ward\n    });\n  }\n\n  if (!Validator.isBlank(data.home_direction)) {\n    dataQueryNew = _objectSpread({}, dataQueryNew, {}, {\n      home_direction: data.home_direction\n    });\n  }\n\n  if (!Validator.isBlank(data.area_range) && (!Validator.isBlank(data.area_range.max) || !Validator.isBlank(data.area_range.min))) {\n    dataQueryNew = _objectSpread({}, dataQueryNew, {}, {\n      area_range: data.area_range\n    });\n  }\n\n  if (!Validator.isBlank(data.price_range) && (!Validator.isBlank(data.price_range.max) || !Validator.isBlank(data.price_range.min))) {\n    dataQueryNew = _objectSpread({}, dataQueryNew, {}, {\n      price_range: data.price_range\n    });\n  }\n\n  if (!Validator.isBlank(data.bed_room_number) && (!Validator.isBlank(data.bed_room_number.max) || !Validator.isBlank(data.bed_room_number.min))) {\n    dataQueryNew = _objectSpread({}, dataQueryNew, {}, {\n      bed_room_number: data.bed_room_number\n    });\n  }\n\n  if (!Validator.isBlank(data.sort_by)) {\n    if (!Validator.isBlank(data.sort_by.time) && data.sort_by.time === \"newest\") {} else {\n      dataQueryNew = _objectSpread({}, dataQueryNew, {}, {\n        sort_by: data.sort_by\n      });\n    }\n  }\n\n  return dataQueryNew;\n};\n\nvar processQueryUrl = function processQueryUrl(data, typePage) {\n  var dataQueryNew = {};\n\n  if (!Validator.isBlank(data.title)) {\n    dataQueryNew = _objectSpread({}, dataQueryNew, {}, {\n      title: data.title\n    });\n  }\n\n  if (!Validator.isBlank(data.name)) {\n    dataQueryNew = _objectSpread({}, dataQueryNew, {}, {\n      name: data.name\n    });\n  }\n\n  if (!Validator.isBlank(data.page) && data.page !== 1) {\n    dataQueryNew = _objectSpread({}, dataQueryNew, {}, {\n      page: data.page\n    });\n  }\n\n  if (!Validator.isBlank(data.limit) && data.limit !== 12) {\n    dataQueryNew = _objectSpread({}, dataQueryNew, {}, {\n      limit: data.limit\n    });\n  }\n\n  if (!Validator.isBlank(data.home_direction)) {\n    dataQueryNew = _objectSpread({}, dataQueryNew, {}, {\n      home_direction: data.home_direction\n    });\n  }\n\n  if (!Validator.isBlank(data.area_range) && (!Validator.isBlank(data.area_range.max) || !Validator.isBlank(data.area_range.min))) {\n    var areaRangeString = JSON.stringify(data.area_range);\n    dataQueryNew = _objectSpread({}, dataQueryNew, {}, {\n      area_range: areaRangeString\n    });\n  }\n\n  if (!Validator.isBlank(data.price_range) && (!Validator.isBlank(data.price_range.max) || !Validator.isBlank(data.price_range.min))) {\n    var _areaRangeString = JSON.stringify(data.price_range);\n\n    dataQueryNew = _objectSpread({}, dataQueryNew, {}, {\n      price_range: _areaRangeString\n    });\n  }\n\n  if (!Validator.isBlank(data.bed_room_number) && (!Validator.isBlank(data.bed_room_number.max) || !Validator.isBlank(data.bed_room_number.min))) {\n    var _areaRangeString2 = JSON.stringify(data.bed_room_number);\n\n    dataQueryNew = _objectSpread({}, dataQueryNew, {}, {\n      bed_room_number: _areaRangeString2\n    });\n  }\n\n  if (!Validator.isBlank(data.sort_by)) {\n    if (!Validator.isBlank(data.sort_by.time) && data.sort_by.time === \"newest\") {} else {\n      var sortByString = JSON.stringify(data.sort_by);\n      dataQueryNew = _objectSpread({}, dataQueryNew, {}, {\n        sort_by: sortByString\n      });\n    }\n  }\n\n  return QueryString.stringify(dataQueryNew, {\n    arrayFormat: 'bracket'\n  });\n};\n\nexport default {\n  processQueryUrl: processQueryUrl,\n  processQueryString: processQueryString\n};","map":{"version":3,"sources":["C:/Users/manh nhan/Desktop/Nhadatmoi/modules/LayeredNavigation/processQueryUrl.tsx"],"names":["Validator","QueryString","processQueryString","data","dataQueryNew","isBlank","title","name","city","district","ward","home_direction","area_range","max","min","price_range","bed_room_number","sort_by","time","processQueryUrl","typePage","page","limit","areaRangeString","JSON","stringify","sortByString","arrayFormat"],"mappings":"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","sourcesContent":["import Validator from \"../validator\";\r\nimport QueryString from \"query-string\";\r\n\r\ninterface DataQueryProp {\r\n  city: string|null,\r\n  district: string|null,\r\n  ward: string|null,\r\n  home_direction: string|null,\r\n  price_range: RangeValue,\r\n  area_range: RangeValue,\r\n  bed_room_number: RangeValue,\r\n  title: string|null,\r\n  name: string|null,\r\n  page: number|null,\r\n  limit: number|null,\r\n  slug: string|null,\r\n  sort_by: AdSellLeaseSortType\r\n}\r\n\r\ninterface RangeValue {\r\n  max: number;\r\n  min: number;\r\n}\r\n\r\ninterface AdSellLeaseSortType {\r\n  time?: \"newest\" | \"oldest\",\r\n  price?: \"low_to_high\" | \"high_to_low\",\r\n  view?: \"low_to_high\" | \"high_to_low\",\r\n  rate?: \"high_to_low\"\r\n}\r\n\r\nconst processQueryString = (data: DataQueryProp) => {\r\n  let dataQueryNew = {};\r\n  if (!Validator.isBlank(data.title)) {\r\n    dataQueryNew = {...dataQueryNew, ...{title: data.title}};\r\n  }\r\n  if (!Validator.isBlank(data.name)) {\r\n    dataQueryNew = {...dataQueryNew, ...{name: data.name}};\r\n  }\r\n  if (!Validator.isBlank(data.city)) {\r\n    dataQueryNew = {...dataQueryNew, ...{city: data.city}};\r\n  }\r\n  if (!Validator.isBlank(data.district)) {\r\n    dataQueryNew = {...dataQueryNew, ...{district: data.district}};\r\n  }\r\n  if (!Validator.isBlank(data.ward)) {\r\n    dataQueryNew = {...dataQueryNew, ...{ward: data.ward}};\r\n  }\r\n  if (!Validator.isBlank(data.home_direction)) {\r\n    dataQueryNew = {...dataQueryNew, ...{home_direction: data.home_direction}};\r\n  }\r\n  if (!Validator.isBlank(data.area_range) && (!Validator.isBlank(data.area_range.max) || !Validator.isBlank(data.area_range.min))) {\r\n    dataQueryNew = {...dataQueryNew, ...{area_range: data.area_range}};\r\n  }\r\n  if (!Validator.isBlank(data.price_range) && (!Validator.isBlank(data.price_range.max) || !Validator.isBlank(data.price_range.min))) {\r\n    dataQueryNew = {...dataQueryNew, ...{price_range: data.price_range}};\r\n  }\r\n  if (!Validator.isBlank(data.bed_room_number) && (!Validator.isBlank(data.bed_room_number.max) || !Validator.isBlank(data.bed_room_number.min))) {\r\n    dataQueryNew = {...dataQueryNew, ...{bed_room_number: data.bed_room_number}};\r\n  }\r\n  if (!Validator.isBlank(data.sort_by)) {\r\n    if (!Validator.isBlank(data.sort_by.time) && data.sort_by.time === \"newest\") {\r\n    } else {\r\n      dataQueryNew = {...dataQueryNew, ...{sort_by: data.sort_by}};\r\n    }\r\n  }\r\n  return dataQueryNew;\r\n};\r\n\r\nconst processQueryUrl =  (data: DataQueryProp, typePage: string) => {\r\n  let dataQueryNew = {};\r\n  if (!Validator.isBlank(data.title)) {\r\n    dataQueryNew = {...dataQueryNew, ...{title: data.title}};\r\n  }\r\n  if (!Validator.isBlank(data.name)) {\r\n    dataQueryNew = {...dataQueryNew, ...{name: data.name}};\r\n  }\r\n  if (!Validator.isBlank(data.page) && data.page !== 1) {\r\n    dataQueryNew = {...dataQueryNew, ...{page: data.page}};\r\n  }\r\n  if (!Validator.isBlank(data.limit) && data.limit !== 12) {\r\n    dataQueryNew = {...dataQueryNew, ...{limit: data.limit}};\r\n  }\r\n  if (!Validator.isBlank(data.home_direction)) {\r\n    dataQueryNew = {...dataQueryNew, ...{home_direction: data.home_direction}};\r\n  }\r\n  if (!Validator.isBlank(data.area_range) && (!Validator.isBlank(data.area_range.max) || !Validator.isBlank(data.area_range.min))) {\r\n    let areaRangeString = JSON.stringify(data.area_range);\r\n    dataQueryNew = {...dataQueryNew, ...{area_range: areaRangeString}};\r\n  }\r\n  if (!Validator.isBlank(data.price_range) && (!Validator.isBlank(data.price_range.max) || !Validator.isBlank(data.price_range.min))) {\r\n    let areaRangeString = JSON.stringify(data.price_range);\r\n    dataQueryNew = {...dataQueryNew, ...{price_range: areaRangeString}};\r\n  }\r\n  if (!Validator.isBlank(data.bed_room_number) && (!Validator.isBlank(data.bed_room_number.max) || !Validator.isBlank(data.bed_room_number.min))) {\r\n    let areaRangeString = JSON.stringify(data.bed_room_number);\r\n    dataQueryNew = {...dataQueryNew, ...{bed_room_number: areaRangeString}};\r\n  }\r\n  if (!Validator.isBlank(data.sort_by)) {\r\n    if (!Validator.isBlank(data.sort_by.time) && data.sort_by.time === \"newest\") {\r\n    } else {\r\n      let sortByString = JSON.stringify(data.sort_by);\r\n      dataQueryNew = {...dataQueryNew, ...{sort_by: sortByString}};\r\n    }\r\n  }\r\n  return  QueryString.stringify(dataQueryNew, {arrayFormat: 'bracket'});\r\n};\r\nexport default {\r\n  processQueryUrl,\r\n  processQueryString\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
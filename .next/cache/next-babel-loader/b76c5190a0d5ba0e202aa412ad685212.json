{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"C:\\\\Users\\\\manh nhan\\\\Desktop\\\\new_ndm\\\\pages\\\\channel\\\\[slug].tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Layout from '../../components/Layout/Layout';\nimport { apolloClient } from \"../../utils\";\nimport { GET_CHANNEL_BY_SLUG } from \"../../graphql/channel/queries\";\nimport \"../../assets/scss/style.scss\";\nimport { mainURL } from \"../../constants\";\nimport Channel from \"../../components/Channel/Index\";\n\n// @ts-ignore\nconst UserPage = props => {\n  let metaTitle = `Channel`;\n  let imgBanner = \"https://static.nhadatmoi.net/project/1585911111698_chung-cu-b2-truong-sa-phuong-17-quan-binh-thanh-1.jpg\";\n  console.log(\"props\", props.channel.data.channel);\n  return __jsx(Layout, _extends({\n    title: metaTitle,\n    description: \"\"\n  }, props, {\n    image: imgBanner,\n    canonical: mainURL + '/channel/',\n    path: 'channel',\n    dataCompare: {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), __jsx(Channel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }));\n}; // @ts-ignore\n\n\nUserPage.getInitialProps = async function (props) {\n  let slugChanel = props.query.slug;\n  let channel = await apolloClient.query({\n    query: GET_CHANNEL_BY_SLUG,\n    variables: {\n      \"slug\": slugChanel\n    }\n  }).then(response => {\n    console.log(\"response\", response);\n    return response;\n  });\n  return {\n    channel: channel\n  };\n};\n\nexport default UserPage;","map":{"version":3,"sources":["C:/Users/manh nhan/Desktop/new_ndm/pages/channel/[slug].tsx"],"names":["React","Layout","apolloClient","GET_CHANNEL_BY_SLUG","mainURL","Channel","UserPage","props","metaTitle","imgBanner","console","log","channel","data","getInitialProps","slugChanel","query","slug","variables","then","response"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,SAAQC,YAAR,QAA2B,aAA3B;AACA,SAASC,mBAAT,QAAoC,+BAApC;AACA,OAAO,8BAAP;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,OAAP,MAAoB,gCAApB;;AA8BA;AACA,MAAMC,QAA8B,GAAIC,KAAD,IAAuB;AAC5D,MAAIC,SAAS,GAAI,SAAjB;AACA,MAAIC,SAAS,GAAG,0GAAhB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBJ,KAAK,CAACK,OAAN,CAAcC,IAAd,CAAmBD,OAAxC;AACA,SACE,MAAC,MAAD;AACE,IAAA,KAAK,EAAEJ,SADT;AAEE,IAAA,WAAW,EAAE;AAFf,KAGMD,KAHN;AAIE,IAAA,KAAK,EAAEE,SAJT;AAKE,IAAA,SAAS,EAAGL,OAAO,GAAG,WALxB;AAME,IAAA,IAAI,EAAE,SANR;AAOE,IAAA,WAAW,EAAE,EAPf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MASE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF;AAaD,CAlBD,C,CAoBA;;;AACAE,QAAQ,CAACQ,eAAT,GAA2B,gBAAeP,KAAf,EAAiC;AAC1D,MAAIQ,UAAU,GAAGR,KAAK,CAACS,KAAN,CAAYC,IAA7B;AACA,MAAIL,OAAO,GAAG,MAAMV,YAAY,CAACc,KAAb,CAAmB;AAAEA,IAAAA,KAAK,EAAEb,mBAAT;AAA8Be,IAAAA,SAAS,EAAE;AAC5E,cAAQH;AADoE;AAAzC,GAAnB,EAEdI,IAFc,CAERC,QAAD,IAAmB;AAC1BV,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBS,QAAxB;AACF,WAAOA,QAAP;AACD,GALmB,CAApB;AAOA,SAAO;AACLR,IAAAA,OAAO,EAAEA;AADJ,GAAP;AAGD,CAZD;;AAeA,eAAeN,QAAf","sourcesContent":["import React from 'react';\r\nimport {NextPage} from \"next\";\r\nimport Layout from '../../components/Layout/Layout';\r\nimport {apolloClient} from \"../../utils\";\r\nimport { GET_CHANNEL_BY_SLUG } from \"../../graphql/channel/queries\";\r\nimport \"../../assets/scss/style.scss\";\r\nimport { mainURL } from \"../../constants\";\r\nimport Channel from \"../../components/Channel/Index\"\r\n \r\ninterface IndexProps {\r\n  channel: { data: { channel: ChannelProp } }\r\n}\r\n\r\ninterface ChannelProp {\r\n  id: string\r\n  name: string\r\n  slug: string\r\n  avatar: string\r\n  cover: string\r\n  description: string\r\n  nation: string\r\n  language: string\r\n  telephone: string\r\n  address: string\r\n  facebook: string\r\n  youtube: string\r\n  website: string\r\n  official_status: number\r\n  follow_value: number\r\n  created_at: string\r\n}\r\n\r\ninterface QueryProp { \r\n  query: { slug: string } \r\n}\r\n\r\n\r\n// @ts-ignore\r\nconst UserPage: NextPage<IndexProps> = (props: IndexProps) => {\r\n  let metaTitle = `Channel`\r\n  let imgBanner = \"https://static.nhadatmoi.net/project/1585911111698_chung-cu-b2-truong-sa-phuong-17-quan-binh-thanh-1.jpg\"\r\n\r\n  console.log(\"props\", props.channel.data.channel)\r\n  return (\r\n    <Layout\r\n      title={metaTitle}\r\n      description={\"\"}\r\n      {...props}\r\n      image={imgBanner}\r\n      canonical={ mainURL + '/channel/'}\r\n      path={'channel'}\r\n      dataCompare={{}}\r\n    >\r\n      <Channel />\r\n    </Layout>\r\n  );\r\n};\r\n\r\n// @ts-ignore\r\nUserPage.getInitialProps = async function(props: QueryProp) {\r\n  let slugChanel = props.query.slug;\r\n  let channel = await apolloClient.query({ query: GET_CHANNEL_BY_SLUG, variables: {\r\n      \"slug\": slugChanel,\r\n    }}).then((response: any) => {\r\n      console.log(\"response\", response)\r\n    return response;\r\n  });\r\n  \r\n  return {\r\n    channel: channel,\r\n  };\r\n};\r\n\r\n\r\nexport default UserPage;\r\n"]},"metadata":{},"sourceType":"module"}
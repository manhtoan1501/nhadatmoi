{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\manh nhan\\\\Desktop\\\\Nhadatmoi\\\\components\\\\Channel\\\\Index.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Agency from \"./Tabs/Agency\";\nimport Rating from \"./Tabs/Rating\";\nimport Introduce from \"./Tabs/Introduce\";\nimport AdSellLeases from \"./Tabs/AdSellLeases\";\nimport Header from \"./Header\";\nimport Paper from \"@material-ui/core/Paper\";\nimport StyledCheckbox from \"./StyledCheckbox\";\nimport { Tabs, Tab, Divider, colors, Grid, Button, Typography, CardContent, Avatar } from \"@material-ui/core\";\nimport { relatedChannel } from \"./Constant\";\nimport Page from \"./Page\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      color: \"#444\"\n    },\n    rootTabs: {\n      flexGrow: 1\n    },\n    large: {\n      width: theme.spacing(6),\n      height: theme.spacing(6)\n    },\n    divider: {\n      backgroundColor: colors.grey[300]\n    },\n    button: {\n      border: \"2px solid #D9EDFE\",\n      borderRadius: \"4px\",\n      margin: \"0px 0px 8px 0px\"\n    },\n    checkbox: {\n      \"float\": \"right\",\n      display: \"inline\"\n    },\n    contentChannel: {\n      width: \"100%\",\n      height: \"64px\",\n      border: \"2px solid #D9EDFE\",\n      borderRadius: \"4px\",\n      margin: \"0px 0px 8px 0px\"\n    },\n    title: {\n      fontWeight: 900,\n      padding: \"0px 0px 8px 0px\",\n      color: \"#444\"\n    },\n    follow: {\n      color: \"#aaa\",\n      fontSize: \"13px\",\n      display: \"inline\"\n    },\n    titleFollow: {\n      textOverflow: \"ellipsis\",\n      width: \"240px\",\n      whiteSpace: \"nowrap\",\n      overflow: \"hidden\"\n    },\n    avatarLeft: {\n      \"float\": \"left\"\n    },\n    contentFollow: {\n      margin: \"0px 0px 0px 56px\"\n    }\n  };\n});\n\nvar Index = function Index(props) {\n  var classes = useStyles();\n\n  var _React$useState = React.useState(\"introduce\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      itemTab = _React$useState2[0],\n      setItemTab = _React$useState2[1];\n\n  var _React$useState3 = React.useState(0),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      count = _React$useState4[0],\n      setCount = _React$useState4[1];\n\n  var tabs = [{\n    value: \"ad\",\n    label: \"Tin rao\"\n  }, {\n    value: \"introduce\",\n    label: \"Giới thiệu\"\n  }, {\n    value: \"agency\",\n    label: \"Môi giới\"\n  }, {\n    value: \"rating\",\n    label: \"Đánh giá\"\n  }];\n\n  var handleTabsChange = function handleTabsChange(event, value) {\n    setItemTab(value);\n  };\n\n  return __jsx(Page, {\n    title: \"Profile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, __jsx(Header, {\n    infoUser: props.infoUser,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }), __jsx(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, __jsx(Paper, {\n    square: true,\n    className: classes.rootTabs,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, __jsx(Tabs, {\n    onChange: handleTabsChange,\n    scrollButtons: \"auto\",\n    indicatorColor: \"primary\",\n    textColor: \"primary\",\n    value: itemTab,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, tabs.map(function (tab) {\n    return __jsx(Tab, {\n      key: tab.value,\n      label: tab.label,\n      value: tab.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    });\n  }))), __jsx(Divider, {\n    className: classes.divider,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  })), __jsx(Grid, {\n    item: true,\n    xs: 9,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"body_container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, itemTab === \"ad\" && __jsx(AdSellLeases, {\n    userId: props.infoUser.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }), itemTab === \"introduce\" && __jsx(Introduce, {\n    infoUser: props.infoUser,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }), itemTab === \"agency\" && __jsx(Agency, {\n    infoUser: props.infoUser,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }), itemTab === \"rating\" && __jsx(Rating, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }))), __jsx(Grid, {\n    item: true,\n    xs: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    className: classes.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, \"K\\xEAnh li\\xEAn quan\"), relatedChannel.map(function (item, index) {\n    if (index < count * 6 + 6) {\n      return __jsx(\"div\", {\n        className: classes.contentChannel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, __jsx(Grid, {\n        key: index,\n        container: true,\n        alignItems: \"center\",\n        justify: \"center\",\n        spacing: 4,\n        style: {\n          padding: \"4px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, __jsx(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: classes.avatarLeft,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, __jsx(Avatar, {\n        src: item.image,\n        className: classes.large,\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      })), __jsx(\"div\", {\n        className: classes.contentFollow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, __jsx(Typography, {\n        className: classes.titleFollow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, item.title), __jsx(Typography, {\n        className: classes.follow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, item.numberfollow, \"L\\u01B0\\u1EE3t theo d\\xF5i\"), item.follow && __jsx(StyledCheckbox, {\n        defaultChecked: item.follow,\n        className: classes.checkbox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      })), __jsx(\"div\", {\n        style: {\n          clear: \"both\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }))));\n    } else {\n      return \"\";\n    }\n  }), __jsx(Grid, {\n    container: true,\n    spacing: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }, __jsx(Button, {\n    onClick: function onClick() {\n      return setCount(count + 1);\n    },\n    fullWidth: true,\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  }, \"Xem th\\xEAm\")))))));\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/manh nhan/Desktop/Nhadatmoi/components/Channel/Index.tsx"],"names":["React","makeStyles","Agency","Rating","Introduce","AdSellLeases","Header","Paper","StyledCheckbox","Tabs","Tab","Divider","colors","Grid","Button","Typography","CardContent","Avatar","relatedChannel","Page","useStyles","theme","root","color","rootTabs","flexGrow","large","width","spacing","height","divider","backgroundColor","grey","button","border","borderRadius","margin","checkbox","display","contentChannel","title","fontWeight","padding","follow","fontSize","titleFollow","textOverflow","whiteSpace","overflow","avatarLeft","contentFollow","Index","props","classes","useState","itemTab","setItemTab","count","setCount","tabs","value","label","handleTabsChange","event","infoUser","map","tab","id","item","index","image","numberfollow","clear"],"mappings":"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","sourcesContent":["import React, { FunctionComponent } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Agency from \"./Tabs/Agency\";\r\nimport Rating from \"./Tabs/Rating\";\r\nimport Introduce from \"./Tabs/Introduce\";\r\nimport AdSellLeases from \"./Tabs/AdSellLeases\";\r\nimport Header from \"./Header\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport StyledCheckbox from \"./StyledCheckbox\";\r\nimport {\r\n  Tabs,\r\n  Tab,\r\n  Divider,\r\n  colors,\r\n  Grid,\r\n  Button,\r\n  Icon,\r\n  IconButton,\r\n  Typography,\r\n  Card,\r\n  CardContent,\r\n  CardActions,\r\n  Avatar,\r\n  Checkbox,\r\n} from \"@material-ui/core\";\r\nimport { relatedChannel } from \"./Constant\";\r\nimport Page from \"./Page\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    color: \"#444\"\r\n  },\r\n  rootTabs: {\r\n    flexGrow: 1,\r\n  },\r\n  large: {\r\n    width: theme.spacing(6),\r\n    height: theme.spacing(6),\r\n  },\r\n  divider: {\r\n    backgroundColor: colors.grey[300],\r\n  },\r\n  button: {\r\n    border: \"2px solid #D9EDFE\",\r\n    borderRadius: \"4px\",\r\n    margin: \"0px 0px 8px 0px\",\r\n  },\r\n  checkbox: { \r\n    float: \"right\", \r\n    display: \"inline\" \r\n  },\r\n  contentChannel: {\r\n    width: \"100%\",\r\n    height: \"64px\",\r\n    border: \"2px solid #D9EDFE\",\r\n    borderRadius: \"4px\",\r\n    margin: \"0px 0px 8px 0px\",\r\n  },\r\n  title: {\r\n    fontWeight: 900,\r\n    padding: \"0px 0px 8px 0px\",\r\n    color: \"#444\"\r\n  },\r\n  follow: { \r\n    color: \"#aaa\", \r\n    fontSize: \"13px\", \r\n    display: \"inline\"\r\n  },\r\n  titleFollow: {\r\n    textOverflow: \"ellipsis\",\r\n    width: \"240px\",\r\n    whiteSpace: \"nowrap\",\r\n    overflow: \"hidden\",\r\n  },\r\n  avatarLeft: { \r\n    float: \"left\" \r\n  },\r\n  contentFollow: {\r\n    margin: \"0px 0px 0px 56px\",\r\n  },\r\n}));\r\n\r\ninterface IndexProps {\r\n  comments: CommentsProp[];\r\n  infoUser: UserProps;\r\n  ratings: RatingsProp[];\r\n}\r\n\r\ninterface CommentsProp {\r\n  node: {\r\n    id: string;\r\n    ad_sell_lease_id: string;\r\n    content: string;\r\n    user_id: string;\r\n    media: string;\r\n    user: {\r\n      first_name: string;\r\n      last_name: string;\r\n      avatar: string;\r\n    };\r\n    like_number: string;\r\n    created_at: string;\r\n  };\r\n}\r\n\r\ninterface UserProps {\r\n  address: string;\r\n  avatar: string;\r\n  birthday: string;\r\n  email: string;\r\n  facebook: string;\r\n  first_name: string;\r\n  gender: string;\r\n  google_id: string;\r\n  intro: string;\r\n  id: string;\r\n  last_name: string;\r\n  phone: string;\r\n  mobile: string;\r\n  skype: string;\r\n  username: string;\r\n  viber: string;\r\n  website: string;\r\n  zalo: string;\r\n  created_at: string;\r\n  updated_at: string;\r\n}\r\n\r\ninterface RatingsProp {\r\n  node: {\r\n    id: string;\r\n    ad_sell_lease_id: string;\r\n    content: string;\r\n    user_id: string;\r\n    media: string;\r\n    user: {\r\n      first_name: string;\r\n      last_name: string;\r\n      avatar: string;\r\n    };\r\n    rate: number;\r\n    like_number: string;\r\n    created_at: string;\r\n  };\r\n}\r\n\r\nconst Index: FunctionComponent<IndexProps> = (props: IndexProps) => {\r\n  const classes = useStyles();\r\n  const [itemTab, setItemTab] = React.useState(\"introduce\");\r\n  const [count, setCount] = React.useState<number>(0);\r\n  const tabs = [\r\n    { value: \"ad\", label: \"Tin rao\" },\r\n    { value: \"introduce\", label: \"Giới thiệu\" },\r\n    { value: \"agency\", label: \"Môi giới\" },\r\n    { value: \"rating\", label: \"Đánh giá\" },\r\n  ];\r\n\r\n  const handleTabsChange = (event: any, value: any) => {\r\n    setItemTab(value);\r\n  };\r\n\r\n  return (\r\n    <Page title=\"Profile\">\r\n      <Header infoUser={props.infoUser} />\r\n      <CardContent>\r\n        <Grid container spacing={4}>\r\n          <Grid item xs={12}>\r\n            <Paper square className={classes.rootTabs}>\r\n              <Tabs\r\n                onChange={handleTabsChange}\r\n                scrollButtons=\"auto\"\r\n                indicatorColor=\"primary\"\r\n                textColor=\"primary\"\r\n                value={itemTab}\r\n              >\r\n                {tabs.map((tab) => (\r\n                  <Tab key={tab.value} label={tab.label} value={tab.value} />\r\n                ))}\r\n              </Tabs>\r\n            </Paper>\r\n            <Divider className={classes.divider} />\r\n          </Grid>\r\n          <Grid item xs={9}>\r\n            <div className=\"body_container\">\r\n              {itemTab === \"ad\" && <AdSellLeases userId={props.infoUser.id} />}\r\n              {itemTab === \"introduce\" && <Introduce infoUser={props.infoUser} />}\r\n              {itemTab === \"agency\" && <Agency infoUser={props.infoUser} />}\r\n              {itemTab === \"rating\" && <Rating />}\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Kênh liên quan\r\n            </Typography>\r\n            {relatedChannel.map((item: any, index: number) => {\r\n              if (index < count * 6 + 6) {\r\n                return (\r\n                  <div className={classes.contentChannel} >\r\n                    <Grid\r\n                      key={index}\r\n                      container\r\n                      alignItems=\"center\"\r\n                      justify=\"center\"\r\n                      spacing={4}\r\n                      style={{ padding: \"4px\" }}\r\n                    >\r\n                      <Grid item xs={12}>\r\n                        <div className={classes.avatarLeft}>\r\n                          <Avatar src={item.image} className={classes.large} alt=\"\" />\r\n                        </div>\r\n                        <div className={classes.contentFollow} >\r\n                          <Typography className={classes.titleFollow}>\r\n                            {item.title}\r\n                          </Typography>\r\n                          <Typography className={classes.follow}>{item.numberfollow}Lượt theo dõi</Typography>\r\n                          {item.follow && <StyledCheckbox defaultChecked={item.follow} className={classes.checkbox} /> }\r\n                        </div>\r\n                        <div style={{ clear: \"both\" }}></div>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </div>\r\n                );\r\n              } else {\r\n                return \"\";\r\n              }\r\n            })}\r\n            <Grid container spacing={4}>\r\n              <Grid item xs={12}>\r\n                <Button onClick={() => setCount(count + 1)} fullWidth className={classes.button}>\r\n                  Xem thêm\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}
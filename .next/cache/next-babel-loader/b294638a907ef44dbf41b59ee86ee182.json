{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _Array$isArray from \"@babel/runtime-corejs2/core-js/array/is-array\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\manh nhan\\\\Desktop\\\\Nhadatmoi\\\\components\\\\Channel\\\\Tabs\\\\AdSellLeases.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Grid, Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GridAdSellLeases from \"../../GridList/GridAdSellLeases\";\nimport { apolloClient } from \"../../../utils\";\nimport { GET_AD_SELL_LEASES } from \"../../../graphql/ad_sell_leases/queries\";\nimport { listAd } from \"../Constant\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(6)\n  },\n  posts: {\n    marginTop: theme.spacing(2)\n  },\n  post: {\n    marginBottom: theme.spacing(2)\n  }\n}));\n\nconst Ad = props => {\n  const {\n    className\n  } = props,\n        rest = _objectWithoutProperties(props, [\"className\"]);\n\n  const classes = useStyles();\n  const [list_ad, setListAd] = React.useState([]);\n  const [page, setPage] = React.useState(1);\n  React.useEffect(() => {\n    if (props.userId) {\n      let dataFilterAd = {\n        user: props.userId\n      };\n\n      let filterUser = _JSON$stringify(dataFilterAd);\n\n      apolloClient.query({\n        query: GET_AD_SELL_LEASES,\n        variables: {\n          page: page,\n          limit: 12,\n          filter: filterUser\n        }\n      }).then(response => {\n        setListAd(response.data.adSellLeases.edges);\n      });\n    }\n  }); // console.log(\"list_ad\", list_ad);\n\n  return __jsx(\"div\", _extends({}, rest, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), __jsx(Grid, {\n    container: true,\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, _Array$isArray(listAd) && __jsx(GridAdSellLeases, {\n    grid: {\n      xl: 3,\n      lg: 4,\n      md: 6,\n      sm: 6,\n      xs: 12\n    } // gridData={list_ad}\n    ,\n    gridData: listAd,\n    typeView: \"grid\",\n    className: \"grid__list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    className: \"pagination__block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, page !== 1 ? __jsx(Button, {\n    className: \"pagination__block__prev\",\n    onClick: () => setPage(page - 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, __jsx(\"svg\", {\n    viewBox: \"0 0 448 512\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, __jsx(\"path\", {\n    d: \"M152.485 396.284l19.626-19.626c4.753-4.753 4.675-12.484-.173-17.14L91.22 282H436c6.627 0 12-5.373 12-12v-28c0-6.627-5.373-12-12-12H91.22l80.717-77.518c4.849-4.656 4.927-12.387.173-17.14l-19.626-19.626c-4.686-4.686-12.284-4.686-16.971 0L3.716 247.515c-4.686 4.686-4.686 12.284 0 16.971l131.799 131.799c4.686 4.685 12.284 4.685 16.97-.001z\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  })), \"Trang tr\\u01B0\\u1EDBc\") : \"\", listAd.length > 12 ? __jsx(Button, {\n    className: \"pagination__block__next\",\n    onClick: () => setPage(page + 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"Trang sau\", __jsx(\"svg\", {\n    viewBox: \"0 0 448 512\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, __jsx(\"path\", {\n    d: \"M295.515 115.716l-19.626 19.626c-4.753 4.753-4.675 12.484.173 17.14L356.78 230H12c-6.627 0-12 5.373-12 12v28c0 6.627 5.373 12 12 12h344.78l-80.717 77.518c-4.849 4.656-4.927 12.387-.173 17.14l19.626 19.626c4.686 4.686 12.284 4.686 16.971 0l131.799-131.799c4.686-4.686 4.686-12.284 0-16.971L312.485 115.716c-4.686-4.686-12.284-4.686-16.97 0z\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }))) : \"\")));\n};\n\nexport default Ad;","map":{"version":3,"sources":["C:/Users/manh nhan/Desktop/Nhadatmoi/components/Channel/Tabs/AdSellLeases.tsx"],"names":["React","Grid","Button","makeStyles","GridAdSellLeases","apolloClient","GET_AD_SELL_LEASES","listAd","useStyles","theme","root","marginTop","spacing","posts","post","marginBottom","Ad","props","className","rest","classes","list_ad","setListAd","useState","page","setPage","useEffect","userId","dataFilterAd","user","filterUser","query","variables","limit","filter","then","response","data","adSellLeases","edges","xl","lg","md","sm","xs","length"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport clsx from \"clsx\";\nimport { Grid, Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GridAdSellLeases from \"../../GridList/GridAdSellLeases\";\nimport { apolloClient } from \"../../../utils\";\nimport { GET_AD_SELL_LEASES } from \"../../../graphql/ad_sell_leases/queries\";\nimport { listAd } from \"../Constant\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(6),\n  },\n  posts: {\n    marginTop: theme.spacing(2),\n  },\n  post: {\n    marginBottom: theme.spacing(2),\n  },\n}));\n\ninterface ListAdProps {\n  className?: string;\n  userId: String;\n}\n\ninterface AdProps {\n  node: {\n    title: string;\n    slug: string;\n    created_at: string;\n    updated_at: string;\n    price: {\n      unit: string;\n      value: string;\n    };\n    avatar: {\n      alt_text: string;\n      src: string;\n      description: string;\n    };\n    address: {\n      text: string;\n      ward: string;\n      district: string;\n      city: string;\n    };\n    contact: {\n      image: string;\n      name: string;\n      address: string;\n      mobile: string;\n      phone: string;\n      email: string;\n    };\n    area: {\n      unit: string;\n      value: string;\n    };\n  };\n}\n\nconst Ad: React.FunctionComponent<ListAdProps> = (props: ListAdProps) => {\n  const { className, ...rest } = props;\n  const classes = useStyles();\n  const [list_ad, setListAd] = React.useState<AdProps[]>([]);\n  const [page, setPage] = React.useState(1);\n  React.useEffect(() => {\n    if (props.userId) {\n      let dataFilterAd = {\n        user: props.userId,\n      };\n      let filterUser = JSON.stringify(dataFilterAd);\n      apolloClient\n        .query({\n          query: GET_AD_SELL_LEASES,\n          variables: {\n            page: page,\n            limit: 12,\n            filter: filterUser,\n          },\n        })\n        .then((response) => {\n          setListAd(response.data.adSellLeases.edges);\n        });\n    }\n  });\n\n  // console.log(\"list_ad\", list_ad);\n  return (\n    <div {...rest} className={classes.root}>\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          {/* {Array.isArray(list_ad) && ( */}\n          {Array.isArray(listAd) && (\n            <GridAdSellLeases\n              grid={{ xl: 3, lg: 4, md: 6, sm: 6, xs: 12 }}\n              // gridData={list_ad}\n              gridData={listAd}\n              typeView={\"grid\"}\n              className=\"grid__list\"\n            />\n          )}\n        </Grid>\n        <Grid item xs={12} className=\"pagination__block\">\n          {page !== 1 ? (\n            <Button className=\"pagination__block__prev\" onClick={() => setPage(page - 1)}>\n              <svg viewBox=\"0 0 448 512\">\n                <path d=\"M152.485 396.284l19.626-19.626c4.753-4.753 4.675-12.484-.173-17.14L91.22 282H436c6.627 0 12-5.373 12-12v-28c0-6.627-5.373-12-12-12H91.22l80.717-77.518c4.849-4.656 4.927-12.387.173-17.14l-19.626-19.626c-4.686-4.686-12.284-4.686-16.971 0L3.716 247.515c-4.686 4.686-4.686 12.284 0 16.971l131.799 131.799c4.686 4.685 12.284 4.685 16.97-.001z\" />\n              </svg>\n              Trang trước\n            </Button>\n          ) : (\n            \"\"\n          )}\n          {/* {list_ad.length > 12 ? ( */}\n          {listAd.length > 12 ? (\n            <Button className=\"pagination__block__next\" onClick={() => setPage(page + 1)}>\n              Trang sau\n              <svg viewBox=\"0 0 448 512\">\n                <path d=\"M295.515 115.716l-19.626 19.626c-4.753 4.753-4.675 12.484.173 17.14L356.78 230H12c-6.627 0-12 5.373-12 12v28c0 6.627 5.373 12 12 12h344.78l-80.717 77.518c-4.849 4.656-4.927 12.387-.173 17.14l19.626 19.626c4.686 4.686 12.284 4.686 16.971 0l131.799-131.799c4.686-4.686 4.686-12.284 0-16.971L312.485 115.716c-4.686-4.686-12.284-4.686-16.97 0z\" />\n              </svg>\n            </Button>\n          ) : (\n            \"\"\n          )}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Ad;\n"]},"metadata":{},"sourceType":"module"}
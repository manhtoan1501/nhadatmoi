{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manh nhan\\\\Desktop\\\\Nhadatmoi\\\\components\\\\User\\\\Index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Info from './Tabs/Info';\nimport Reviews from \"./Tabs/Reviews\";\nimport Ad from \"./Tabs/Ad\";\nimport Header from \"./Header\";\nimport Paper from '@material-ui/core/Paper';\nimport { Tabs, Tab, Divider, colors } from '@material-ui/core';\nimport { apolloClient } from \"../../utils\";\nimport { GET_USER_BY_ID } from \"../../graphql/user/queries/index\";\nimport { GET_AD_SELL_LEASES } from \"../../graphql/ad_sell_leases/queries\";\nimport Page from \"./Page\";\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  rootTabs: {\n    flexGrow: 1\n  },\n  inner: {\n    width: theme.breakpoints.values.lg,\n    maxWidth: '100%',\n    margin: '0 auto',\n    padding: theme.spacing(3)\n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  content: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nconst Index = props => {\n  const classes = useStyles();\n  const [itemTab, setItemTab] = React.useState(\"reviews\");\n  const [list_ad, setListAd] = React.useState([]);\n  const [user, setUser] = React.useState();\n  const tabs = [{\n    value: 'info',\n    label: 'Thông tin'\n  }, {\n    value: 'ad',\n    label: 'Tin rao'\n  }, {\n    value: 'reviews',\n    label: \"Đánh giá\"\n  }];\n  useEffect(() => {\n    let userId = \"5e7b82a48928eb4d96c1a526\"; // userTest\n\n    if (props.userId) {\n      let dataFilterAd = {\n        user: props.userId\n      };\n      let filterUser = JSON.stringify(dataFilterAd);\n      apolloClient.query({\n        query: GET_AD_SELL_LEASES,\n        variables: {\n          \"page\": 1,\n          \"limit\": 12,\n          \"filter\": filterUser\n        }\n      }).then(response => {\n        setListAd(response.data.adSellLeases.edges);\n      });\n      apolloClient.query({\n        query: GET_USER_BY_ID,\n        variables: {\n          \"id\": userId\n        }\n      }).then(response => {\n        setUser(response.data.user);\n      });\n    }\n  }, []);\n\n  const handleTabsChange = (event, value) => {\n    setItemTab(value);\n  };\n\n  return __jsx(Page, {\n    title: \"Profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 5\n    }\n  }, __jsx(Header, {\n    user: props.infoUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: classes.inner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }\n  }, __jsx(Paper, {\n    square: true,\n    className: classes.rootTabs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }, __jsx(Tabs, {\n    onChange: handleTabsChange,\n    scrollButtons: \"auto\",\n    indicatorColor: \"primary\",\n    textColor: \"primary\",\n    value: itemTab,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, tabs.map(tab => __jsx(Tab, {\n    key: tab.value,\n    label: tab.label,\n    value: tab.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  })))), __jsx(Divider, {\n    className: classes.divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: classes.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  }, itemTab === 'info' && __jsx(Info, {\n    user: props.infoUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 34\n    }\n  }), itemTab === 'ad' && __jsx(Ad, {\n    list_ad: list_ad,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 32\n    }\n  }), itemTab === 'reviews' && __jsx(Reviews, {\n    listComment: props.listComment,\n    userId: props.userId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 37\n    }\n  }))));\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/manh nhan/Desktop/Nhadatmoi/components/User/Index.tsx"],"names":["React","useEffect","makeStyles","Info","Reviews","Ad","Header","Paper","Tabs","Tab","Divider","colors","apolloClient","GET_USER_BY_ID","GET_AD_SELL_LEASES","Page","useStyles","theme","root","rootTabs","flexGrow","inner","width","breakpoints","values","lg","maxWidth","margin","padding","spacing","divider","backgroundColor","grey","content","marginTop","Index","props","classes","itemTab","setItemTab","useState","list_ad","setListAd","user","setUser","tabs","value","label","userId","dataFilterAd","filterUser","JSON","stringify","query","variables","then","response","data","adSellLeases","edges","handleTabsChange","event","infoUser","map","tab","listComment"],"mappings":";;AAAA,OAAOA,KAAP,IAAmCC,SAAnC,QAAmD,OAAnD;AACA,SAAQC,UAAR,QAAyB,0BAAzB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,EAAP,MAAe,WAAf;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SAAQC,IAAR,EAAcC,GAAd,EAAmBC,OAAnB,EAA4BC,MAA5B,QAAyC,mBAAzC;AACA,SAAQC,YAAR,QAA2B,aAA3B;AACA,SAAQC,cAAR,QAA8B,kCAA9B;AACA,SAAQC,kBAAR,QAAiC,sCAAjC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,MAAMC,SAAS,GAAGd,UAAU,CAACe,KAAK,KAAK;AACrCC,EAAAA,IAAI,EAAE,EAD+B;AAErCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QAAQ,EAAE;AADF,GAF2B;AAKrCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAEL,KAAK,CAACM,WAAN,CAAkBC,MAAlB,CAAyBC,EAD3B;AAELC,IAAAA,QAAQ,EAAE,MAFL;AAGLC,IAAAA,MAAM,EAAE,QAHH;AAILC,IAAAA,OAAO,EAAEX,KAAK,CAACY,OAAN,CAAc,CAAd;AAJJ,GAL8B;AAWrCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,eAAe,EAAEpB,MAAM,CAACqB,IAAP,CAAY,GAAZ;AADV,GAX4B;AAcrCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,SAAS,EAAEjB,KAAK,CAACY,OAAN,CAAc,CAAd;AADJ;AAd4B,CAAL,CAAN,CAA5B;;AAqGA,MAAMM,KAAsC,GAAIC,KAAD,IAAyB;AACtE,QAAMC,OAAO,GAAGrB,SAAS,EAAzB;AACA,QAAM,CAACsB,OAAD,EAAUC,UAAV,IAAwBvC,KAAK,CAACwC,QAAN,CAAe,SAAf,CAA9B;AACA,QAAM,CAACC,OAAD,EAAUC,SAAV,IAAuB1C,KAAK,CAACwC,QAAN,CAA0B,EAA1B,CAA7B;AACA,QAAM,CAACG,IAAD,EAAQC,OAAR,IAAmB5C,KAAK,CAACwC,QAAN,EAAzB;AACA,QAAMK,IAAI,GAAG,CACX;AAACC,IAAAA,KAAK,EAAE,MAAR;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GADW,EAEX;AAACD,IAAAA,KAAK,EAAE,IAAR;AAAcC,IAAAA,KAAK,EAAE;AAArB,GAFW,EAGX;AAACD,IAAAA,KAAK,EAAE,SAAR;AAAmBC,IAAAA,KAAK,EAAE;AAA1B,GAHW,CAAb;AAMA9C,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI+C,MAAM,GAAG,0BAAb,CADc,CAC0B;;AACxC,QAAGZ,KAAK,CAACY,MAAT,EAAiB;AACf,UAAIC,YAAY,GAAG;AACjBN,QAAAA,IAAI,EAAEP,KAAK,CAACY;AADK,OAAnB;AAGA,UAAIE,UAAU,GAAGC,IAAI,CAACC,SAAL,CAAeH,YAAf,CAAjB;AACArC,MAAAA,YAAY,CAACyC,KAAb,CAAmB;AAACA,QAAAA,KAAK,EAAEvC,kBAAR;AAA4BwC,QAAAA,SAAS,EAAE;AACxD,kBAAQ,CADgD;AAExD,mBAAS,EAF+C;AAGxD,oBAAUJ;AAH8C;AAAvC,OAAnB,EAIIK,IAJJ,CAISC,QAAQ,IAAI;AACnBd,QAAAA,SAAS,CAACc,QAAQ,CAACC,IAAT,CAAcC,YAAd,CAA2BC,KAA5B,CAAT;AACD,OAND;AAOA/C,MAAAA,YAAY,CAACyC,KAAb,CAAmB;AAACA,QAAAA,KAAK,EAAExC,cAAR;AAAwByC,QAAAA,SAAS,EAAE;AACpD,gBAAMN;AAD8C;AAAnC,OAAnB,EAEIO,IAFJ,CAESC,QAAQ,IAAI;AACnBZ,QAAAA,OAAO,CAACY,QAAQ,CAACC,IAAT,CAAcd,IAAf,CAAP;AACD,OAJD;AAKD;AACF,GApBQ,EAoBN,EApBM,CAAT;;AAsBA,QAAMiB,gBAAgB,GAAG,CAACC,KAAD,EAAaf,KAAb,KAA4B;AACnDP,IAAAA,UAAU,CAACO,KAAD,CAAV;AACD,GAFD;;AAIA,SACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAEV,KAAK,CAAC0B,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAK,IAAA,SAAS,EAAEzB,OAAO,CAAChB,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAO,IAAA,MAAM,MAAb;AAAc,IAAA,SAAS,EAAEgB,OAAO,CAAClB,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,MAAC,IAAD;AACE,IAAA,QAAQ,EAAEyC,gBADZ;AAEE,IAAA,aAAa,EAAC,MAFhB;AAGE,IAAA,cAAc,EAAC,SAHjB;AAIE,IAAA,SAAS,EAAC,SAJZ;AAKE,IAAA,KAAK,EAAEtB,OALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGO,IAAI,CAACkB,GAAL,CAASC,GAAG,IACX,MAAC,GAAD;AAAK,IAAA,GAAG,EAAEA,GAAG,CAAClB,KAAd;AAAqB,IAAA,KAAK,EAAEkB,GAAG,CAACjB,KAAhC;AAAuC,IAAA,KAAK,EAAEiB,GAAG,CAAClB,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAPH,CADA,CADF,EAcE,MAAC,OAAD;AAAS,IAAA,SAAS,EAAET,OAAO,CAACP,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,EAeE;AAAK,IAAA,SAAS,EAAEO,OAAO,CAACJ,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGK,OAAO,KAAK,MAAZ,IAAsB,MAAC,IAAD;AAAM,IAAA,IAAI,EAAEF,KAAK,CAAC0B,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADzB,EAEGxB,OAAO,KAAK,IAAZ,IAAoB,MAAC,EAAD;AAAI,IAAA,OAAO,EAAEG,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFvB,EAGGH,OAAO,KAAK,SAAZ,IAAyB,MAAC,OAAD;AAAS,IAAA,WAAW,EAAEF,KAAK,CAAC6B,WAA5B;AAAyC,IAAA,MAAM,EAAE7B,KAAK,CAACY,MAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAH5B,CAfF,CAFF,CADF;AA0BD,CA/DD;;AAiEA,eAAeb,KAAf","sourcesContent":["import React, { FunctionComponent, useEffect} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles'\r\nimport Info from './Tabs/Info'\r\nimport Reviews from \"./Tabs/Reviews\"\r\nimport Ad from \"./Tabs/Ad\"\r\nimport Header from \"./Header\"\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {Tabs, Tab, Divider, colors} from '@material-ui/core';\r\nimport {apolloClient} from \"../../utils\";\r\nimport {GET_USER_BY_ID } from \"../../graphql/user/queries/index\"\r\nimport {GET_AD_SELL_LEASES} from \"../../graphql/ad_sell_leases/queries\"\r\nimport Page from \"./Page\";\r\n \r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  rootTabs: {\r\n    flexGrow: 1,\r\n  },\r\n  inner: {\r\n    width: theme.breakpoints.values.lg,\r\n    maxWidth: '100%',\r\n    margin: '0 auto',\r\n    padding: theme.spacing(3)\r\n  },\r\n  divider: {\r\n    backgroundColor: colors.grey[300]\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\ninterface ProfileProps {\r\n  listComment: ListCommentProps[]\r\n  userId: string\r\n  infoUser: UserProps\r\n}\r\n\r\ninterface ListCommentProps {\r\n  node: {\r\n    id: string,\r\n    ad_sell_lease_id: string,\r\n    content: string,\r\n    user_id: string,\r\n    media: string,\r\n    user: {\r\n      first_name: string,\r\n      last_name: string,\r\n      avatar: string,\r\n    }\r\n    like_number: string,\r\n    created_at: string,\r\n  },\r\n}\r\n\r\ninterface AdProps  {\r\n  node: {\r\n      title: string,\r\n      slug: string,\r\n      created_at: string,\r\n      updated_at: string,\r\n      price: {\r\n        unit: string\r\n        value: string\r\n      },\r\n      avatar: {\r\n        alt_text: string\r\n        src: string\r\n        description: string\r\n      },\r\n      address: {\r\n        text: string,\r\n        ward: string,\r\n        district: string,\r\n        city: string\r\n      },\r\n      contact: {\r\n        image: string,\r\n        name: string,\r\n        address: string,\r\n        mobile: string,\r\n        phone: string,\r\n        email: string,\r\n      }\r\n      area: {\r\n        unit: string\r\n        value: string\r\n      }\r\n  },\r\n}\r\n\r\ninterface UserProps {\r\n  address: String\r\n  avatar: String\r\n  birthday: String\r\n  email: String\r\n  facebook: String\r\n  first_name: String\r\n  gender: String\r\n  google_id: String\r\n  intro: String\r\n  id: String\r\n  last_name: String\r\n  phone: String\r\n  mobile: String\r\n  skype: String\r\n  username: String\r\n  viber: String\r\n  website: String\r\n  zalo: String\r\n  created_at: String\r\n  updated_at: String\r\n}\r\n\r\nconst Index: FunctionComponent<ProfileProps> = (props: ProfileProps) => {\r\n  const classes = useStyles();\r\n  const [itemTab, setItemTab] = React.useState(\"reviews\")\r\n  const [list_ad, setListAd] = React.useState<AdProps[]>([]);\r\n  const [user , setUser] = React.useState();\r\n  const tabs = [\r\n    {value: 'info', label: 'Thông tin'},\r\n    {value: 'ad', label: 'Tin rao'},\r\n    {value: 'reviews', label: \"Đánh giá\"}\r\n  ]\r\n\r\n  useEffect(() => {\r\n    let userId = \"5e7b82a48928eb4d96c1a526\" // userTest\r\n    if(props.userId) {\r\n      let dataFilterAd = { \r\n        user: props.userId,\r\n      }\r\n      let filterUser = JSON.stringify(dataFilterAd)\r\n      apolloClient.query({query: GET_AD_SELL_LEASES, variables: {\r\n        \"page\": 1,\r\n        \"limit\": 12,\r\n        \"filter\": filterUser \r\n      }}).then(response => { \r\n        setListAd(response.data.adSellLeases.edges)\r\n      })\r\n      apolloClient.query({query: GET_USER_BY_ID, variables: {\r\n        \"id\": userId\r\n      }}).then(response => { \r\n        setUser(response.data.user)\r\n      })\r\n    }\r\n  }, [])\r\n\r\n  const handleTabsChange = (event: any, value: any) => {\r\n    setItemTab(value)\r\n  }\r\n\r\n  return (\r\n    <Page title=\"Profile\">\r\n      <Header user={props.infoUser}/>\r\n      <div className={classes.inner}>\r\n        <Paper square className={classes.rootTabs}>\r\n        <Tabs\r\n          onChange={handleTabsChange}\r\n          scrollButtons=\"auto\"\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          value={itemTab}\r\n        >\r\n          {tabs.map(tab => (\r\n            <Tab key={tab.value} label={tab.label} value={tab.value} />\r\n          ))}\r\n        </Tabs>\r\n        </Paper>\r\n        <Divider className={classes.divider}/>\r\n        <div className={classes.content}>\r\n          {itemTab === 'info' && <Info user={props.infoUser} />}\r\n          {itemTab === 'ad' && <Ad list_ad={list_ad}/>}\r\n          {itemTab === 'reviews' && <Reviews listComment={props.listComment} userId={props.userId} />}\r\n        </div>\r\n      </div>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manh nhan\\\\Desktop\\\\Nhadatmoi\\\\components\\\\PostCard\\\\PostCard.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react'; // import { RouterLink } from 'react-router-dom';\n\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Card, CardHeader, CardContent, CardActionArea, CardMedia, Avatar, Link, Typography, Divider } from '@material-ui/core';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport { Reactions, CommentBubble, CommentForm } from './components';\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  subheader: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  accessTimeIcon: {\n    color: theme.palette.text.secondary,\n    fontSize: '14px',\n    height: 14,\n    width: 14,\n    marginRight: 6\n  },\n  content: {\n    paddingTop: 0\n  },\n  message: {\n    marginBottom: theme.spacing(2)\n  },\n  mediaArea: {\n    marginBottom: theme.spacing(2)\n  },\n  media: {\n    height: 400,\n    backgroundPosition: 'initial'\n  },\n  divider: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2)\n  }\n}));\n\nconst PostCard = props => {\n  const {\n    post,\n    className\n  } = props,\n        rest = _objectWithoutProperties(props, [\"post\", \"className\"]);\n\n  const classes = useStyles();\n  return __jsx(Card, _extends({}, rest, {\n    className: clsx(classes.root, className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }), __jsx(CardHeader, {\n    avatar: __jsx(Avatar, {\n      alt: \"Person\" // className={classes.avatar}\n      // component={RouterLink}\n      ,\n      src: post.author.avatar,\n      to: \"/profile/1/timeline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }),\n    disableTypography: true,\n    subheader: __jsx(\"div\", {\n      className: classes.subheader,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    }, __jsx(AccessTimeIcon, {\n      className: classes.accessTimeIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }), __jsx(Typography, {\n      variant: \"body2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, moment(post.created_at).fromNow())),\n    title: __jsx(Link, {\n      color: \"textPrimary\" // component={RouterLink}\n      ,\n      to: \"/profile/1/timeline\",\n      variant: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }, post.author.name),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }), __jsx(CardContent, {\n    className: classes.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, __jsx(Typography, {\n    className: classes.message,\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, post.message), post.media && __jsx(CardActionArea, {\n    className: classes.mediaArea,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, __jsx(CardMedia, {\n    className: classes.media,\n    image: post.media,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  })), __jsx(Reactions // className={classes.reactions}\n  , {\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }), __jsx(Divider, {\n    className: classes.divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }), post.comments && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, post.comments.map(comment => __jsx(CommentBubble, {\n    comment: comment,\n    key: comment.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 15\n    }\n  }))), __jsx(Divider, {\n    className: classes.divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }), __jsx(CommentForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default PostCard;","map":{"version":3,"sources":["C:/Users/manh nhan/Desktop/Nhadatmoi/components/PostCard/PostCard.tsx"],"names":["React","clsx","moment","makeStyles","Card","CardHeader","CardContent","CardActionArea","CardMedia","Avatar","Link","Typography","Divider","AccessTimeIcon","Reactions","CommentBubble","CommentForm","useStyles","theme","root","subheader","display","alignItems","accessTimeIcon","color","palette","text","secondary","fontSize","height","width","marginRight","content","paddingTop","message","marginBottom","spacing","mediaArea","media","backgroundPosition","divider","marginTop","PostCard","props","post","className","rest","classes","author","avatar","created_at","fromNow","name","comments","map","comment","id"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SACEC,IADF,EAEEC,UAFF,EAGEC,WAHF,EAIEC,cAJF,EAKEC,SALF,EAMEC,MANF,EAOEC,IAPF,EAQEC,UARF,EASEC,OATF,QAUO,mBAVP;AAWA,OAAOC,cAAP,MAA2B,+BAA3B;AAEA,SAASC,SAAT,EAAoBC,aAApB,EAAmCC,WAAnC,QAAsD,cAAtD;AAEA,MAAMC,SAAS,GAAGd,UAAU,CAACe,KAAK,KAAK;AACrCC,EAAAA,IAAI,EAAE,EAD+B;AAErCC,EAAAA,SAAS,EAAE;AACTC,IAAAA,OAAO,EAAE,MADA;AAETC,IAAAA,UAAU,EAAE;AAFH,GAF0B;AAMrCC,EAAAA,cAAc,EAAE;AACdC,IAAAA,KAAK,EAAEN,KAAK,CAACO,OAAN,CAAcC,IAAd,CAAmBC,SADZ;AAEdC,IAAAA,QAAQ,EAAE,MAFI;AAGdC,IAAAA,MAAM,EAAE,EAHM;AAIdC,IAAAA,KAAK,EAAE,EAJO;AAKdC,IAAAA,WAAW,EAAE;AALC,GANqB;AAarCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,UAAU,EAAE;AADL,GAb4B;AAgBrCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,YAAY,EAAEjB,KAAK,CAACkB,OAAN,CAAc,CAAd;AADP,GAhB4B;AAmBrCC,EAAAA,SAAS,EAAE;AACTF,IAAAA,YAAY,EAAEjB,KAAK,CAACkB,OAAN,CAAc,CAAd;AADL,GAnB0B;AAsBrCE,EAAAA,KAAK,EAAE;AACLT,IAAAA,MAAM,EAAE,GADH;AAELU,IAAAA,kBAAkB,EAAE;AAFf,GAtB8B;AA0BrCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,SAAS,EAAEvB,KAAK,CAACkB,OAAN,CAAc,CAAd,CADJ;AAEPD,IAAAA,YAAY,EAAEjB,KAAK,CAACkB,OAAN,CAAc,CAAd;AAFP;AA1B4B,CAAL,CAAN,CAA5B;;AA0DA,MAAMM,QAA+C,GAAIC,KAAD,IAAyB;AAC/E,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAA+BF,KAArC;AAAA,QAA4BG,IAA5B,4BAAqCH,KAArC;;AAEA,QAAMI,OAAO,GAAG9B,SAAS,EAAzB;AAEA,SACE,MAAC,IAAD,eACM6B,IADN;AAEE,IAAA,SAAS,EAAE7C,IAAI,CAAC8C,OAAO,CAAC5B,IAAT,EAAe0B,SAAf,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAIE,MAAC,UAAD;AACE,IAAA,MAAM,EACJ,MAAC,MAAD;AACE,MAAA,GAAG,EAAC,QADN,CAEE;AACA;AAHF;AAIE,MAAA,GAAG,EAAED,IAAI,CAACI,MAAL,CAAYC,MAJnB;AAKE,MAAA,EAAE,EAAC,qBALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ;AAUE,IAAA,iBAAiB,MAVnB;AAWE,IAAA,SAAS,EACP;AAAK,MAAA,SAAS,EAAEF,OAAO,CAAC3B,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,cAAD;AAAgB,MAAA,SAAS,EAAE2B,OAAO,CAACxB,cAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,MAAC,UAAD;AAAY,MAAA,OAAO,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGrB,MAAM,CAAC0C,IAAI,CAACM,UAAN,CAAN,CAAwBC,OAAxB,EADH,CAFF,CAZJ;AAmBE,IAAA,KAAK,EACH,MAAC,IAAD;AACE,MAAA,KAAK,EAAC,aADR,CAEE;AAFF;AAGE,MAAA,EAAE,EAAC,qBAHL;AAIE,MAAA,OAAO,EAAC,IAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMGP,IAAI,CAACI,MAAL,CAAYI,IANf,CApBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAkCE,MAAC,WAAD;AAAa,IAAA,SAAS,EAAEL,OAAO,CAACf,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AACE,IAAA,SAAS,EAAEe,OAAO,CAACb,OADrB;AAEE,IAAA,OAAO,EAAC,OAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGU,IAAI,CAACV,OAJR,CADF,EAOGU,IAAI,CAACN,KAAL,IACC,MAAC,cAAD;AAAgB,IAAA,SAAS,EAAES,OAAO,CAACV,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AACE,IAAA,SAAS,EAAEU,OAAO,CAACT,KADrB;AAEE,IAAA,KAAK,EAAEM,IAAI,CAACN,KAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CARJ,EAeE,MAAC,SAAD,CACE;AADF;AAEE,IAAA,IAAI,EAAEM,IAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,EAmBE,MAAC,OAAD;AAAS,IAAA,SAAS,EAAEG,OAAO,CAACP,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBF,EAoBGI,IAAI,CAACS,QAAL,IACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGT,IAAI,CAACS,QAAL,CAAcC,GAAd,CAAkBC,OAAO,IACxB,MAAC,aAAD;AACE,IAAA,OAAO,EAAEA,OADX;AAEE,IAAA,GAAG,EAAEA,OAAO,CAACC,EAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAHH,CArBJ,EAgCE,MAAC,OAAD;AAAS,IAAA,SAAS,EAAET,OAAO,CAACP,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhCF,EAiCE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjCF,CAlCF,CADF;AAwED,CA7ED;;AAgFA,eAAeE,QAAf","sourcesContent":["import React from 'react';\n// import { RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardActionArea,\n  CardMedia,\n  Avatar,\n  Link,\n  Typography,\n  Divider\n} from '@material-ui/core';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\n\nimport { Reactions, CommentBubble, CommentForm } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  subheader: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  accessTimeIcon: {\n    color: theme.palette.text.secondary,\n    fontSize: '14px',\n    height: 14,\n    width: 14,\n    marginRight: 6\n  },\n  content: {\n    paddingTop: 0\n  },\n  message: {\n    marginBottom: theme.spacing(2)\n  },\n  mediaArea: {\n    marginBottom: theme.spacing(2)\n  },\n  media: {\n    height: 400,\n    backgroundPosition: 'initial'\n  },\n  divider: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2)\n  }\n}));\n\ninterface PostCardProps {\n  className?:string,\n  post:{\n    author:{\n      name:string,\n      avatar:string,\n    },\n    created_at:string,\n    message:string,\n    media:string,\n    avatar:string,\n    name:string,\n    comments:{\n      id:any,\n      author:{\n        avatar:string,\n        name:string\n      }\n      created_at:string,\n      message:string,\n    }[],\n    liked:boolean,\n    likes:number,\n  }\n}\n\nconst PostCard:React.FunctionComponent<PostCardProps> = (props:PostCardProps) => {\n  const { post, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader\n        avatar={\n          <Avatar\n            alt=\"Person\"\n            // className={classes.avatar}\n            // component={RouterLink}\n            src={post.author.avatar}\n            to=\"/profile/1/timeline\"\n          />\n        }\n        disableTypography\n        subheader={\n          <div className={classes.subheader}>\n            <AccessTimeIcon className={classes.accessTimeIcon} />\n            <Typography variant=\"body2\">\n              {moment(post.created_at).fromNow()}\n            </Typography>\n          </div>\n        }\n        title={\n          <Link\n            color=\"textPrimary\"\n            // component={RouterLink}\n            to=\"/profile/1/timeline\"\n            variant=\"h6\"\n          >\n            {post.author.name}\n          </Link>\n        }\n      />\n      <CardContent className={classes.content}>\n        <Typography\n          className={classes.message}\n          variant=\"body1\"\n        >\n          {post.message}\n        </Typography>\n        {post.media && (\n          <CardActionArea className={classes.mediaArea}>\n            <CardMedia\n              className={classes.media}\n              image={post.media}\n            />\n          </CardActionArea>\n        )}\n        <Reactions\n          // className={classes.reactions}\n          post={post}\n        />\n        <Divider className={classes.divider} />\n        {post.comments && (\n          <div\n              // className={classes.comments}\n          >\n            {post.comments.map(comment => (\n              <CommentBubble\n                comment={comment}\n                key={comment.id}\n              />\n            ))}\n          </div>\n        )}\n        <Divider className={classes.divider} />\n        <CommentForm />\n      </CardContent>\n    </Card>\n  );\n};\n\n\nexport default PostCard;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manh nhan\\\\Desktop\\\\Nhadatmoi\\\\pages\\\\nguoi-dung\\\\[slug].tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport Layout from '../../components/Layout/Layout';\nimport \"../../assets/scss/style.scss\";\nimport { mainURL } from \"../../constants\";\n\n// @ts-ignore\nconst UserPage = props => {\n  let title = 'Xem chi tiết dự án';\n  let imageAvatar = 'https://static.nhadatmoi.net/default/home_default.jpg';\n  let metaTitle = 'metaTitle';\n  let metaDescription = 'metaDescription';\n  let initStateInvestor = {\n    id: \"\",\n    name: \"\",\n    description: \"\",\n    slug: \"\",\n    email: \"\",\n    website: \"\",\n    image: \"\",\n    address: {\n      text: \"\"\n    },\n    phone: \"\",\n    mobile: \"\"\n  };\n  return __jsx(Layout, _extends({\n    title: \"metaTitle\",\n    description: \"metaDescription\"\n  }, props, {\n    image: \"https://www.w3schools.com/w3css/img_lights.jpg\",\n    canonical: mainURL + '/nguoi-dung/' + \"ra-hang-dot-cuoi-toa-nha-discovery-complex-so-302-cau-giay-gia-chi-tu-31trm2-1585625310485\",\n    path: 'nguoi-dung',\n    dataCompare: {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }), __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, \"Dai ca\"));\n}; // @ts-ignore\n\n\nUserPage.getInitialProps = async function (props) {\n  let projectSlug = props.query.slug; // let projectDetail = await apolloClient.query({query: GET_PROJECT_BY_SLUG, variables: {\n  //     \"slug\": projectSlug\n  //   }}).then(response => {\n  //   return response;\n  // });\n\n  return {\n    projectDetail: {},\n    slug: projectSlug\n  };\n};\n\nexport default UserPage;","map":{"version":3,"sources":["C:/Users/manh nhan/Desktop/Nhadatmoi/pages/nguoi-dung/[slug].tsx"],"names":["React","Layout","mainURL","UserPage","props","title","imageAvatar","metaTitle","metaDescription","initStateInvestor","id","name","description","slug","email","website","image","address","text","phone","mobile","getInitialProps","projectSlug","query","projectDetail"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAA+B,OAA/B;AAEA,OAAOC,MAAP,MAAmB,gCAAnB;AAQA,OAAO,8BAAP;AACA,SAAgCC,OAAhC,QAA8C,iBAA9C;;AAeA;AACA,MAAMC,QAAkC,GAAIC,KAAD,IAA2B;AACpE,MAAIC,KAAK,GAAG,oBAAZ;AACA,MAAIC,WAAW,GAAG,uDAAlB;AACA,MAAIC,SAAS,GAAG,WAAhB;AACA,MAAIC,eAAe,GAAG,iBAAtB;AAEA,MAAIC,iBAAiB,GAAG;AACtBC,IAAAA,EAAE,EAAE,EADkB;AAEtBC,IAAAA,IAAI,EAAE,EAFgB;AAGtBC,IAAAA,WAAW,EAAE,EAHS;AAItBC,IAAAA,IAAI,EAAE,EAJgB;AAKtBC,IAAAA,KAAK,EAAE,EALe;AAMtBC,IAAAA,OAAO,EAAE,EANa;AAOtBC,IAAAA,KAAK,EAAE,EAPe;AAQtBC,IAAAA,OAAO,EAAE;AACPC,MAAAA,IAAI,EAAE;AADC,KARa;AAWtBC,IAAAA,KAAK,EAAE,EAXe;AAYtBC,IAAAA,MAAM,EAAE;AAZc,GAAxB;AAeA,SACE,MAAC,MAAD;AACE,IAAA,KAAK,EAAE,WADT;AAEE,IAAA,WAAW,EAAE;AAFf,KAGMhB,KAHN;AAIE,IAAA,KAAK,EAAE,gDAJT;AAKE,IAAA,SAAS,EAAGF,OAAO,GAAG,cAAV,GAA2B,4FALzC;AAME,IAAA,IAAI,EAAE,YANR;AAOE,IAAA,WAAW,EAAE,EAPf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,CADF;AAcD,CAnCD,C,CAqCA;;;AACAC,QAAQ,CAACkB,eAAT,GAA2B,gBAAejB,KAAf,EAAiC;AAC1D,MAAIkB,WAAW,GAAGlB,KAAK,CAACmB,KAAN,CAAYV,IAA9B,CAD0D,CAE1D;AACA;AACA;AACA;AACA;;AACA,SAAO;AACLW,IAAAA,aAAa,EAAE,EADV;AAELX,IAAAA,IAAI,EAAES;AAFD,GAAP;AAID,CAXD;;AAaA,eAAenB,QAAf","sourcesContent":["import React, {useEffect} from 'react';\r\nimport {NextPage} from \"next\";\r\nimport Layout from '../../components/Layout/Layout';\r\nimport BannerSlider from \"../../components/PageDetail/BannerSlider\";\r\nimport Main from \"../../components/Project/ProjectMain\";\r\nimport DetailInvestor from \"../../components/Investor/DetailInvestor\"\r\nimport {apolloClient} from \"../../utils\";\r\nimport {GET_PROJECT_BY_SLUG} from \"../../graphql/project/queries\";\r\nimport {GET_INVESTOR_BY_ID} from \"../../graphql/investor/queries\"\r\nimport StringProcess from \"../../modules/stringProcess\";\r\nimport \"../../assets/scss/style.scss\";\r\nimport {localStorageCompareKey, mainURL} from \"../../constants\";\r\nimport urlProcess from \"../../modules/urlProcess\";\r\nimport Validator from \"../../modules/validator\";\r\nimport {COUNT_VIEW_PROJECT} from \"../../graphql/project/mutation\";\r\n\r\n \r\ninterface ProjectDetails {\r\n  url: { query: { slug: string }},\r\n  slug: string\r\n}\r\n\r\ninterface QueryProp { \r\n  query: { slug: string } \r\n}\r\n\r\n// @ts-ignore\r\nconst UserPage: NextPage<ProjectDetails> = (props: ProjectDetails) => {\r\n  let title = 'Xem chi tiết dự án';\r\n  let imageAvatar = 'https://static.nhadatmoi.net/default/home_default.jpg';\r\n  let metaTitle = 'metaTitle';\r\n  let metaDescription = 'metaDescription';\r\n  \r\n  let initStateInvestor = {\r\n    id: \"\",\r\n    name: \"\",\r\n    description: \"\",\r\n    slug: \"\",\r\n    email: \"\",\r\n    website: \"\",\r\n    image: \"\",\r\n    address: {\r\n      text: \"\",\r\n    },\r\n    phone: \"\",\r\n    mobile: \"\"\r\n  }\r\n\r\n  return (\r\n    <Layout\r\n      title={\"metaTitle\"}\r\n      description={\"metaDescription\"}\r\n      {...props}\r\n      image={\"https://www.w3schools.com/w3css/img_lights.jpg\"}\r\n      canonical={ mainURL + '/nguoi-dung/' + \"ra-hang-dot-cuoi-toa-nha-discovery-complex-so-302-cau-giay-gia-chi-tu-31trm2-1585625310485\"}\r\n      path={'nguoi-dung'}\r\n      dataCompare={{}}\r\n    >\r\n      <h1>Dai ca</h1>\r\n      {/* <DetailInvestor investor={investor} slug={\"ra-hang-dot-cuoi-toa-nha-discovery-complex-so-302-cau-giay-gia-chi-tu-31trm2-1585625310485\"} /> */}\r\n    </Layout>\r\n  );\r\n};\r\n\r\n// @ts-ignore\r\nUserPage.getInitialProps = async function(props: QueryProp) {\r\n  let projectSlug = props.query.slug;\r\n  // let projectDetail = await apolloClient.query({query: GET_PROJECT_BY_SLUG, variables: {\r\n  //     \"slug\": projectSlug\r\n  //   }}).then(response => {\r\n  //   return response;\r\n  // });\r\n  return {\r\n    projectDetail: {},\r\n    slug: projectSlug,\r\n  };\r\n};\r\n\r\nexport default UserPage;\r\n"]},"metadata":{},"sourceType":"module"}
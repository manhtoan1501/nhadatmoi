{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\manh nhan\\\\Desktop\\\\Nhadatmoi\\\\components\\\\User\\\\Index.tsx\";\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Header from \"./Header\";\nimport Paper from '@material-ui/core/Paper';\nimport { Tabs, Tab, Divider, colors } from '@material-ui/core';\nimport Page from \"./Page\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {},\n    rootTabs: {\n      flexGrow: 1\n    },\n    inner: {\n      width: theme.breakpoints.values.lg,\n      maxWidth: '100%',\n      margin: '0 auto',\n      padding: theme.spacing(3)\n    },\n    divider: {\n      backgroundColor: colors.grey[300]\n    },\n    content: {\n      marginTop: theme.spacing(3)\n    }\n  };\n});\n\nvar Index = function Index(props) {\n  var classes = useStyles();\n\n  var _React$useState = React.useState(\"ad\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      itemTab = _React$useState2[0],\n      setItemTab = _React$useState2[1]; // const [user , setUser] = React.useState();\n\n\n  var tabs = [{\n    value: 'info',\n    label: 'Thông tin'\n  }, {\n    value: 'ad',\n    label: 'Tin rao'\n  }, {\n    value: 'reviews',\n    label: \"Đánh giá\"\n  }];\n  useEffect(function () {// if(props.infoUser.id) {\n    //   apolloClient.query({query: GET_USER_BY_ID, variables: {\n    //     \"id\": props.infoUser.id,\n    //   }}).then(response => { \n    //     // setUser(response.data.user)\n    //   })\n    // }\n  }, []);\n\n  var handleTabsChange = function handleTabsChange(event, value) {\n    setItemTab(value);\n  };\n\n  return __jsx(Page, {\n    title: \"Profile\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }, __jsx(Header, {\n    infoUser: props.infoUser,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: classes.inner,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, __jsx(Paper, {\n    square: true,\n    className: classes.rootTabs,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, __jsx(Tabs, {\n    onChange: handleTabsChange,\n    scrollButtons: \"auto\",\n    indicatorColor: \"primary\",\n    textColor: \"primary\",\n    value: itemTab,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, tabs.map(function (tab) {\n    return __jsx(Tab, {\n      key: tab.value,\n      label: tab.label,\n      value: tab.value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    });\n  }))), __jsx(Divider, {\n    className: classes.divider,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: classes.content,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/manh nhan/Desktop/Nhadatmoi/components/User/Index.tsx"],"names":["React","useEffect","makeStyles","Header","Paper","Tabs","Tab","Divider","colors","Page","useStyles","theme","root","rootTabs","flexGrow","inner","width","breakpoints","values","lg","maxWidth","margin","padding","spacing","divider","backgroundColor","grey","content","marginTop","Index","props","classes","useState","itemTab","setItemTab","tabs","value","label","handleTabsChange","event","infoUser","map","tab"],"mappings":"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","sourcesContent":["import React, { FunctionComponent, useEffect} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles'\r\nimport Info from './Tabs/Info'\r\nimport Reviews from \"./Tabs/Reviews\"\r\nimport Ad from \"./Tabs/Ad\"\r\nimport Header from \"./Header\"\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {Tabs, Tab, Divider, colors} from '@material-ui/core';\r\nimport {apolloClient} from \"../../utils\";\r\nimport {GET_USER_BY_ID } from \"../../graphql/user/queries/index\"\r\nimport {GET_AD_SELL_LEASES} from \"../../graphql/ad_sell_leases/queries\"\r\nimport Page from \"./Page\";\r\n \r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  rootTabs: {\r\n    flexGrow: 1,\r\n  },\r\n  inner: {\r\n    width: theme.breakpoints.values.lg,\r\n    maxWidth: '100%',\r\n    margin: '0 auto',\r\n    padding: theme.spacing(3)\r\n  },\r\n  divider: {\r\n    backgroundColor: colors.grey[300]\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\ninterface ProfileProps {\r\n  comments: CommentsProps[]\r\n  infoUser: UserProps\r\n}\r\n\r\ninterface CommentsProps {\r\n  node: {\r\n    id: string,\r\n    ad_sell_lease_id: string,\r\n    content: string,\r\n    user_id: string,\r\n    media: string,\r\n    user: {\r\n      first_name: string,\r\n      last_name: string,\r\n      avatar: string,\r\n    }\r\n    like_number: string,\r\n    created_at: string,\r\n  },\r\n}\r\n\r\ninterface UserProps {\r\n  address: string\r\n  avatar: string\r\n  birthday: string\r\n  email: string\r\n  facebook: string\r\n  first_name: string\r\n  gender: string\r\n  google_id: string\r\n  intro: string\r\n  id: string\r\n  last_name: string\r\n  phone: string\r\n  mobile: string\r\n  skype: string\r\n  username: string\r\n  viber: string\r\n  website: string\r\n  zalo: string\r\n  created_at: string\r\n  updated_at: string\r\n}\r\n\r\nconst Index: FunctionComponent<ProfileProps> = (props: ProfileProps) => {\r\n  const classes = useStyles();\r\n  const [itemTab, setItemTab] = React.useState(\"ad\")\r\n  // const [user , setUser] = React.useState();\r\n  const tabs = [\r\n    {value: 'info', label: 'Thông tin'},\r\n    {value: 'ad', label: 'Tin rao'},\r\n    {value: 'reviews', label: \"Đánh giá\"}\r\n  ]\r\n\r\n  useEffect(() => {\r\n    // if(props.infoUser.id) {\r\n    //   apolloClient.query({query: GET_USER_BY_ID, variables: {\r\n    //     \"id\": props.infoUser.id,\r\n    //   }}).then(response => { \r\n    //     // setUser(response.data.user)\r\n    //   })\r\n    // }\r\n  }, [])\r\n\r\n  const handleTabsChange = (event: any, value: any) => {\r\n    setItemTab(value)\r\n  }\r\n  \r\n  return (\r\n    <Page title=\"Profile\">\r\n      <Header infoUser={props.infoUser}/>\r\n      <div className={classes.inner}>\r\n        <Paper square className={classes.rootTabs}>\r\n        <Tabs\r\n          onChange={handleTabsChange}\r\n          scrollButtons=\"auto\"\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          value={itemTab}\r\n        >\r\n          {tabs.map(tab => (\r\n            <Tab key={tab.value} label={tab.label} value={tab.value} />\r\n          ))}\r\n        </Tabs>\r\n        </Paper>\r\n        <Divider className={classes.divider}/>\r\n        <div className={classes.content}>\r\n          {/* {itemTab === 'info' && <Info infoUser={props.infoUser} />} */}\r\n          {/* {itemTab === 'ad' && <Ad userId={props.user.id} />} */}\r\n          {/* {itemTab === 'reviews' && <Reviews comments={props.comments} userId={props.user.id} />} */}\r\n        </div>\r\n      </div>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}
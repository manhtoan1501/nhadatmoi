{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manh nhan\\\\Desktop\\\\Nhadatmoi\\\\components\\\\Chat\\\\Index.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport Popper from '@material-ui/core/Popper';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { Grid, InputBase, Fade, Typography, Paper, CardHeader, Avatar, TextField, Divider, Tooltip, Input, IconButton } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport TagFacesIcon from '@material-ui/icons/TagFaces';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SendIcon from '@material-ui/icons/Send';\nimport axios from \"axios\";\nimport { apiBaseURL } from \"../../constants\";\nimport \"cross-fetch/polyfill\";\nconst client = axios.create({\n  baseURL: apiBaseURL,\n  timeout: 30000\n});\nimport moment from \"moment\";\nimport 'moment/locale/es';\nmoment.locale('vi');\nimport { dataEmoji, arrChat, giphyDefault, theme, useStyles, themeTextfieldAdmin, themeTextfieldUser, StyledBadge } from \"./constant\";\nimport { create } from 'jss';\nimport rtl from 'jss-rtl';\nimport { jssPreset } from '@material-ui/core/styles';\nconst jss = create({\n  plugins: [...jssPreset().plugins, rtl()]\n});\n\nvar navigator = require('web-midi-api');\n\nexport default function PositionedPopper() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [open, setOpen] = React.useState(false);\n  const [placement, setPlacement] = React.useState();\n  const [online, setOnline] = React.useState(true);\n  const [internet, setInternet] = React.useState(false);\n  const [texting, setTexting] = React.useState(false);\n  const [giphyData, setGiphyData] = React.useState();\n  const [openEmojiGiphy, setOpenEmojiGiphy] = React.useState(false);\n  const [indexEmoji, setIndexEmoji] = React.useState();\n  const [valueSearchGiphy, setValueSearchGiphy] = React.useState(\"\");\n  const [loading, setLoading] = React.useState(false);\n  const [completed, setCompleted] = React.useState(1);\n  let [valueInput, setValueInput] = React.useState(\"\");\n\n  if (navigator.onLine) {\n    setInternet(true);\n  }\n\n  const onCloseChat = () => {\n    setOpen(false);\n  };\n\n  const setOnKeyPress = event => {\n    setTexting(true);\n  };\n\n  const setOnBlur = event => {\n    setTexting(true);\n  };\n\n  const setOnKeyDown = event => {\n    if (event.keyCode == 13) {\n      arrChat.push({\n        message: event.target.value,\n        type: 'user',\n        image: {\n          url: \"\",\n          width: \"\",\n          height: \"\"\n        },\n        date: String(new Date().getTime())\n      });\n      setValueInput(\"\");\n    }\n  };\n\n  const senMesssage = () => {\n    arrChat.push({\n      message: valueInput,\n      type: 'user',\n      image: {\n        url: \"\",\n        width: \"\",\n        height: \"\"\n      },\n      date: String(new Date().getTime())\n    });\n    setValueInput(\"\");\n  };\n\n  const renderHeader = () => {\n    return __jsx(CardHeader, {\n      className: classes.hearder,\n      avatar: __jsx(StyledBadge, {\n        overlap: \"circle\",\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right'\n        },\n        variant: online ? \"dot\" : \"standard\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }\n      }, __jsx(Avatar, {\n        className: classes.sizeAvatarSmall,\n        alt: \"nhadatmoi.net\",\n        src: \"https://image.crisp.chat/avatar/operator/da8d4459-5ea3-4119-bca1-9170f49ee69c/240/?1585999578742&quot\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }\n      })),\n      title: \"Nguy\\u1EC5n Thanh Huy\\u1EC1n\",\n      action: __jsx(IconButton, {\n        color: \"inherit\",\n        \"aria-label\": \"settings\",\n        onClick: () => onCloseChat(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }\n      }, __jsx(CloseIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    });\n  };\n\n  const setChangeInput = value => {\n    setValueInput(value);\n  };\n\n  const searchGiphy = async event => {\n    setValueSearchGiphy(event.target.value);\n    let url = `https://api.giphy.com/v1/gifs/search?api_key=UgTMyvovmg74m8fPN6qYiB623nwS1IPc&q=${event.target.value}&limit=20&offset=0&rating=G&lang=vi`;\n    let getData = await axios.get(url, {}).then(function (response) {\n      setGiphyData(response.data.data);\n    });\n  };\n\n  let dataSearch = []; // image: {\n  //   url: 'https://media3.giphy.com/media/mlvseq9yvZhba/giphy.gif?cid=13984785c0b0951827d991e0244802c1aa7a37da3f7842a2&rid=giphy.gif',\n  //   height: '220',\n  //   width: \"180\"\n  // }\n  // let dataSearch = giphyDefault\n\n  if (Array.isArray(giphyData)) {\n    giphyData.map((item, index) => {\n      // dataSearch.push({ image:  item.images.original.url })\n      dataSearch.push({\n        image: {\n          url: item.images.fixed_width.url,\n          height: item.images.fixed_width.height,\n          width: item.images.fixed_width.width\n        }\n      });\n    });\n  }\n\n  console.log(\"dataSearch\", dataSearch);\n\n  const setItemGiphy = (index, name) => {\n    setOpenEmojiGiphy(!openEmojiGiphy);\n\n    if (name == \"giphyDefault\") {\n      arrChat.push({\n        message: \"\",\n        type: 'user',\n        image: {\n          url: giphyDefault[index].image.url,\n          width: giphyDefault[index].image.width,\n          height: giphyDefault[index].image.height\n        },\n        date: String(new Date().getTime())\n      });\n    } else if (name == \"dataSearch\") {\n      arrChat.push({\n        message: \"\",\n        type: 'user',\n        image: {\n          url: dataSearch[index].image.url,\n          width: dataSearch[index].image.width,\n          height: dataSearch[index].image.height\n        },\n        date: String(new Date().getTime())\n      });\n    }\n  };\n\n  const onClickEmoji = index => {\n    valueInput = valueInput + dataEmoji[index].native;\n    setValueInput(valueInput);\n  };\n\n  const renderEmojiGiphy = () => {\n    return __jsx(\"div\", {\n      className: classes.emojiGiphy,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      className: classes.marinButtonEmojiGiphy,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }\n    }, __jsx(\"button\", {\n      className: classes.buttonEmojiGiphy,\n      onClick: () => setViewEmoji(true),\n      style: {\n        backgroundColor: !viewEmoji ? \"#aaa\" : \"\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }\n    }, \" Bi\\u1EC3u t\\u01B0\\u1EE3ng\"), __jsx(\"button\", {\n      className: classes.buttonEmojiGiphy,\n      onClick: () => setViewEmoji(false),\n      style: {\n        backgroundColor: viewEmoji ? \"#aaa\" : \"\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }\n    }, \" \\u1EA2nh \\u0111\\u1ED9ng\")), !viewEmoji && __jsx(Paper, {\n      component: \"form\",\n      className: classes.rootPaper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 25\n      }\n    }, __jsx(IconButton, {\n      type: \"submit\",\n      className: classes.iconButton,\n      \"aria-label\": \"search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }\n    }, __jsx(SearchIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 15\n      }\n    })), __jsx(InputBase, {\n      onChange: e => searchGiphy(e),\n      className: classes.inputBaseGiphy,\n      placeholder: \"T\\xECm ki\\u1EBFm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 13\n      }\n    })), viewEmoji ? __jsx(\"div\", {\n      className: classes.overflowHeightEmoji,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 13\n      }\n    }, dataEmoji.map((item, index) => {\n      return __jsx(\"div\", {\n        onClick: () => onClickEmoji(index),\n        key: index,\n        className: classes.itemEmoji,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 17\n        }\n      }, item.native);\n    })) : __jsx(\"div\", {\n      className: classes.overflowHeightGiphy,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 13\n      }\n    }, valueSearchGiphy ? dataSearch.map((item, index) => {\n      return __jsx(\"div\", {\n        className: classes.dispalyImageGiphy,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 23\n        }\n      }, __jsx(\"img\", {\n        className: classes.imgListGiphy,\n        alt: \"giphy\",\n        src: item.image.url,\n        onClick: () => setItemGiphy(index, \"dataSearch\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 25\n        }\n      }));\n    }) : giphyDefault.map((item, index) => {\n      return __jsx(\"div\", {\n        className: classes.dispalyImageGiphy,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 23\n        }\n      }, __jsx(\"img\", {\n        className: classes.imgListGiphy,\n        alt: \"giphy\",\n        src: item.image.url,\n        onClick: () => setItemGiphy(index, \"giphyDefault\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 25\n        }\n      }));\n    })));\n  };\n\n  const renderContentChat = () => {\n    return __jsx(\"div\", {\n      className: classes.overflowHeightEmojiGiphy,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 7\n      }\n    }, __jsx(Typography, {\n      align: \"center\",\n      className: classes.textSizeNewDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }\n    }, moment().format('LLL')), __jsx(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }\n    }), arrChat.map((item, index) => {\n      let checkNewDate = false;\n      let setViewAvatar = false;\n      let oldDate = index > 0 ? moment(Number(arrChat[index - 1].date)).format('YYYY-MM-DD') : '';\n      let newDate = moment(Number(arrChat[index].date)).format('YYYY-MM-DD');\n\n      if (index > 0 && oldDate !== newDate) {\n        checkNewDate = true;\n      }\n\n      if (item.type === 'admin' && index > 0) {\n        if (index === arrChat.length || arrChat[index - 1].type != arrChat[index].type || oldDate !== newDate) {\n          setViewAvatar = true;\n        }\n      } else if (item.type === 'admin' && index === 0) {\n        setViewAvatar = true;\n      }\n\n      return __jsx(\"div\", {\n        key: index,\n        style: {\n          display: \"block\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }\n      }, checkNewDate && __jsx(Typography, {\n        align: \"center\",\n        className: classes.textSizeNewDate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 33\n        }\n      }, moment(Number(item.date)).format(\"LLL\"), \" \", __jsx(Divider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 59\n        }\n      })), item.type === 'admin' ? __jsx(ThemeProvider, {\n        theme: themeTextfieldAdmin,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 17\n        }\n      }, __jsx(\"div\", {\n        className: classes.viewAvatarChatContent,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 19\n        }\n      }, setViewAvatar ? __jsx(Avatar, {\n        className: classes.avatarAdminText,\n        alt: \"nhadatmoi.net\",\n        src: \"https://image.crisp.chat/avatar/operator/da8d4459-5ea3-4119-bca1-9170f49ee69c/240/?1585999578742&quot\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 25\n        }\n      }) : \"\"), __jsx(\"div\", {\n        className: classes.textFieldChatContent,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 19\n        }\n      }, item.image.url ? __jsx(Tooltip, {\n        title: moment(Number(item.date)).fromNow(),\n        placement: \"top\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 25\n        }\n      }, __jsx(\"div\", {\n        className: classes.viewContentImageGiphy,\n        style: {\n          width: `${item.image.width}px`,\n          height: `${item.image.height}px`\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 27\n        }\n      }, __jsx(\"img\", {\n        className: classes.imgGiphy,\n        alt: \"giphy\",\n        src: item.image.url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 29\n        }\n      }))) : __jsx(Tooltip, {\n        title: moment(Number(item.date)).fromNow(),\n        placement: \"top\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 25\n        }\n      }, __jsx(\"div\", {\n        className: classes.textAdminLeft,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 27\n        }\n      }, __jsx(TextField, {\n        fullWidth: item.message.length > 12 ? true : false,\n        label: \"\",\n        className: classes.textAdmin,\n        value: item.message.trim(),\n        margin: \"dense\",\n        id: \"outlined-basic\",\n        multiline: true,\n        InputProps: {\n          readOnly: true\n        },\n        variant: \"outlined\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 29\n        }\n      }))))) : __jsx(ThemeProvider, {\n        theme: themeTextfieldUser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 17\n        }\n      }, item.image.url ? __jsx(Tooltip, {\n        title: moment(Number(item.date)).fromNow(),\n        placement: \"top\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 23\n        }\n      }, __jsx(\"div\", {\n        className: classes.viewContentImageGiphy,\n        style: {\n          width: `${item.image.width}px`,\n          height: `${item.image.height}px`\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 25\n        }\n      }, __jsx(\"img\", {\n        className: classes.imgGiphy,\n        alt: \"giphy\",\n        src: item.image.url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 27\n        }\n      }))) : __jsx(Tooltip, {\n        title: moment(Number(item.date)).fromNow(),\n        placement: \"top\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 23\n        }\n      }, __jsx(\"div\", {\n        className: classes.textFieldUserChatContent,\n        style: {\n          textAlign: \"right\"\n        },\n        dir: `${item.message.length < 20 ? 'rtl' : \"\"}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 25\n        }\n      }, __jsx(TextField, {\n        fullWidth: item.message.length > 15 ? true : false,\n        label: \"\",\n        className: classes.textUser,\n        value: item.message.trim(),\n        margin: \"dense\",\n        id: \"outlined-basic\",\n        multiline: true,\n        InputProps: {\n          readOnly: true\n        },\n        variant: \"outlined\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 27\n        }\n      })))));\n    }), openEmojiGiphy && renderEmojiGiphy(), !internet ? __jsx(\"p\", {\n      className: classes.errInternet,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 13\n      }\n    }, __jsx(\"u\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 15\n      }\n    }, \"Kh\\xF4ng th\\u1EC3 g\\u1EEDi tin nh\\u1EAFn n\\xE0y. Ki\\u1EC3m tra k\\u1EBFt n\\u1ED1i internet v\\xE0 th\\u1EED l\\u1EA1i\")) : \"\", texting && __jsx(\"p\", {\n      className: classes.texting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 21\n      }\n    }, \"\\u0110ang nh\\u1EADp ...\"));\n  };\n\n  const [viewEmoji, setViewEmoji] = React.useState(false);\n\n  const onClickOpenEmojiGiphy = () => {\n    setOpenEmojiGiphy(!openEmojiGiphy);\n    setViewEmoji(true);\n  };\n\n  const apiBaseURL = \"https://graph.nhadatmoi.net\";\n  const googleLogin = `${apiBaseURL}/auth/google`;\n  const apiGraphQLURL = `${apiBaseURL}/graphql`;\n  const apiUpload = `${apiBaseURL}/upload_image`;\n\n  const api = (method, url, data) => client.request({\n    data: JSON.stringify(data),\n    headers: {\n      \"Accept\": \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    method,\n    url,\n    withCredentials: true\n  }).then(response => response.data);\n\n  const upLoadImage = files => {\n    const reader = new FileReader();\n    let file = files.target.files[0];\n    reader.readAsDataURL(file);\n\n    reader.onload = () => {\n      setLoading(true);\n      setCompleted(0);\n      api(\"POST\", `${apiUpload}`, {\n        base64image: reader.result,\n        fileName: new Date().getTime() + \"\" + file.name,\n        typeUpload: \"ad_sell_lease\"\n      }).then(function (res) {\n        console.log(\"res\", res); // getFile(res.location, file.name, file.size);\n\n        setLoading(false);\n      }).catch(function (err) {\n        alert('HTTP Error: ' + err.message);\n      });\n    };\n  };\n\n  const renderInput = () => {\n    return __jsx(Paper, {\n      component: \"form\",\n      className: classes.inputBase,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 7\n      }\n    }, __jsx(ThemeProvider, {\n      theme: theme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 9\n      }\n    }, __jsx(Input, {\n      fullWidth: true // disabled={internet}\n      ,\n      margin: \"dense\",\n      id: \"outlined-basic\",\n      autoFocus: true // value={valueInput}\n      ,\n      value: valueInput,\n      multiline: true,\n      onChange: e => setChangeInput(e.target.value),\n      onKeyPress: e => setOnKeyPress(e),\n      onBlur: e => setOnBlur(e),\n      onKeyDown: e => setOnKeyDown(e),\n      placeholder: \"Nh\\u1EADp tin nh\\u1EAFn ...\",\n      autoComplete: \"false\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 11\n      }\n    }), openEmojiGiphy ? __jsx(Tooltip, {\n      title: \"Ch\\xE8n bi\\u1EC3u t\\u01B0\\u1EE3ng\",\n      placement: \"top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 15\n      }\n    }, __jsx(ExpandMoreIcon, {\n      className: classes.sizeIcon,\n      onClick: onClickOpenEmojiGiphy,\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 17\n      }\n    })) : __jsx(Tooltip, {\n      title: \"Ch\\xE8n bi\\u1EC3u t\\u01B0\\u1EE3ng\",\n      placement: \"top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 15\n      }\n    }, __jsx(TagFacesIcon, {\n      className: classes.sizeIcon,\n      onClick: onClickOpenEmojiGiphy,\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 17\n      }\n    })), valueInput ? __jsx(Tooltip, {\n      title: \"G\\u1EEDi tin nh\\u1EAFn\",\n      placement: \"top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 15\n      }\n    }, __jsx(SendIcon, {\n      onClick: senMesssage,\n      className: classes.sizeIcon,\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 17\n      }\n    })) : __jsx(Tooltip, {\n      title: \"Th\\xEAm t\\u1EADp tin\",\n      placement: \"top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 15\n      }\n    }, __jsx(\"div\", {\n      className: classes.inputWrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 17\n      }\n    }, __jsx(AddCircleOutlineIcon, {\n      className: classes.sizeIcon,\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 19\n      }\n    }), __jsx(\"input\", {\n      type: \"file\",\n      className: classes.fileInput,\n      onChange: upLoadImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 19\n      }\n    })))));\n  };\n\n  const viewChat = () => {\n    return __jsx(Popper, {\n      open: open,\n      anchorEl: anchorEl,\n      placement: placement,\n      transition: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 7\n      }\n    }, ({\n      TransitionProps\n    }) => __jsx(Fade, _extends({}, TransitionProps, {\n      timeout: 300,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 11\n      }\n    }), __jsx(Paper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: classes.positionSizeViewChat,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 15\n      }\n    }, renderHeader(), renderContentChat(), renderInput()))));\n  };\n\n  const handleClick = newPlacement => {\n    setOpen(true);\n    setPlacement(newPlacement);\n  };\n\n  const renderAvatar = () => {\n    return __jsx(\"div\", {\n      className: classes.positionAvatar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 7\n      }\n    }, __jsx(StyledBadge, {\n      overlap: \"circle\",\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'right'\n      },\n      variant: online ? \"dot\" : \"standard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 9\n      }\n    }, __jsx(Avatar, {\n      onClick: () => handleClick(\"top-start\"),\n      className: classes.large,\n      alt: \"nhadatmoi.net\",\n      src: \"https://image.crisp.chat/avatar/operator/da8d4459-5ea3-4119-bca1-9170f49ee69c/240/?1585999578742&quot\" // src=\"https://file.vforum.vn/hinh/2018/03/hinh-mau-trang-tinh-tron-hinh-nen-anh-dai-dien-anh-bia-toan-mau-trang1.png\"\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 11\n      }\n    })));\n  };\n\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 5\n    }\n  }, viewChat(), __jsx(Grid, {\n    container: true,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 9\n    }\n  }, !open && renderAvatar())));\n}","map":{"version":3,"sources":["C:/Users/manh nhan/Desktop/Nhadatmoi/components/Chat/Index.tsx"],"names":["React","Popper","ThemeProvider","Grid","InputBase","Fade","Typography","Paper","CardHeader","Avatar","TextField","Divider","Tooltip","Input","IconButton","SearchIcon","AddCircleOutlineIcon","TagFacesIcon","ExpandMoreIcon","CloseIcon","SendIcon","axios","apiBaseURL","client","create","baseURL","timeout","moment","locale","dataEmoji","arrChat","giphyDefault","theme","useStyles","themeTextfieldAdmin","themeTextfieldUser","StyledBadge","rtl","jssPreset","jss","plugins","navigator","require","PositionedPopper","classes","anchorEl","setAnchorEl","useState","open","setOpen","placement","setPlacement","online","setOnline","internet","setInternet","texting","setTexting","giphyData","setGiphyData","openEmojiGiphy","setOpenEmojiGiphy","indexEmoji","setIndexEmoji","valueSearchGiphy","setValueSearchGiphy","loading","setLoading","completed","setCompleted","valueInput","setValueInput","onLine","onCloseChat","setOnKeyPress","event","setOnBlur","setOnKeyDown","keyCode","push","message","target","value","type","image","url","width","height","date","String","Date","getTime","senMesssage","renderHeader","hearder","vertical","horizontal","sizeAvatarSmall","setChangeInput","searchGiphy","getData","get","then","response","data","dataSearch","Array","isArray","map","item","index","images","fixed_width","console","log","setItemGiphy","name","onClickEmoji","native","renderEmojiGiphy","emojiGiphy","marinButtonEmojiGiphy","buttonEmojiGiphy","setViewEmoji","backgroundColor","viewEmoji","rootPaper","iconButton","e","inputBaseGiphy","overflowHeightEmoji","itemEmoji","overflowHeightGiphy","dispalyImageGiphy","imgListGiphy","renderContentChat","overflowHeightEmojiGiphy","textSizeNewDate","format","checkNewDate","setViewAvatar","oldDate","Number","newDate","length","display","viewAvatarChatContent","avatarAdminText","textFieldChatContent","fromNow","viewContentImageGiphy","imgGiphy","textAdminLeft","textAdmin","trim","readOnly","textFieldUserChatContent","textAlign","textUser","errInternet","onClickOpenEmojiGiphy","googleLogin","apiGraphQLURL","apiUpload","api","method","request","JSON","stringify","headers","withCredentials","upLoadImage","files","reader","FileReader","file","readAsDataURL","onload","base64image","result","fileName","typeUpload","res","catch","err","alert","renderInput","inputBase","sizeIcon","inputWrapper","fileInput","viewChat","TransitionProps","positionSizeViewChat","handleClick","newPlacement","renderAvatar","positionAvatar","large","root"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Popper, { PopperPlacementType } from '@material-ui/core/Popper';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport { \r\n  Grid, Button, InputBase, Fade,\r\n  Typography, Paper, Card, CardHeader, CardContent,\r\n  CardActionArea, CardMedia, Avatar, TextField,\r\n  Badge, Divider, Tooltip, Input, Chip, IconButton\r\n} from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport TagFacesIcon from '@material-ui/icons/TagFaces';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport axios, {Method} from \"axios\";\r\nimport {apiBaseURL, apiGraphQLURL} from \"../../constants\";\r\nimport \"cross-fetch/polyfill\";\r\nimport ApolloClient from \"apollo-boost\";\r\nconst client = axios.create({ baseURL: apiBaseURL, timeout: 30000 });\r\nimport moment from \"moment\"\r\nimport 'moment/locale/es'   \r\nmoment.locale('vi')\r\nimport { Theme, makeStyles, withStyles, createStyles } from '@material-ui/core/styles';\r\nimport { \r\n  dataEmoji,  arrChat, giphyDefault, theme, useStyles,\r\n  themeTextfieldAdmin, themeTextfieldUser, StyledBadge\r\n} from \"./constant\"\r\nimport { create } from 'jss';\r\nimport rtl from 'jss-rtl';\r\nimport { StylesProvider, jssPreset } from '@material-ui/core/styles';\r\nconst jss = create({ plugins: [...jssPreset().plugins, rtl()] });\r\nvar navigator = require('web-midi-api');\r\n\r\nexport default function PositionedPopper() {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(null);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [placement, setPlacement] = React.useState<PopperPlacementType>();\r\n  const [online, setOnline] = React.useState<boolean>(true)\r\n  const [internet, setInternet] = React.useState<boolean>(false)\r\n  const [texting, setTexting] = React.useState<boolean>(false)\r\n  const [giphyData, setGiphyData] = React.useState<any>()\r\n  const [openEmojiGiphy, setOpenEmojiGiphy] = React.useState<boolean>(false)\r\n  const [indexEmoji, setIndexEmoji] = React.useState<number>()\r\n  const [valueSearchGiphy, setValueSearchGiphy] = React.useState(\"\")\r\n  const [loading, setLoading] = React.useState(false)\r\n  const [completed, setCompleted] = React.useState(1)\r\n  let   [valueInput, setValueInput] = React.useState(\"\")\r\n  if (navigator.onLine) {\r\n    setInternet(true)\r\n  }\r\n  const onCloseChat = () => {\r\n    setOpen(false)\r\n  }\r\n  const setOnKeyPress = (event: any) => {\r\n    setTexting(true)\r\n  }\r\n  const setOnBlur = (event: any) => {\r\n    setTexting(true)\r\n  }\r\n  const setOnKeyDown = (event: any) => {\r\n    if(event.keyCode == 13){\r\n      arrChat.push({ message: event.target.value, type: 'user', image: { url: \"\", width: \"\", height: \"\" }, date: String(new Date().getTime()) })\r\n      setValueInput(\"\")\r\n    }\r\n  }\r\n  const senMesssage = () => {\r\n    arrChat.push({ message: valueInput, type: 'user', image: { url: \"\", width: \"\", height: \"\" }, date: String(new Date().getTime()) })\r\n    setValueInput(\"\")\r\n  }\r\n\r\n  \r\n\r\n  const renderHeader = () => {\r\n    return (\r\n      <CardHeader\r\n        className={classes.hearder}\r\n        avatar={\r\n          <StyledBadge\r\n            overlap=\"circle\"\r\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n            variant= { online ? \"dot\" : \"standard\" }\r\n          >\r\n            <Avatar \r\n              className={classes.sizeAvatarSmall} \r\n              alt=\"nhadatmoi.net\" \r\n              src=\"https://image.crisp.chat/avatar/operator/da8d4459-5ea3-4119-bca1-9170f49ee69c/240/?1585999578742&quot\"\r\n            />\r\n          </StyledBadge>\r\n        }\r\n        title=\"Nguyễn Thanh Huyền\"\r\n        action={\r\n          <IconButton color='inherit' aria-label=\"settings\" onClick={() => onCloseChat()} >\r\n            <CloseIcon/>\r\n          </IconButton>\r\n        }\r\n      />\r\n    )\r\n  }\r\n  const setChangeInput = (value: any) => {\r\n    setValueInput(value)\r\n  }\r\n  const searchGiphy = async (event: any)=>  { \r\n    setValueSearchGiphy(event.target.value)\r\n    let url = `https://api.giphy.com/v1/gifs/search?api_key=UgTMyvovmg74m8fPN6qYiB623nwS1IPc&q=${event.target.value}&limit=20&offset=0&rating=G&lang=vi`\r\n    let getData = await axios.get(url, {})\r\n      .then(function (response) {\r\n        setGiphyData(response.data.data)\r\n      })\r\n  }\r\n  let dataSearch: any = []\r\n  // image: {\r\n  //   url: 'https://media3.giphy.com/media/mlvseq9yvZhba/giphy.gif?cid=13984785c0b0951827d991e0244802c1aa7a37da3f7842a2&rid=giphy.gif',\r\n  //   height: '220',\r\n  //   width: \"180\"\r\n  // }\r\n  // let dataSearch = giphyDefault\r\n  if(Array.isArray(giphyData)){\r\n    giphyData.map((item: any, index: number) => {\r\n      // dataSearch.push({ image:  item.images.original.url })\r\n      dataSearch.push({ \r\n        image: {\r\n          url: item.images.fixed_width.url,\r\n          height: item.images.fixed_width.height,\r\n          width: item.images.fixed_width.width,\r\n        }})\r\n    })\r\n  }\r\n  console.log(\"dataSearch\", dataSearch)\r\n\r\n  const setItemGiphy = (index: number, name: string) => {\r\n    setOpenEmojiGiphy(!openEmojiGiphy)\r\n    if(name == \"giphyDefault\") {\r\n      arrChat.push({ \r\n        message: \"\", \r\n        type: 'user', \r\n        image: {\r\n          url: giphyDefault[index].image.url,\r\n          width: giphyDefault[index].image.width,\r\n          height: giphyDefault[index].image.height,\r\n        },\r\n        date: String(new Date().getTime()) \r\n      })\r\n    } else if ( name == \"dataSearch\") {\r\n      arrChat.push({ \r\n        message: \"\", \r\n        type: 'user', \r\n        image: {\r\n          url: dataSearch[index].image.url,\r\n          width: dataSearch[index].image.width,\r\n          height: dataSearch[index].image.height,\r\n        },\r\n        date: String(new Date().getTime())\r\n      })\r\n    }\r\n  }\r\n\r\n  const onClickEmoji = (index: number) => {\r\n    valueInput = valueInput +  dataEmoji[index].native\r\n    setValueInput(valueInput)\r\n  }\r\n\r\n  const renderEmojiGiphy = () => {\r\n    return (\r\n      <div className={classes.emojiGiphy}>\r\n        <div className={classes.marinButtonEmojiGiphy}>\r\n          <button \r\n            className={classes.buttonEmojiGiphy} \r\n            onClick={() => setViewEmoji(true)} \r\n            style={{ backgroundColor: !viewEmoji ? \"#aaa\" : \"\" }}\r\n          > Biểu tượng</button>\r\n          <button \r\n            className={classes.buttonEmojiGiphy} \r\n            onClick={() => setViewEmoji(false)} \r\n            style={{ backgroundColor: viewEmoji ? \"#aaa\" : \"\" }}\r\n          > Ảnh động</button>\r\n        </div>\r\n        { !viewEmoji && <Paper component=\"form\" className={classes.rootPaper}>\r\n            <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\">\r\n              <SearchIcon />\r\n            </IconButton>\r\n            <InputBase\r\n              onChange={(e) => searchGiphy(e)}\r\n              className={classes.inputBaseGiphy}\r\n              placeholder=\"Tìm kiếm\"\r\n            />\r\n          </Paper>}\r\n        { viewEmoji \r\n          ? <div className={classes.overflowHeightEmoji}>\r\n            {dataEmoji.map((item: any, index: number) => {\r\n              return (\r\n                <div \r\n                  onClick={() => onClickEmoji(index)} \r\n                  key={index} className={classes.itemEmoji}\r\n                >{item.native}</div>\r\n              )\r\n            })}\r\n          </div>\r\n          : <div className={classes.overflowHeightGiphy}>\r\n              {valueSearchGiphy \r\n                ? dataSearch.map((item: any, index: number) => {\r\n                    return (\r\n                      <div className={classes.dispalyImageGiphy} >\r\n                        <img \r\n                          className={classes.imgListGiphy} \r\n                          alt=\"giphy\" \r\n                          src={item.image.url} \r\n                          onClick={() => setItemGiphy(index, \"dataSearch\")} \r\n                        />\r\n                      </div>\r\n                    )\r\n                  })\r\n                : giphyDefault.map((item: any, index: number) => {\r\n                    return (\r\n                      <div className={classes.dispalyImageGiphy} >\r\n                        <img \r\n                          className={classes.imgListGiphy} \r\n                          alt=\"giphy\" \r\n                          src={item.image.url} \r\n                          onClick={() => setItemGiphy(index, \"giphyDefault\")} \r\n                        />\r\n                      </div>\r\n                    )\r\n                  })\r\n              }\r\n            </div>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n\r\n  \r\n  const renderContentChat = () => {\r\n    return (\r\n      <div className={classes.overflowHeightEmojiGiphy}>\r\n        <Typography align=\"center\" className={classes.textSizeNewDate}>\r\n          {moment().format('LLL')}\r\n        </Typography>\r\n        <Divider />\r\n        {arrChat.map((item: any, index: number) => {\r\n          let checkNewDate = false\r\n          let setViewAvatar = false\r\n          let oldDate = index > 0 ? moment(Number(arrChat[index - 1].date)).format('YYYY-MM-DD') : ''\r\n          let newDate = moment(Number(arrChat[index].date)).format('YYYY-MM-DD')\r\n          if(index > 0 && (oldDate !== newDate)) { \r\n            checkNewDate = true\r\n          }\r\n          \r\n          if(item.type === 'admin' && index > 0) {\r\n            if((index === arrChat.length) || (arrChat[index - 1].type != arrChat[index].type) || (oldDate !== newDate)){\r\n              setViewAvatar = true\r\n            }\r\n          } else if(item.type === 'admin' && index === 0 ) {\r\n            setViewAvatar = true\r\n          }\r\n          return (\r\n            <div key={index} style={{ display: \"block\" }}>\r\n              { checkNewDate && <Typography align=\"center\" className={classes.textSizeNewDate}>\r\n                {moment(Number(item.date)).format(\"LLL\")} <Divider /></Typography>}\r\n              { item.type === 'admin' \r\n              ? <ThemeProvider theme={themeTextfieldAdmin}>\r\n                  <div className={classes.viewAvatarChatContent}>\r\n                    {\r\n                      setViewAvatar \r\n                      ? <Avatar \r\n                          className={classes.avatarAdminText} \r\n                          alt=\"nhadatmoi.net\" \r\n                          src=\"https://image.crisp.chat/avatar/operator/da8d4459-5ea3-4119-bca1-9170f49ee69c/240/?1585999578742&quot\"\r\n                        />\r\n                      : \"\"\r\n                    }\r\n                  </div>\r\n                  <div className={classes.textFieldChatContent}>\r\n                    {\r\n                      item.image.url \r\n                      ? <Tooltip title={moment(Number(item.date)).fromNow()} placement=\"top\">\r\n                          <div className={classes.viewContentImageGiphy} style={{ width: `${item.image.width}px`, height: `${item.image.height}px`}} >\r\n                            <img \r\n                              className={classes.imgGiphy} \r\n                              alt=\"giphy\" \r\n                              src={item.image.url} \r\n                            />\r\n                          </div>\r\n                        </Tooltip>\r\n                      : <Tooltip title={moment(Number(item.date)).fromNow()} placement=\"top\">\r\n                          <div className={classes.textAdminLeft}>\r\n                            <TextField \r\n                              fullWidth={item.message.length > 12 ? true : false}\r\n                              label=\"\"\r\n                              className={classes.textAdmin}\r\n                              value={item.message.trim()}\r\n                              margin=\"dense\"\r\n                              id=\"outlined-basic\" \r\n                              multiline={true}\r\n                              InputProps={{\r\n                                readOnly: true\r\n                              }}\r\n                              variant=\"outlined\" \r\n                            />\r\n                          </div>\r\n                        </Tooltip>\r\n                    }\r\n                  </div>\r\n                </ThemeProvider>\r\n              : <ThemeProvider theme={themeTextfieldUser}>\r\n                  {\r\n                    item.image.url\r\n                    ? <Tooltip title={moment(Number(item.date)).fromNow()} placement=\"top\">\r\n                        <div className={classes.viewContentImageGiphy} style={{ width: `${item.image.width}px`, height: `${item.image.height}px`}} >\r\n                          <img \r\n                            className={classes.imgGiphy} \r\n                            alt=\"giphy\" \r\n                            src={item.image.url} \r\n                          />\r\n                        </div>\r\n                      </Tooltip>\r\n                    : <Tooltip title={moment(Number(item.date)).fromNow()} placement=\"top\">\r\n                        <div \r\n                          className={classes.textFieldUserChatContent}\r\n                          style={{ textAlign: \"right\" }}\r\n                          dir={`${item.message.length < 20 ? 'rtl' : \"\"}`}\r\n                        >\r\n                          <TextField \r\n                            fullWidth={item.message.length > 15 ? true : false}\r\n                            label=\"\"\r\n                            className={classes.textUser}\r\n                            value={item.message.trim()}\r\n                            margin=\"dense\"\r\n                            id=\"outlined-basic\" \r\n                            multiline={true}\r\n                            InputProps={{\r\n                              readOnly: true\r\n                            }}\r\n                            variant=\"outlined\" \r\n                          />\r\n                        </div>\r\n                      </Tooltip>\r\n                  }\r\n                </ThemeProvider>\r\n              }\r\n            </div>\r\n          )\r\n        })}\r\n        {openEmojiGiphy && renderEmojiGiphy()}\r\n        {!internet \r\n          ? <p className={classes.errInternet}>\r\n              <u>Không thể gửi tin nhắn này. Kiểm tra kết nối internet và thử lại</u>\r\n            </p>\r\n          : \"\"\r\n        }\r\n        {texting && <p className={classes.texting}>Đang nhập ...</p>}\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  const [viewEmoji, setViewEmoji] = React.useState(false)\r\n  const onClickOpenEmojiGiphy = () => {\r\n    setOpenEmojiGiphy(!openEmojiGiphy) \r\n    setViewEmoji(true)\r\n  }\r\n\r\n  const apiBaseURL = \"https://graph.nhadatmoi.net\";\r\n  const googleLogin = `${apiBaseURL}/auth/google`;\r\n  const apiGraphQLURL = `${apiBaseURL}/graphql`;\r\n  const apiUpload = `${apiBaseURL}/upload_image`;\r\n\r\n  const api = (method: Method, url: string, data?: any) => client\r\n    .request(\r\n    { data: JSON.stringify(data), \r\n      headers: { \"Accept\": \"application/json\",\"Content-Type\": \"application/json\",\r\n    }, method, url,  withCredentials: true,\r\n  }).then((response: any) => response.data);\r\n\r\n \r\n  const upLoadImage = (files: any) => {\r\n    const reader = new FileReader;\r\n    let file = files.target.files[0]\r\n    reader.readAsDataURL(file)\r\n    reader.onload = () => {\r\n      setLoading(true);\r\n      setCompleted(0);\r\n      api(\"POST\", `${apiUpload}`, { \r\n        base64image: reader.result, \r\n        fileName: (new Date()).getTime() + \"\" + file.name,\r\n        typeUpload: \"ad_sell_lease\",\r\n      })\r\n      .then(function (res) {\r\n        console.log(\"res\", res)\r\n        // getFile(res.location, file.name, file.size);\r\n        setLoading(false);\r\n      })\r\n      .catch(function (err) {\r\n        alert('HTTP Error: ' + err.message);\r\n      });\r\n    };\r\n  }\r\n \r\n  const renderInput = () => {\r\n    return (\r\n      <Paper component=\"form\" className={classes.inputBase}>\r\n        <ThemeProvider theme={theme}>\r\n          <Input \r\n            fullWidth\r\n            // disabled={internet}\r\n            margin=\"dense\"\r\n            id=\"outlined-basic\" \r\n            autoFocus={true}\r\n            // value={valueInput}\r\n            value={valueInput}\r\n            multiline={true}\r\n            onChange={(e) => setChangeInput(e.target.value)}\r\n            onKeyPress={(e) => setOnKeyPress(e)}\r\n            onBlur={(e) => setOnBlur(e)}\r\n            onKeyDown={(e) => setOnKeyDown(e)}\r\n            placeholder=\"Nhập tin nhắn ...\"\r\n            autoComplete=\"false\"\r\n          />\r\n          { openEmojiGiphy \r\n            ? <Tooltip title=\"Chèn biểu tượng\" placement=\"top\"> \r\n                <ExpandMoreIcon \r\n                  className={classes.sizeIcon}\r\n                  onClick={onClickOpenEmojiGiphy}\r\n                  color=\"primary\"\r\n                />\r\n              </Tooltip> \r\n            : <Tooltip title=\"Chèn biểu tượng\" placement=\"top\"> \r\n                <TagFacesIcon \r\n                  className={classes.sizeIcon}\r\n                  onClick={onClickOpenEmojiGiphy}\r\n                  color=\"primary\"\r\n                />\r\n              </Tooltip>\r\n          }\r\n          { valueInput\r\n            ? <Tooltip title=\"Gửi tin nhắn\" placement=\"top\">\r\n                <SendIcon \r\n                  onClick={senMesssage} \r\n                  className={classes.sizeIcon} color=\"primary\"\r\n                />\r\n              </Tooltip>\r\n            : <Tooltip title=\"Thêm tập tin\" placement=\"top\">\r\n                <div className={classes.inputWrapper}> \r\n                  <AddCircleOutlineIcon \r\n                    className={classes.sizeIcon} \r\n                    color=\"primary\"\r\n                  /> \r\n                  <input type=\"file\" className={classes.fileInput}  onChange={upLoadImage} /> \r\n                </div>\r\n              </Tooltip>\r\n          }\r\n        </ThemeProvider>\r\n      </Paper>\r\n    )\r\n  }\r\n \r\n  const viewChat = () => {\r\n    return (\r\n      <Popper \r\n        open={open} \r\n        anchorEl={anchorEl}\r\n        placement={placement} \r\n        transition\r\n      >\r\n        {({ TransitionProps }) => (\r\n          <Fade {...TransitionProps} timeout={300}>\r\n            <Paper>\r\n              <div className={classes.positionSizeViewChat} >\r\n                {renderHeader()}\r\n                {renderContentChat()}\r\n                {renderInput()}\r\n              </div>\r\n            </Paper>\r\n          </Fade>\r\n        )}\r\n      </Popper>\r\n    )\r\n  }\r\n\r\n  const handleClick = (newPlacement: PopperPlacementType) => {\r\n    setOpen(true)\r\n    setPlacement(newPlacement);\r\n  }\r\n\r\n  const renderAvatar = () => {\r\n    return (\r\n      <div className={classes.positionAvatar}>\r\n        <StyledBadge\r\n          overlap=\"circle\"\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'right',\r\n          }}\r\n          variant= { online ? \"dot\" : \"standard\" }\r\n        >\r\n          <Avatar \r\n            onClick={() => handleClick(\"top-start\")}\r\n            className={classes.large} \r\n            alt=\"nhadatmoi.net\" \r\n            src=\"https://image.crisp.chat/avatar/operator/da8d4459-5ea3-4119-bca1-9170f49ee69c/240/?1585999578742&quot\"\r\n            // src=\"https://file.vforum.vn/hinh/2018/03/hinh-mau-trang-tinh-tron-hinh-nen-anh-dai-dien-anh-bia-toan-mau-trang1.png\"\r\n          />\r\n        </StyledBadge>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {viewChat()}\r\n      <Grid container justify=\"center\">\r\n        <Grid item>\r\n          { !open && renderAvatar()}\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
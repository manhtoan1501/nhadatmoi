{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\manh nhan\\\\Desktop\\\\Nhadatmoi\\\\pages\\\\nguoi-dung\\\\[id].tsx\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Layout from '../../components/Layout/Layout';\nimport { apolloClient } from \"../../utils\";\nimport { GET_AD_SELL_LEASE_COMMENTS } from \"../../graphql/reviews/queries\";\nimport { GET_USER_BY_ID } from \"../../graphql/user/queries/index\";\nimport \"../../assets/scss/style.scss\";\nimport { mainURL } from \"../../constants\";\n\n// @ts-ignore\nvar UserPage = function UserPage(props) {\n  var metaTitle = \"Chuy\\xEAn vi\\xEAn t\\u01B0 v\\u1EA5n \".concat(props.user.first_name, \" \").concat(props.user.last_name);\n  return __jsx(Layout, _extends({\n    title: metaTitle,\n    description: \"metaDescription\"\n  }, props, {\n    image: \"https://vcdn-giaitri.vnecdn.net/2020/01/23/C-OiQ-UUIAIycqR-1-1579796735_680x0.jpg\",\n    canonical: mainURL + '/nguoi-dung/' + props.userId,\n    path: 'nguoi-dung',\n    dataCompare: {},\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }));\n}; // @ts-ignore\n\n\nUserPage.getInitialProps = function _callee(props) {\n  var userId, dataFilter, comments, user;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          userId = props.query.id;\n          dataFilter = JSON.stringify({\n            id: userId\n          });\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(apolloClient.query({\n            query: GET_AD_SELL_LEASE_COMMENTS,\n            variables: {\n              \"page\": 1,\n              \"limit\": 15,\n              \"filter\": dataFilter\n            }\n          }).then(function (response) {\n            return response;\n          }));\n\n        case 4:\n          comments = _context.sent;\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(apolloClient.query({\n            query: GET_USER_BY_ID,\n            variables: {\n              \"id\": userId\n            }\n          }).then(function (response) {\n            return response.data.user;\n          }));\n\n        case 7:\n          user = _context.sent;\n          return _context.abrupt(\"return\", {\n            comments: comments,\n            userId: userId,\n            user: user\n          });\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default UserPage;","map":{"version":3,"sources":["C:/Users/manh nhan/Desktop/Nhadatmoi/pages/nguoi-dung/[id].tsx"],"names":["React","Layout","apolloClient","GET_AD_SELL_LEASE_COMMENTS","GET_USER_BY_ID","mainURL","UserPage","props","metaTitle","user","first_name","last_name","userId","getInitialProps","query","id","dataFilter","JSON","stringify","variables","then","response","comments","data"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,SAAQC,YAAR,QAA2B,aAA3B;AACA,SAAQC,0BAAR,QAAoE,+BAApE;AACA,SAAQC,cAAR,QAA8B,kCAA9B;AACA,OAAO,8BAAP;AACA,SAASC,OAAT,QAAwB,iBAAxB;;AAyEA;AACA,IAAMC,QAAkC,GAAG,SAArCA,QAAqC,CAACC,KAAD,EAA2B;AACpE,MAAIC,SAAS,gDAAyBD,KAAK,CAACE,IAAN,CAAWC,UAApC,cAAmDH,KAAK,CAACE,IAAN,CAAWE,SAA9D,CAAb;AACA,SACE,MAAC,MAAD;AACE,IAAA,KAAK,EAAEH,SADT;AAEE,IAAA,WAAW,EAAE;AAFf,KAGMD,KAHN;AAIE,IAAA,KAAK,EAAE,mFAJT;AAKE,IAAA,SAAS,EAAGF,OAAO,GAAG,cAAV,GAA2BE,KAAK,CAACK,MAL/C;AAME,IAAA,IAAI,EAAE,YANR;AAOE,IAAA,WAAW,EAAE,EAPf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAgBD,CAlBD,C,CAoBA;;;AACAN,QAAQ,CAACO,eAAT,GAA2B,iBAAeN,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACrBK,UAAAA,MADqB,GACZL,KAAK,CAACO,KAAN,CAAYC,EADA;AAErBC,UAAAA,UAFqB,GAERC,IAAI,CAACC,SAAL,CAAe;AAAEH,YAAAA,EAAE,EAAEH;AAAN,WAAf,CAFQ;AAAA;AAAA,2CAGJV,YAAY,CAACY,KAAb,CAAmB;AAACA,YAAAA,KAAK,EAAEX,0BAAR;AAAoCgB,YAAAA,SAAS,EAAE;AACnF,sBAAQ,CAD2E;AAEnF,uBAAS,EAF0E;AAGnF,wBAAUH;AAHyE;AAA/C,WAAnB,EAIfI,IAJe,CAIV,UAAAC,QAAQ,EAAI;AACrB,mBAAOA,QAAP;AACD,WANoB,CAHI;;AAAA;AAGrBC,UAAAA,QAHqB;AAAA;AAAA,2CAmBRpB,YAAY,CAACY,KAAb,CAAmB;AAACA,YAAAA,KAAK,EAAEV,cAAR;AAAwBe,YAAAA,SAAS,EAAE;AACrE,oBAAMP;AAD+D;AAAnC,WAAnB,EAEXQ,IAFW,CAEN,UAAAC,QAAQ,EAAI;AACnB,mBAAOA,QAAQ,CAACE,IAAT,CAAcd,IAArB;AACH,WAJgB,CAnBQ;;AAAA;AAmBrBA,UAAAA,IAnBqB;AAAA,2CAyBlB;AACLa,YAAAA,QAAQ,EAAEA,QADL;AAELV,YAAAA,MAAM,EAAEA,MAFH;AAGLH,YAAAA,IAAI,EAAEA;AAHD,WAzBkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA3B;;AAgCA,eAAeH,QAAf","sourcesContent":["import React from 'react';\r\nimport {NextPage} from \"next\";\r\nimport Layout from '../../components/Layout/Layout';\r\nimport {apolloClient} from \"../../utils\";\r\nimport {GET_AD_SELL_LEASE_COMMENTS, GET_AD_SELL_LEASE_RATINGS} from \"../../graphql/reviews/queries\";\r\nimport {GET_USER_BY_ID } from \"../../graphql/user/queries/index\"\r\nimport \"../../assets/scss/style.scss\";\r\nimport { mainURL } from \"../../constants\";\r\nimport User from \"../../components/User/Index\"\r\n \r\ninterface ProjectDetails {\r\n  url: { query: { id: string }},\r\n  comments: { data: { adSellLeaseComments: { edges: CommentsProp[]}} },\r\n  // ratings: { data: { adSellLeaseRatings: { edges: RatingsProp[]}} },\r\n  userId: string,\r\n  user: UserProps\r\n}\r\n\r\ninterface QueryProp { \r\n  query: { id: string } \r\n}\r\n\r\ninterface UserProps {\r\n  address: string\r\n  avatar: string\r\n  birthday: string\r\n  email: string\r\n  facebook: string\r\n  first_name: string\r\n  gender: string\r\n  google_id: string\r\n  intro: string\r\n  id: string\r\n  last_name: string\r\n  phone: string\r\n  mobile: string\r\n  skype: string\r\n  username: string\r\n  viber: string\r\n  website: string\r\n  zalo: string\r\n  created_at: string\r\n  updated_at: string\r\n}\r\n\r\ninterface CommentsProp {\r\n  node: {\r\n    id: string,\r\n    ad_sell_lease_id: string,\r\n    content: string,\r\n    user_id: string,\r\n    media: string,\r\n    user: {\r\n      first_name: string,\r\n      last_name: string,\r\n      avatar: string,\r\n    }\r\n    like_number: string,\r\n    created_at: string,\r\n  },\r\n}\r\n\r\ninterface RatingsProp {\r\n  node: {\r\n    id: string,\r\n    ad_sell_lease_id: string,\r\n    content: string,\r\n    user_id: string,\r\n    media: string,\r\n    user: {\r\n      first_name: string,\r\n      last_name: string,\r\n      avatar: string,\r\n    }\r\n    rate: number,\r\n    like_number: string,\r\n    created_at: string,\r\n  },\r\n}\r\n\r\n// @ts-ignore\r\nconst UserPage: NextPage<ProjectDetails> = (props: ProjectDetails) => {\r\n  let metaTitle = `Chuyên viên tư vấn ${props.user.first_name } ${props.user.last_name}`\r\n  return (\r\n    <Layout\r\n      title={metaTitle}\r\n      description={\"metaDescription\"}\r\n      {...props}\r\n      image={\"https://vcdn-giaitri.vnecdn.net/2020/01/23/C-OiQ-UUIAIycqR-1-1579796735_680x0.jpg\"}\r\n      canonical={ mainURL + '/nguoi-dung/' + props.userId}\r\n      path={'nguoi-dung'}\r\n      dataCompare={{}}\r\n    >\r\n      {/* <User \r\n        comments= {props.comments.data.adSellLeaseComments.edges}\r\n        user={props.user}\r\n      /> */}\r\n    </Layout>\r\n  );\r\n};\r\n\r\n// @ts-ignore\r\nUserPage.getInitialProps = async function(props: QueryProp) {\r\n  let userId = props.query.id;\r\n  let dataFilter = JSON.stringify({ id: userId });\r\n  let comments = await apolloClient.query({query: GET_AD_SELL_LEASE_COMMENTS, variables: {\r\n      \"page\": 1,\r\n      \"limit\": 15,\r\n      \"filter\": dataFilter\r\n    }}).then(response => {\r\n    return response;\r\n  });\r\n\r\n  // let ratings = await apolloClient.query({query: GET_AD_SELL_LEASE_RATINGS, variables: {\r\n  //   \"page\": 1,\r\n  //   \"limit\": 15,\r\n  //   \"filter\": dataFilter\r\n  // }}).then(response => {\r\n  //   return response;\r\n  // });\r\n\r\n  let user = await apolloClient.query({query: GET_USER_BY_ID, variables: {\r\n    \"id\": userId\r\n    }}).then(response => { \r\n      return response.data.user\r\n  })\r\n  \r\n  return {\r\n    comments: comments,\r\n    userId: userId,\r\n    user: user\r\n  };\r\n};\r\n\r\nexport default UserPage;\r\n"]},"metadata":{},"sourceType":"module"}
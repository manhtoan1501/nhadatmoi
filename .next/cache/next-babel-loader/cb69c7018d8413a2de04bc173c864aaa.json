{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manh nhan\\\\Desktop\\\\Nhadatmoi\\\\pages\\\\nguoi-dung\\\\[id].tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport Layout from '../../components/Layout/Layout';\nimport { apolloClient } from \"../../utils\";\nimport { GET_AD_SELL_LEASE_COMMENTS } from \"../../graphql/reviews/queries\";\nimport { GET_USER_BY_ID } from \"../../graphql/user/queries/index\";\nimport \"../../assets/scss/style.scss\";\nimport { mainURL } from \"../../constants\";\nimport User from \"../../components/User/Index\";\n\n// @ts-ignore\nconst UserPage = props => {\n  let metaTitle = `Chuyên viên tư vấn ${props.user.first_name} ${props.user.last_name}`;\n  return __jsx(Layout, _extends({\n    title: metaTitle,\n    description: \"metaDescription\"\n  }, props, {\n    image: \"https://vcdn-giaitri.vnecdn.net/2020/01/23/C-OiQ-UUIAIycqR-1-1579796735_680x0.jpg\",\n    canonical: mainURL + '/nguoi-dung/' + props.userId,\n    path: 'nguoi-dung',\n    dataCompare: {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }), __jsx(User, {\n    comments: props.comments.data.adSellLeaseComments.edges,\n    user: props.user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }));\n}; // @ts-ignore\n\n\nUserPage.getInitialProps = async function (props) {\n  console.log(\"props\", props.query.id);\n  let userId = props.query.id;\n  let dataFilter = JSON.stringify({\n    id: userId\n  });\n  let comments = await apolloClient.query({\n    query: GET_AD_SELL_LEASE_COMMENTS,\n    variables: {\n      \"page\": 1,\n      \"limit\": 15,\n      \"filter\": dataFilter\n    }\n  }).then(response => {\n    return response;\n  }); // let ratings = await apolloClient.query({query: GET_AD_SELL_LEASE_RATINGS, variables: {\n  //   \"page\": 1,\n  //   \"limit\": 15,\n  //   \"filter\": dataFilter\n  // }}).then(response => {\n  //   return response;\n  // });\n\n  let user = await apolloClient.query({\n    query: GET_USER_BY_ID,\n    variables: {\n      \"id\": userId\n    }\n  }).then(response => {\n    return response.data.user;\n  });\n  return {\n    comments: comments,\n    userId: userId,\n    user: user\n  };\n};\n\nexport default UserPage;","map":{"version":3,"sources":["C:/Users/manh nhan/Desktop/Nhadatmoi/pages/nguoi-dung/[id].tsx"],"names":["React","Layout","apolloClient","GET_AD_SELL_LEASE_COMMENTS","GET_USER_BY_ID","mainURL","User","UserPage","props","metaTitle","user","first_name","last_name","userId","comments","data","adSellLeaseComments","edges","getInitialProps","console","log","query","id","dataFilter","JSON","stringify","variables","then","response"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,SAAQC,YAAR,QAA2B,aAA3B;AACA,SAAQC,0BAAR,QAAoE,+BAApE;AACA,SAAQC,cAAR,QAA8B,kCAA9B;AACA,OAAO,8BAAP;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,IAAP,MAAiB,6BAAjB;;AAwEA;AACA,MAAMC,QAA8B,GAAIC,KAAD,IAAuB;AAC5D,MAAIC,SAAS,GAAI,sBAAqBD,KAAK,CAACE,IAAN,CAAWC,UAAY,IAAGH,KAAK,CAACE,IAAN,CAAWE,SAAU,EAArF;AACA,SACE,MAAC,MAAD;AACE,IAAA,KAAK,EAAEH,SADT;AAEE,IAAA,WAAW,EAAE;AAFf,KAGMD,KAHN;AAIE,IAAA,KAAK,EAAE,mFAJT;AAKE,IAAA,SAAS,EAAGH,OAAO,GAAG,cAAV,GAA2BG,KAAK,CAACK,MAL/C;AAME,IAAA,IAAI,EAAE,YANR;AAOE,IAAA,WAAW,EAAE,EAPf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MASE,MAAC,IAAD;AACE,IAAA,QAAQ,EAAGL,KAAK,CAACM,QAAN,CAAeC,IAAf,CAAoBC,mBAApB,CAAwCC,KADrD;AAEE,IAAA,IAAI,EAAET,KAAK,CAACE,IAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF;AAgBD,CAlBD,C,CAoBA;;;AACAH,QAAQ,CAACW,eAAT,GAA2B,gBAAeV,KAAf,EAAiC;AAC1DW,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAsBZ,KAAK,CAACa,KAAN,CAAYC,EAAlC;AACA,MAAIT,MAAM,GAAGL,KAAK,CAACa,KAAN,CAAYC,EAAzB;AACA,MAAIC,UAAU,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAEH,IAAAA,EAAE,EAAET;AAAN,GAAf,CAAjB;AACA,MAAIC,QAAQ,GAAG,MAAMZ,YAAY,CAACmB,KAAb,CAAmB;AAACA,IAAAA,KAAK,EAAElB,0BAAR;AAAoCuB,IAAAA,SAAS,EAAE;AACnF,cAAQ,CAD2E;AAEnF,eAAS,EAF0E;AAGnF,gBAAUH;AAHyE;AAA/C,GAAnB,EAIfI,IAJe,CAIVC,QAAQ,IAAI;AACrB,WAAOA,QAAP;AACD,GANoB,CAArB,CAJ0D,CAY1D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAIlB,IAAI,GAAG,MAAMR,YAAY,CAACmB,KAAb,CAAmB;AAACA,IAAAA,KAAK,EAAEjB,cAAR;AAAwBsB,IAAAA,SAAS,EAAE;AACrE,YAAMb;AAD+D;AAAnC,GAAnB,EAEXc,IAFW,CAENC,QAAQ,IAAI;AACnB,WAAOA,QAAQ,CAACb,IAAT,CAAcL,IAArB;AACH,GAJgB,CAAjB;AAMA,SAAO;AACLI,IAAAA,QAAQ,EAAEA,QADL;AAELD,IAAAA,MAAM,EAAEA,MAFH;AAGLH,IAAAA,IAAI,EAAEA;AAHD,GAAP;AAKD,CA/BD;;AAiCA,eAAeH,QAAf","sourcesContent":["import React from 'react';\r\nimport {NextPage} from \"next\";\r\nimport Layout from '../../components/Layout/Layout';\r\nimport {apolloClient} from \"../../utils\";\r\nimport {GET_AD_SELL_LEASE_COMMENTS, GET_AD_SELL_LEASE_RATINGS} from \"../../graphql/reviews/queries\";\r\nimport {GET_USER_BY_ID } from \"../../graphql/user/queries/index\"\r\nimport \"../../assets/scss/style.scss\";\r\nimport { mainURL } from \"../../constants\";\r\nimport User from \"../../components/User/Index\"\r\n \r\ninterface IndexProps {\r\n  url: { query: { id: string }},\r\n  comments: { data: { adSellLeaseComments: { edges: CommentsProp[]}} },\r\n  // ratings: { data: { adSellLeaseRatings: { edges: RatingsProp[]}} },\r\n  userId: string,\r\n  user: UserProp\r\n}\r\n\r\ninterface QueryProp { \r\n  query: { id: string } \r\n}\r\n\r\ninterface UserProp {\r\n  address: string\r\n  avatar: string\r\n  birthday: string\r\n  email: string\r\n  facebook: string\r\n  first_name: string\r\n  gender: string\r\n  google_id: string\r\n  intro: string\r\n  id: string\r\n  last_name: string\r\n  phone: string\r\n  mobile: string\r\n  skype: string\r\n  username: string\r\n  viber: string\r\n  website: string\r\n  zalo: string\r\n  created_at: string\r\n  updated_at: string\r\n}\r\n\r\ninterface CommentsProp {\r\n  node: {\r\n    id: string,\r\n    ad_sell_lease_id: string,\r\n    content: string,\r\n    user_id: string,\r\n    media: string,\r\n    user: {\r\n      first_name: string,\r\n      last_name: string,\r\n      avatar: string,\r\n    }\r\n    like_number: string,\r\n    created_at: string,\r\n  },\r\n}\r\n\r\ninterface RatingsProp {\r\n  node: {\r\n    id: string,\r\n    ad_sell_lease_id: string,\r\n    content: string,\r\n    user_id: string,\r\n    media: string,\r\n    user: {\r\n      first_name: string,\r\n      last_name: string,\r\n      avatar: string,\r\n    }\r\n    rate: number,\r\n    like_number: string,\r\n    created_at: string,\r\n  },\r\n}\r\n\r\n// @ts-ignore\r\nconst UserPage: NextPage<IndexProps> = (props: IndexProps) => {\r\n  let metaTitle = `Chuyên viên tư vấn ${props.user.first_name } ${props.user.last_name}`\r\n  return (\r\n    <Layout\r\n      title={metaTitle}\r\n      description={\"metaDescription\"}\r\n      {...props}\r\n      image={\"https://vcdn-giaitri.vnecdn.net/2020/01/23/C-OiQ-UUIAIycqR-1-1579796735_680x0.jpg\"}\r\n      canonical={ mainURL + '/nguoi-dung/' + props.userId}\r\n      path={'nguoi-dung'}\r\n      dataCompare={{  }}\r\n    >\r\n      <User \r\n        comments= {props.comments.data.adSellLeaseComments.edges}\r\n        user={props.user}\r\n      />\r\n    </Layout>\r\n  );\r\n};\r\n\r\n// @ts-ignore\r\nUserPage.getInitialProps = async function(props: QueryProp) {\r\n  console.log(\"props\",  props.query.id)\r\n  let userId = props.query.id;\r\n  let dataFilter = JSON.stringify({ id: userId });\r\n  let comments = await apolloClient.query({query: GET_AD_SELL_LEASE_COMMENTS, variables: {\r\n      \"page\": 1,\r\n      \"limit\": 15,\r\n      \"filter\": dataFilter\r\n    }}).then(response => {\r\n    return response;\r\n  });\r\n\r\n  // let ratings = await apolloClient.query({query: GET_AD_SELL_LEASE_RATINGS, variables: {\r\n  //   \"page\": 1,\r\n  //   \"limit\": 15,\r\n  //   \"filter\": dataFilter\r\n  // }}).then(response => {\r\n  //   return response;\r\n  // });\r\n\r\n  let user = await apolloClient.query({query: GET_USER_BY_ID, variables: {\r\n    \"id\": userId\r\n    }}).then(response => { \r\n      return response.data.user\r\n  })\r\n  \r\n  return {\r\n    comments: comments,\r\n    userId: userId,\r\n    user: user\r\n  };\r\n};\r\n\r\nexport default UserPage;\r\n"]},"metadata":{},"sourceType":"module"}
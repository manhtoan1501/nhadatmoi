{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\manh nhan\\\\Desktop\\\\Nhadatmoi\\\\components\\\\Chat\\\\Index.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Popper from '@material-ui/core/Popper';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { Grid, InputBase, Fade, Typography, Paper, CardHeader, Avatar, TextField, Divider, Tooltip, Input, IconButton } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport TagFacesIcon from '@material-ui/icons/TagFaces';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SendIcon from '@material-ui/icons/Send';\nimport axios from \"axios\";\nimport { apiBaseURL } from \"../../constants\";\nimport \"cross-fetch/polyfill\";\nvar client = axios.create({\n  baseURL: apiBaseURL,\n  timeout: 30000\n});\nimport moment from \"moment\"; // import ReactFileReader from 'react-file-reader';\n// const ReactFileReader = require('react-file-reader');\n\nimport 'moment/locale/es';\nmoment.locale('vi');\nimport { dataEmoji, arrChat, giphyDefault, theme, useStyles, themeTextfieldAdmin, themeTextfieldUser, StyledBadge } from \"./constant\";\nexport default function PositionedPopper() {\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      anchorEl = _React$useState2[0],\n      setAnchorEl = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      open = _React$useState4[0],\n      setOpen = _React$useState4[1];\n\n  var _React$useState5 = React.useState(),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      placement = _React$useState6[0],\n      setPlacement = _React$useState6[1];\n\n  var _React$useState7 = React.useState(true),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      online = _React$useState8[0],\n      setOnline = _React$useState8[1];\n\n  var _React$useState9 = React.useState(false),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      internet = _React$useState10[0],\n      setInternet = _React$useState10[1];\n\n  var classes = useStyles();\n\n  var _React$useState11 = React.useState(false),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      texting = _React$useState12[0],\n      setTexting = _React$useState12[1];\n\n  var _React$useState13 = React.useState(\"\"),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      valueInput = _React$useState14[0],\n      setValueInput = _React$useState14[1];\n\n  var _React$useState15 = React.useState(),\n      _React$useState16 = _slicedToArray(_React$useState15, 2),\n      giphyData = _React$useState16[0],\n      setGiphyData = _React$useState16[1];\n\n  var _React$useState17 = React.useState(false),\n      _React$useState18 = _slicedToArray(_React$useState17, 2),\n      openEmojiGiphy = _React$useState18[0],\n      setOpenEmojiGiphy = _React$useState18[1];\n\n  var _React$useState19 = React.useState(),\n      _React$useState20 = _slicedToArray(_React$useState19, 2),\n      indexEmoji = _React$useState20[0],\n      setIndexEmoji = _React$useState20[1];\n\n  var _React$useState21 = React.useState(\"\"),\n      _React$useState22 = _slicedToArray(_React$useState21, 2),\n      valueSearchGiphy = _React$useState22[0],\n      setValueSearchGiphy = _React$useState22[1];\n\n  var _React$useState23 = React.useState(false),\n      _React$useState24 = _slicedToArray(_React$useState23, 2),\n      loading = _React$useState24[0],\n      setLoading = _React$useState24[1];\n\n  var _React$useState25 = React.useState(1),\n      _React$useState26 = _slicedToArray(_React$useState25, 2),\n      completed = _React$useState26[0],\n      setCompleted = _React$useState26[1];\n\n  var onCloseChat = function onCloseChat() {\n    setOpen(false);\n  };\n\n  var setOnKeyPress = function setOnKeyPress(event) {\n    setTexting(true);\n  };\n\n  var setOnBlur = function setOnBlur(event) {\n    setTexting(true);\n  };\n\n  var setOnKeyDown = function setOnKeyDown(event) {\n    if (event.keyCode == 13) {\n      arrChat.push({\n        message: event.target.value,\n        type: 'user',\n        image: {\n          url: \"\",\n          width: \"\",\n          height: \"\"\n        },\n        date: String(new Date().getTime())\n      });\n      setValueInput(\"\");\n    }\n  };\n\n  var senMesssage = function senMesssage() {\n    arrChat.push({\n      message: valueInput,\n      type: 'user',\n      image: {\n        url: \"\",\n        width: \"\",\n        height: \"\"\n      },\n      date: String(new Date().getTime())\n    });\n    setValueInput(\"\");\n  };\n\n  var apiBaseURL = \"https://graph.nhadatmoi.net\";\n  var googleLogin = \"\".concat(apiBaseURL, \"/auth/google\");\n  var apiGraphQLURL = \"\".concat(apiBaseURL, \"/graphql\");\n  var apiUpload = \"\".concat(apiBaseURL, \"/upload_image\");\n\n  var api = function api(method, url, data) {\n    return client.request({\n      data: JSON.stringify(data),\n      headers: {\n        \"Accept\": \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      method: method,\n      url: url,\n      withCredentials: true\n    }).then(function (response) {\n      return response.data;\n    });\n  };\n\n  var upLoadImage = function upLoadImage(files) {\n    var reader = new FileReader();\n    var file = files.target.files[0];\n    reader.readAsDataURL(file);\n\n    reader.onload = function () {\n      setLoading(true);\n      setCompleted(0);\n      api(\"POST\", \"\".concat(apiUpload), {\n        base64image: reader.result,\n        fileName: new Date().getTime() + \"\" + file.name,\n        typeUpload: \"ad_sell_lease\"\n      }).then(function (res) {\n        console.log(\"res\", res); // getFile(res.location, file.name, file.size);\n\n        setLoading(false);\n      })[\"catch\"](function (err) {\n        alert('HTTP Error: ' + err.message);\n      });\n    };\n  };\n\n  var renderHeader = function renderHeader() {\n    return __jsx(CardHeader, {\n      className: classes.hearder,\n      avatar: __jsx(StyledBadge, {\n        overlap: \"circle\",\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right'\n        },\n        variant: online ? \"dot\" : \"standard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, __jsx(Avatar, {\n        className: classes.sizeAvatarSmall,\n        alt: \"nhadatmoi.net\",\n        src: \"https://image.crisp.chat/avatar/operator/da8d4459-5ea3-4119-bca1-9170f49ee69c/240/?1585999578742&quot\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      })),\n      title: \"Nguy\\u1EC5n Thanh Huy\\u1EC1n\",\n      action: __jsx(IconButton, {\n        color: \"inherit\",\n        \"aria-label\": \"settings\",\n        onClick: function onClick() {\n          return onCloseChat();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, __jsx(CloseIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    });\n  };\n\n  var setChangeInput = function setChangeInput(value) {\n    setValueInput(value);\n  };\n\n  var searchGiphy = function searchGiphy(event) {\n    var url, getData;\n    return _regeneratorRuntime.async(function searchGiphy$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setValueSearchGiphy(event.target.value);\n            url = \"https://api.giphy.com/v1/gifs/search?api_key=UgTMyvovmg74m8fPN6qYiB623nwS1IPc&q=\".concat(event.target.value, \"&limit=20&offset=0&rating=G&lang=vi\");\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(axios.get(url, {}).then(function (response) {// setGiphyData(response.data.data)\n            }));\n\n          case 4:\n            getData = _context.sent;\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }; // let dataSearch: any = []\n\n\n  var dataSearch = giphyDefault; // if(Array.isArray(giphyData)){\n  //   giphyData.map((item: any, index: number) => {\n  //     // dataSearch.push({ image:  item.images.original.url })\n  //     dataSearch.push({ \n  //       image: {\n  //         url: item.images.fixed_width.url,\n  //         height: item.images.fixed_width.height,\n  //         width: item.images.fixed_width.width,\n  //       }})\n  //   })\n  // }\n\n  var setItemGiphy = function setItemGiphy(index, name) {\n    setOpenEmojiGiphy(!openEmojiGiphy);\n\n    if (name == \"giphyDefault\") {\n      arrChat.push({\n        message: \"\",\n        type: 'user',\n        image: {\n          url: giphyDefault[index].image.url,\n          width: giphyDefault[index].image.width,\n          height: giphyDefault[index].image.height\n        },\n        date: String(new Date().getTime())\n      });\n    } else if (name == \"dataSearch\") {\n      arrChat.push({\n        message: \"\",\n        type: 'user',\n        image: {\n          url: giphyDefault[index].image.url,\n          width: giphyDefault[index].image.width,\n          height: giphyDefault[index].image.height\n        },\n        date: String(new Date().getTime())\n      });\n    }\n  };\n\n  var onClickEmoji = function onClickEmoji(index) {\n    valueInput = valueInput + dataEmoji[index][\"native\"];\n    setValueInput(valueInput);\n  };\n\n  var renderEmojiGiphy = function renderEmojiGiphy() {\n    return __jsx(\"div\", {\n      className: classes.emojiGiphy,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: classes.marinButtonEmojiGiphy,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, __jsx(\"button\", {\n      className: classes.buttonEmojiGiphy,\n      onClick: function onClick() {\n        return setViewEmoji(true);\n      },\n      style: {\n        backgroundColor: !viewEmoji ? \"#aaa\" : \"\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, \" Bi\\u1EC3u t\\u01B0\\u1EE3ng\"), __jsx(\"button\", {\n      className: classes.buttonEmojiGiphy,\n      onClick: function onClick() {\n        return setViewEmoji(false);\n      },\n      style: {\n        backgroundColor: viewEmoji ? \"#aaa\" : \"\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \" \\u1EA2nh \\u0111\\u1ED9ng\")), !viewEmoji && __jsx(Paper, {\n      component: \"form\",\n      className: classes.rootPaper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, __jsx(IconButton, {\n      type: \"submit\",\n      className: classes.iconButton,\n      \"aria-label\": \"search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, __jsx(SearchIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    })), __jsx(InputBase, {\n      onChange: function onChange(e) {\n        return searchGiphy(e);\n      },\n      className: classes.inputBaseGiphy,\n      placeholder: \"T\\xECm ki\\u1EBFm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    })), viewEmoji ? __jsx(\"div\", {\n      className: classes.overflowHeightEmoji,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, dataEmoji.map(function (item, index) {\n      return __jsx(\"div\", {\n        onClick: function onClick() {\n          return onClickEmoji(index);\n        },\n        key: index,\n        className: classes.itemEmoji,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, item[\"native\"]);\n    })) : __jsx(\"div\", {\n      className: classes.overflowHeightGiphy,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, valueSearchGiphy ? dataSearch.map(function (item, index) {\n      return __jsx(\"div\", {\n        className: classes.dispalyImageGiphy,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, __jsx(\"img\", {\n        className: classes.imgListGiphy,\n        alt: \"giphy\",\n        src: item.image.url,\n        onClick: function onClick() {\n          return setItemGiphy(index, \"dataSearch\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }));\n    }) : giphyDefault.map(function (item, index) {\n      return __jsx(\"div\", {\n        className: classes.dispalyImageGiphy,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, __jsx(\"img\", {\n        className: classes.imgListGiphy,\n        alt: \"giphy\",\n        src: item.image.url,\n        onClick: function onClick() {\n          return setItemGiphy(index, \"giphyDefault\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }));\n    })));\n  };\n\n  var renderContentChat = function renderContentChat() {\n    return __jsx(\"div\", {\n      className: classes.overflowHeightEmojiGiphy,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, __jsx(Typography, {\n      align: \"center\",\n      className: classes.textSizeNewDate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, moment().format('LLL')), __jsx(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }), arrChat.map(function (item, index) {\n      var checkNewDate = false;\n\n      if (index > 0 && moment(Number(arrChat[index - 1].date)).format('YYYY-MM-DD') != moment(Number(arrChat[index].date)).format('YYYY-MM-DD')) {\n        checkNewDate = true;\n      }\n\n      var setViewAvatar = false;\n\n      if (item.type === 'admin' && index > 0) {\n        if (index === arrChat.length || arrChat[index - 1].type != arrChat[index].type) {\n          setViewAvatar = true;\n        }\n      } else if (item.type === 'admin' && index === 0) {\n        setViewAvatar = true;\n      }\n\n      console.log(\"setViewAvatar\", setViewAvatar);\n      return __jsx(\"div\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, checkNewDate && __jsx(Typography, {\n        align: \"center\",\n        className: classes.textSizeNewDate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, moment(Number(item.date)).format(\"LLL\"), \" \", __jsx(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      })), item.type === 'admin' ? __jsx(ThemeProvider, {\n        theme: themeTextfieldAdmin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: classes.viewAvatarChatContent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, setViewAvatar ? __jsx(Avatar, {\n        className: classes.avatarAdminText,\n        alt: \"nhadatmoi.net\",\n        src: \"https://image.crisp.chat/avatar/operator/da8d4459-5ea3-4119-bca1-9170f49ee69c/240/?1585999578742&quot\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }) : \"\"), __jsx(\"div\", {\n        className: classes.textFieldChatContent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, item.image.url ? __jsx(Tooltip, {\n        title: moment(Number(item.date)).fromNow(),\n        placement: \"top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: classes.viewContentImageGiphy,\n        style: {\n          width: \"\".concat(item.image.width, \"px\"),\n          height: \"\".concat(item.image.height, \"px\")\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, __jsx(\"img\", {\n        className: classes.imgGiphy,\n        alt: \"giphy\",\n        src: item.image.url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }))) : __jsx(Tooltip, {\n        title: moment(Number(item.date)).fromNow(),\n        placement: \"top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, __jsx(TextField, {\n        fullWidth: true,\n        label: \"\",\n        className: classes.textAdmin,\n        value: item.message,\n        margin: \"dense\",\n        id: \"outlined-basic\",\n        multiline: true,\n        InputProps: {\n          readOnly: true\n        },\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      })))) : __jsx(ThemeProvider, {\n        theme: themeTextfieldUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, item.image.url ? __jsx(Tooltip, {\n        title: moment(Number(item.date)).fromNow(),\n        placement: \"top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: classes.viewContentImageGiphy,\n        style: {\n          width: \"\".concat(item.image.width, \"px\"),\n          height: \"\".concat(item.image.height, \"px\")\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }, __jsx(\"img\", {\n        className: classes.imgGiphy,\n        alt: \"giphy\",\n        src: item.image.url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }))) : __jsx(Tooltip, {\n        title: moment(Number(item.date)).fromNow(),\n        placement: \"top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: classes.textFieldUserChatContent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }, __jsx(TextField, {\n        fullWidth: true,\n        label: \"\",\n        className: classes.textUser,\n        value: item.message,\n        margin: \"dense\",\n        id: \"outlined-basic\",\n        multiline: true,\n        InputProps: {\n          readOnly: true\n        },\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      })))));\n    }), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }, openEmojiGiphy && renderEmojiGiphy()), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      id: \"output\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    })));\n  };\n\n  var _React$useState27 = React.useState(false),\n      _React$useState28 = _slicedToArray(_React$useState27, 2),\n      viewEmoji = _React$useState28[0],\n      setViewEmoji = _React$useState28[1];\n\n  var onClickOpenEmojiGiphy = function onClickOpenEmojiGiphy() {\n    setOpenEmojiGiphy(!openEmojiGiphy);\n    setViewEmoji(true);\n  };\n\n  var renderInput = function renderInput() {\n    return __jsx(Paper, {\n      component: \"form\",\n      className: classes.inputBase,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388\n      },\n      __self: this\n    }, __jsx(ThemeProvider, {\n      theme: theme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389\n      },\n      __self: this\n    }, __jsx(Input, {\n      fullWidth: true // disabled={internet}\n      ,\n      margin: \"dense\",\n      id: \"outlined-basic\",\n      autoFocus: true // value={valueInput}\n      ,\n      value: valueInput,\n      multiline: true,\n      onChange: function onChange(e) {\n        return setChangeInput(e.target.value);\n      },\n      onKeyPress: function onKeyPress(e) {\n        return setOnKeyPress(e);\n      },\n      onBlur: function onBlur(e) {\n        return setOnBlur(e);\n      },\n      onKeyDown: function onKeyDown(e) {\n        return setOnKeyDown(e);\n      },\n      placeholder: \"Nh\\u1EADp tin nh\\u1EAFn ...\",\n      autoComplete: \"false\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390\n      },\n      __self: this\n    }), openEmojiGiphy ? __jsx(Tooltip, {\n      title: \"Ch\\xE8n bi\\u1EC3u t\\u01B0\\u1EE3ng\",\n      placement: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407\n      },\n      __self: this\n    }, __jsx(ExpandMoreIcon, {\n      className: classes.sizeIcon,\n      onClick: onClickOpenEmojiGiphy,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408\n      },\n      __self: this\n    })) : __jsx(Tooltip, {\n      title: \"Ch\\xE8n bi\\u1EC3u t\\u01B0\\u1EE3ng\",\n      placement: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414\n      },\n      __self: this\n    }, __jsx(TagFacesIcon, {\n      className: classes.sizeIcon,\n      onClick: onClickOpenEmojiGiphy,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415\n      },\n      __self: this\n    })), valueInput ? __jsx(Tooltip, {\n      title: \"Th\\xEAm t\\u1EADp tin\",\n      placement: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423\n      },\n      __self: this\n    }, __jsx(SendIcon, {\n      onClick: senMesssage,\n      className: classes.sizeIcon,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424\n      },\n      __self: this\n    })) : __jsx(Tooltip, {\n      title: \"Th\\xEAm t\\u1EADp tin\",\n      placement: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429\n      },\n      __self: this\n    }, __jsx(AddCircleOutlineIcon, {\n      onChange: upLoadImage,\n      className: classes.sizeIcon,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430\n      },\n      __self: this\n    }))));\n  };\n\n  var viewChat = function viewChat() {\n    return __jsx(Popper, {\n      open: open,\n      anchorEl: anchorEl,\n      placement: placement,\n      transition: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444\n      },\n      __self: this\n    }, function (_ref) {\n      var TransitionProps = _ref.TransitionProps;\n      return __jsx(Fade, _extends({}, TransitionProps, {\n        timeout: 300,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451\n        },\n        __self: this\n      }), __jsx(Paper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: classes.positionSizeViewChat,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 453\n        },\n        __self: this\n      }, renderHeader(), renderContentChat(), renderInput())));\n    });\n  };\n\n  var handleClick = function handleClick(newPlacement) {\n    setOpen(true);\n    setPlacement(newPlacement);\n  };\n\n  var renderAvatar = function renderAvatar() {\n    return __jsx(\"div\", {\n      className: classes.positionAvatar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472\n      },\n      __self: this\n    }, __jsx(StyledBadge, {\n      overlap: \"circle\",\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'right'\n      } // variant= { online ? \"dot\" : \"standard\" }\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473\n      },\n      __self: this\n    }, __jsx(Avatar, {\n      onClick: function onClick() {\n        return handleClick(\"top-start\");\n      },\n      className: classes.large,\n      alt: \"nhadatmoi.net\",\n      src: \"https://image.crisp.chat/avatar/operator/da8d4459-5ea3-4119-bca1-9170f49ee69c/240/?1585999578742&quot\" // src=\"https://file.vforum.vn/hinh/2018/03/hinh-mau-trang-tinh-tron-hinh-nen-anh-dai-dien-anh-bia-toan-mau-trang1.png\"\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481\n      },\n      __self: this\n    })));\n  };\n\n  return __jsx(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494\n    },\n    __self: this\n  }, viewChat(), __jsx(Grid, {\n    container: true,\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497\n    },\n    __self: this\n  }, !open && renderAvatar())));\n}","map":{"version":3,"sources":["C:/Users/manh nhan/Desktop/Nhadatmoi/components/Chat/Index.tsx"],"names":["React","Popper","ThemeProvider","Grid","InputBase","Fade","Typography","Paper","CardHeader","Avatar","TextField","Divider","Tooltip","Input","IconButton","SearchIcon","AddCircleOutlineIcon","TagFacesIcon","ExpandMoreIcon","CloseIcon","SendIcon","axios","apiBaseURL","client","create","baseURL","timeout","moment","locale","dataEmoji","arrChat","giphyDefault","theme","useStyles","themeTextfieldAdmin","themeTextfieldUser","StyledBadge","PositionedPopper","useState","anchorEl","setAnchorEl","open","setOpen","placement","setPlacement","online","setOnline","internet","setInternet","classes","texting","setTexting","valueInput","setValueInput","giphyData","setGiphyData","openEmojiGiphy","setOpenEmojiGiphy","indexEmoji","setIndexEmoji","valueSearchGiphy","setValueSearchGiphy","loading","setLoading","completed","setCompleted","onCloseChat","setOnKeyPress","event","setOnBlur","setOnKeyDown","keyCode","push","message","target","value","type","image","url","width","height","date","String","Date","getTime","senMesssage","googleLogin","apiGraphQLURL","apiUpload","api","method","data","request","JSON","stringify","headers","withCredentials","then","response","upLoadImage","files","reader","FileReader","file","readAsDataURL","onload","base64image","result","fileName","name","typeUpload","res","console","log","err","alert","renderHeader","hearder","vertical","horizontal","sizeAvatarSmall","setChangeInput","searchGiphy","get","getData","dataSearch","setItemGiphy","index","onClickEmoji","renderEmojiGiphy","emojiGiphy","marinButtonEmojiGiphy","buttonEmojiGiphy","setViewEmoji","backgroundColor","viewEmoji","rootPaper","iconButton","e","inputBaseGiphy","overflowHeightEmoji","map","item","itemEmoji","overflowHeightGiphy","dispalyImageGiphy","imgListGiphy","renderContentChat","overflowHeightEmojiGiphy","textSizeNewDate","format","checkNewDate","Number","setViewAvatar","length","viewAvatarChatContent","avatarAdminText","textFieldChatContent","fromNow","viewContentImageGiphy","imgGiphy","textAdmin","readOnly","textFieldUserChatContent","textUser","onClickOpenEmojiGiphy","renderInput","inputBase","sizeIcon","viewChat","TransitionProps","positionSizeViewChat","handleClick","newPlacement","renderAvatar","positionAvatar","large","root"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Popper, { PopperPlacementType } from '@material-ui/core/Popper';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport { \r\n  Grid, Button, InputBase, Fade,\r\n  Typography, Paper, Card, CardHeader, CardContent,\r\n  CardActionArea, CardMedia, Avatar, TextField,\r\n  Badge, Divider, Tooltip, Input, Chip, IconButton\r\n} from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport TagFacesIcon from '@material-ui/icons/TagFaces';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport axios, {Method} from \"axios\";\r\nimport {apiBaseURL, apiGraphQLURL} from \"../../constants\";\r\nimport \"cross-fetch/polyfill\";\r\nimport ApolloClient from \"apollo-boost\";\r\nconst client = axios.create({ baseURL: apiBaseURL, timeout: 30000 });\r\nimport moment from \"moment\"\r\n// import ReactFileReader from 'react-file-reader';\r\n// const ReactFileReader = require('react-file-reader');\r\nimport 'moment/locale/es'   \r\nmoment.locale('vi')\r\nimport { Theme, makeStyles, withStyles, createStyles } from '@material-ui/core/styles';\r\nimport { \r\n  dataEmoji,  arrChat, giphyDefault, theme, useStyles,\r\n  themeTextfieldAdmin, themeTextfieldUser, StyledBadge\r\n} from \"./constant\"\r\n\r\nexport default function PositionedPopper() {\r\n  const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(null);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [placement, setPlacement] = React.useState<PopperPlacementType>();\r\n  const [online, setOnline] = React.useState<boolean>(true)\r\n  const [internet, setInternet] = React.useState<boolean>(false)\r\n  const classes = useStyles();\r\n  const [texting, setTexting] = React.useState<boolean>(false)\r\n  let   [valueInput, setValueInput] = React.useState(\"\")\r\n  const [giphyData, setGiphyData] = React.useState<any>()\r\n  const [openEmojiGiphy, setOpenEmojiGiphy] = React.useState<boolean>(false)\r\n  const [indexEmoji, setIndexEmoji] = React.useState<number>()\r\n  const [valueSearchGiphy, setValueSearchGiphy] = React.useState(\"\")\r\n  const [loading, setLoading] = React.useState(false)\r\n  const [completed, setCompleted] = React.useState(1)\r\n  const onCloseChat = () => {\r\n    setOpen(false)\r\n  }\r\n  const setOnKeyPress = (event: any) => {\r\n    setTexting(true)\r\n  }\r\n  const setOnBlur = (event: any) => {\r\n    setTexting(true)\r\n  }\r\n  const setOnKeyDown = (event: any) => {\r\n    if(event.keyCode == 13){\r\n      arrChat.push({ message: event.target.value, type: 'user', image: { url: \"\", width: \"\", height: \"\" }, date: String(new Date().getTime()) })\r\n      setValueInput(\"\")\r\n    }\r\n  }\r\n  const senMesssage = () => {\r\n    arrChat.push({ message: valueInput, type: 'user', image: { url: \"\", width: \"\", height: \"\" }, date: String(new Date().getTime()) })\r\n    setValueInput(\"\")\r\n  }\r\n\r\n  \r\n  const apiBaseURL = \"https://graph.nhadatmoi.net\";\r\n  const googleLogin = `${apiBaseURL}/auth/google`;\r\n  const apiGraphQLURL = `${apiBaseURL}/graphql`;\r\n  const apiUpload = `${apiBaseURL}/upload_image`;\r\n  const api = (method: Method, url: string, data?: any) => client\r\n    .request(\r\n    { data: JSON.stringify(data), \r\n      headers: { \"Accept\": \"application/json\",\"Content-Type\": \"application/json\",\r\n    }, method, url,  withCredentials: true,\r\n  }).then((response: any) => response.data);\r\n\r\n \r\n  const upLoadImage = (files: any) => {\r\n    const reader = new FileReader;\r\n    let file = files.target.files[0]\r\n    reader.readAsDataURL(file)\r\n    reader.onload = () => {\r\n      setLoading(true);\r\n      setCompleted(0);\r\n      api(\"POST\", `${apiUpload}`, { \r\n        base64image: reader.result, \r\n        fileName: (new Date()).getTime() + \"\" + file.name,\r\n        typeUpload: \"ad_sell_lease\",\r\n      })\r\n      .then(function (res) {\r\n        console.log(\"res\", res)\r\n        // getFile(res.location, file.name, file.size);\r\n        setLoading(false);\r\n      })\r\n      .catch(function (err) {\r\n        alert('HTTP Error: ' + err.message);\r\n      });\r\n    };\r\n  }\r\n\r\n  const renderHeader = () => {\r\n    return (\r\n      <CardHeader\r\n        className={classes.hearder}\r\n        avatar={\r\n          <StyledBadge\r\n            overlap=\"circle\"\r\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n            variant= { online ? \"dot\" : \"standard\" }\r\n          >\r\n            <Avatar \r\n              className={classes.sizeAvatarSmall} \r\n              alt=\"nhadatmoi.net\" \r\n              src=\"https://image.crisp.chat/avatar/operator/da8d4459-5ea3-4119-bca1-9170f49ee69c/240/?1585999578742&quot\"\r\n            />\r\n          </StyledBadge>\r\n        }\r\n        title=\"Nguyễn Thanh Huyền\"\r\n        action={\r\n          <IconButton color='inherit' aria-label=\"settings\" onClick={() => onCloseChat()} >\r\n            <CloseIcon/>\r\n          </IconButton>\r\n        }\r\n      />\r\n    )\r\n  }\r\n  const setChangeInput = (value: any) => {\r\n    setValueInput(value)\r\n  }\r\n  const searchGiphy = async (event: any)=>  { \r\n    setValueSearchGiphy(event.target.value)\r\n    let url = `https://api.giphy.com/v1/gifs/search?api_key=UgTMyvovmg74m8fPN6qYiB623nwS1IPc&q=${event.target.value}&limit=20&offset=0&rating=G&lang=vi`\r\n    let getData = await axios.get(url, {})\r\n      .then(function (response) {\r\n        // setGiphyData(response.data.data)\r\n      })\r\n  }\r\n  // let dataSearch: any = []\r\n  let dataSearch = giphyDefault\r\n  // if(Array.isArray(giphyData)){\r\n  //   giphyData.map((item: any, index: number) => {\r\n  //     // dataSearch.push({ image:  item.images.original.url })\r\n  //     dataSearch.push({ \r\n  //       image: {\r\n  //         url: item.images.fixed_width.url,\r\n  //         height: item.images.fixed_width.height,\r\n  //         width: item.images.fixed_width.width,\r\n  //       }})\r\n  //   })\r\n  // }\r\n\r\n  const setItemGiphy = (index: number, name: string) => {\r\n    setOpenEmojiGiphy(!openEmojiGiphy)\r\n    if(name == \"giphyDefault\") {\r\n      arrChat.push({ \r\n        message: \"\", \r\n        type: 'user', \r\n        image: {\r\n          url: giphyDefault[index].image.url,\r\n          width: giphyDefault[index].image.width,\r\n          height: giphyDefault[index].image.height,\r\n        },\r\n        date: String(new Date().getTime()) \r\n      })\r\n    } else if ( name == \"dataSearch\") {\r\n      arrChat.push({ \r\n        message: \"\", \r\n        type: 'user', \r\n        image: {\r\n          url: giphyDefault[index].image.url,\r\n          width: giphyDefault[index].image.width,\r\n          height: giphyDefault[index].image.height,\r\n        },\r\n        date: String(new Date().getTime())\r\n      })\r\n    }\r\n  }\r\n\r\n  const onClickEmoji = (index: number) => {\r\n    valueInput = valueInput +  dataEmoji[index].native\r\n    setValueInput(valueInput)\r\n  }\r\n\r\n  const renderEmojiGiphy = () => {\r\n    return (\r\n      <div className={classes.emojiGiphy}>\r\n        <div className={classes.marinButtonEmojiGiphy}>\r\n          <button \r\n              className={classes.buttonEmojiGiphy} \r\n              onClick={() => setViewEmoji(true)} \r\n              style={{ backgroundColor: !viewEmoji ? \"#aaa\" : \"\" }}\r\n            > Biểu tượng\r\n            </button>\r\n            <button \r\n              className={classes.buttonEmojiGiphy} \r\n              onClick={() => setViewEmoji(false)} \r\n              style={{ backgroundColor: viewEmoji ? \"#aaa\" : \"\" }}\r\n            > Ảnh động\r\n            </button>\r\n        </div>\r\n        { !viewEmoji && <Paper component=\"form\" className={classes.rootPaper}>\r\n            <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\">\r\n              <SearchIcon />\r\n            </IconButton>\r\n            <InputBase\r\n              onChange={(e) => searchGiphy(e)}\r\n              className={classes.inputBaseGiphy}\r\n              placeholder=\"Tìm kiếm\"\r\n            />\r\n          </Paper>}\r\n        { viewEmoji \r\n          ? <div className={classes.overflowHeightEmoji}>\r\n            {dataEmoji.map((item: any, index: number) => {\r\n              return (\r\n                <div \r\n                  onClick={() => onClickEmoji(index)} \r\n                  key={index} \r\n                  className={classes.itemEmoji}\r\n                >\r\n                  {item.native}\r\n                </div>\r\n              )\r\n            })}\r\n          </div>\r\n          : <div className={classes.overflowHeightGiphy}>\r\n              {valueSearchGiphy \r\n                ? dataSearch.map((item: any, index: number) => {\r\n                    return (\r\n                      <div className={classes.dispalyImageGiphy} >\r\n                        <img \r\n                          className={classes.imgListGiphy} \r\n                          alt=\"giphy\" \r\n                          src={item.image.url} \r\n                          onClick={() => setItemGiphy(index, \"dataSearch\")} \r\n                        />\r\n                      </div>\r\n                    )\r\n                  })\r\n                : giphyDefault.map((item: any, index: number) => {\r\n                    return (\r\n                      <div className={classes.dispalyImageGiphy} >\r\n                        <img \r\n                          className={classes.imgListGiphy} \r\n                          alt=\"giphy\" \r\n                          src={item.image.url} \r\n                          onClick={() => setItemGiphy(index, \"giphyDefault\")} \r\n                        />\r\n                      </div>\r\n                    )\r\n                  })\r\n              }\r\n            </div>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const renderContentChat = () => {\r\n    return (\r\n      <div className={classes.overflowHeightEmojiGiphy}>\r\n        <Typography align=\"center\" className={classes.textSizeNewDate}>\r\n          {moment().format('LLL')}\r\n        </Typography>\r\n        <Divider />\r\n        {arrChat.map((item: any, index: number) => {\r\n          let checkNewDate = false\r\n          if(index > 0 && (moment(Number(arrChat[index - 1].date)).format('YYYY-MM-DD') != moment(Number(arrChat[index].date)).format('YYYY-MM-DD'))) {\r\n            checkNewDate = true\r\n          }\r\n          let setViewAvatar = false\r\n          if(item.type === 'admin' && index > 0) {\r\n            if((index === arrChat.length) || (arrChat[index - 1].type != arrChat[index].type)){\r\n              setViewAvatar = true\r\n            }\r\n          } else if(item.type === 'admin' && index === 0 ) {\r\n            setViewAvatar = true\r\n          }\r\n          console.log(\"setViewAvatar\", setViewAvatar)\r\n          return (\r\n            <div key={index}>\r\n              { checkNewDate && <Typography align=\"center\" className={classes.textSizeNewDate}>\r\n                {moment(Number(item.date)).format(\"LLL\")} <Divider /></Typography>}\r\n              { item.type === 'admin' \r\n              ? <ThemeProvider theme={themeTextfieldAdmin}>\r\n                  <div className={classes.viewAvatarChatContent}>\r\n                    {\r\n                      setViewAvatar \r\n                      ? <Avatar \r\n                          className={classes.avatarAdminText} \r\n                          alt=\"nhadatmoi.net\" \r\n                          src=\"https://image.crisp.chat/avatar/operator/da8d4459-5ea3-4119-bca1-9170f49ee69c/240/?1585999578742&quot\"\r\n                        />\r\n                      : \"\"\r\n                    }\r\n                  </div>\r\n                  <div className={classes.textFieldChatContent}>\r\n                    {\r\n                      item.image.url \r\n                      ? <Tooltip title={moment(Number(item.date)).fromNow()} placement=\"top\">\r\n                          <div className={classes.viewContentImageGiphy} style={{ width: `${item.image.width}px`, height: `${item.image.height}px`}} >\r\n                            <img \r\n                              className={classes.imgGiphy} \r\n                              alt=\"giphy\" \r\n                              src={item.image.url} \r\n                            />\r\n                          </div>\r\n                        </Tooltip>\r\n                      : <Tooltip title={moment(Number(item.date)).fromNow()} placement=\"top\">\r\n                          <TextField \r\n                            fullWidth\r\n                            label=\"\"\r\n                            className={classes.textAdmin}\r\n                            value={item.message}\r\n                            margin=\"dense\"\r\n                            id=\"outlined-basic\" \r\n                            multiline={true}\r\n                            InputProps={{\r\n                              readOnly: true\r\n                            }}\r\n                            variant=\"outlined\" \r\n                          />\r\n                        </Tooltip>\r\n                    }\r\n                  </div>\r\n                </ThemeProvider>\r\n              : <ThemeProvider theme={themeTextfieldUser}>\r\n                  {\r\n                    item.image.url\r\n                    ? <Tooltip title={moment(Number(item.date)).fromNow()} placement=\"top\">\r\n                        <div className={classes.viewContentImageGiphy} style={{ width: `${item.image.width}px`, height: `${item.image.height}px`}} >\r\n                          <img \r\n                            className={classes.imgGiphy} \r\n                            alt=\"giphy\" \r\n                            src={item.image.url} \r\n                          />\r\n                        </div>\r\n                      </Tooltip>\r\n                    : <Tooltip title={moment(Number(item.date)).fromNow()} placement=\"top\">\r\n                        <div className={classes.textFieldUserChatContent}>\r\n                          <TextField \r\n                            fullWidth\r\n                            label=\"\"\r\n                            className={classes.textUser}\r\n                            value={item.message}\r\n                            margin=\"dense\"\r\n                            id=\"outlined-basic\" \r\n                            multiline={true}\r\n                            InputProps={{\r\n                              readOnly: true\r\n                            }}\r\n                            variant=\"outlined\" \r\n                          /> \r\n                        </div>\r\n                      </Tooltip>\r\n                  }\r\n                </ThemeProvider>\r\n              }\r\n            </div>\r\n          )\r\n        })}\r\n        <div>\r\n          {openEmojiGiphy && renderEmojiGiphy()}\r\n        </div>\r\n        <div>\r\n          <img id='output' />\r\n        </div>\r\n        {/* {!internet \r\n          ? <p className={classes.errInternet}>\r\n              <u>Không thể gửi tin nhắn này. Kiểm tra kết nối internet và thử lại</u>\r\n            </p>\r\n          : \"\"\r\n        }\r\n        {texting && <p className={classes.texting}>Đang nhập ...</p>} */}\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  const [viewEmoji, setViewEmoji] = React.useState(false)\r\n  const onClickOpenEmojiGiphy = () => {\r\n    setOpenEmojiGiphy(!openEmojiGiphy) \r\n    setViewEmoji(true)\r\n  }\r\n \r\n  const renderInput = () => {\r\n    return (\r\n      <Paper component=\"form\" className={classes.inputBase}>\r\n        <ThemeProvider theme={theme}>\r\n          <Input \r\n            fullWidth\r\n            // disabled={internet}\r\n            margin=\"dense\"\r\n            id=\"outlined-basic\" \r\n            autoFocus={true}\r\n            // value={valueInput}\r\n            value={valueInput}\r\n            multiline={true}\r\n            onChange={(e) => setChangeInput(e.target.value)}\r\n            onKeyPress={(e) => setOnKeyPress(e)}\r\n            onBlur={(e) => setOnBlur(e)}\r\n            onKeyDown={(e) => setOnKeyDown(e)}\r\n            placeholder=\"Nhập tin nhắn ...\"\r\n            autoComplete=\"false\"\r\n          />\r\n          { openEmojiGiphy \r\n            ? <Tooltip title=\"Chèn biểu tượng\" placement=\"top\"> \r\n                <ExpandMoreIcon \r\n                  className={classes.sizeIcon}\r\n                  onClick={onClickOpenEmojiGiphy}\r\n                  color=\"primary\"\r\n                />\r\n              </Tooltip> \r\n            : <Tooltip title=\"Chèn biểu tượng\" placement=\"top\"> \r\n                <TagFacesIcon \r\n                  className={classes.sizeIcon}\r\n                  onClick={onClickOpenEmojiGiphy}\r\n                  color=\"primary\"\r\n                />\r\n              </Tooltip>\r\n          }\r\n          { valueInput\r\n            ? <Tooltip title=\"Thêm tập tin\" placement=\"top\">\r\n                <SendIcon \r\n                  onClick={senMesssage} \r\n                  className={classes.sizeIcon} color=\"primary\"\r\n                />\r\n              </Tooltip>\r\n            : <Tooltip title=\"Thêm tập tin\" placement=\"top\">\r\n                <AddCircleOutlineIcon \r\n                  onChange={upLoadImage}\r\n                  className={classes.sizeIcon} \r\n                  color=\"primary\"\r\n                /> \r\n              </Tooltip>\r\n          }\r\n        </ThemeProvider>\r\n      </Paper>\r\n    )\r\n  }\r\n  \r\n  const viewChat = () => {\r\n    return (\r\n      <Popper \r\n        open={open} \r\n        anchorEl={anchorEl}\r\n        placement={placement} \r\n        transition\r\n      >\r\n        {({ TransitionProps }) => (\r\n          <Fade {...TransitionProps} timeout={300}>\r\n            <Paper>\r\n              <div className={classes.positionSizeViewChat} >\r\n                {renderHeader()}\r\n                {renderContentChat()}\r\n                {renderInput()}\r\n              </div>\r\n            </Paper>\r\n          </Fade>\r\n        )}\r\n      </Popper>\r\n    )\r\n  }\r\n\r\n  const handleClick = (newPlacement: PopperPlacementType) => {\r\n    setOpen(true)\r\n    setPlacement(newPlacement);\r\n  }\r\n\r\n  const renderAvatar = () => {\r\n    return (\r\n      <div className={classes.positionAvatar}>\r\n        <StyledBadge\r\n          overlap=\"circle\"\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'right',\r\n          }}\r\n          // variant= { online ? \"dot\" : \"standard\" }\r\n        >\r\n          <Avatar \r\n            onClick={() => handleClick(\"top-start\")}\r\n            className={classes.large} \r\n            alt=\"nhadatmoi.net\" \r\n            src=\"https://image.crisp.chat/avatar/operator/da8d4459-5ea3-4119-bca1-9170f49ee69c/240/?1585999578742&quot\"\r\n            // src=\"https://file.vforum.vn/hinh/2018/03/hinh-mau-trang-tinh-tron-hinh-nen-anh-dai-dien-anh-bia-toan-mau-trang1.png\"\r\n          />\r\n        </StyledBadge>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {viewChat()}\r\n      <Grid container justify=\"center\">\r\n        <Grid item>\r\n          { !open && renderAvatar()}\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
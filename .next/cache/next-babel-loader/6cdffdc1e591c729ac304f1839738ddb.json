{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"C:\\\\Users\\\\manh nhan\\\\Desktop\\\\Nhadatmoi\\\\components\\\\Search\\\\Search.form.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { Button } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport Validator from \"../../modules/validator\";\nimport { localDataSearch } from \"../../constants\";\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: '0px 0px',\n    boxShadow: \"0px\",\n    display: 'flex',\n    width: \"700px\"\n  },\n  textFieldSearch: {\n    width: \"500px\"\n  },\n  paper: {\n    maxHeight: \"55vh\",\n    lineHeight: 1,\n    fontSize: \"15px\",\n    color: \"red\"\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  },\n  divider: {\n    height: 28,\n    margin: 4\n  }\n}));\n// let theme = createMuiTheme({\n//   overrides: {\n//     MuiAutocomplete: {   \n//       paper: {  \n//         color: 'red',\n//         lineHeight: 1,\n//         maxHeight: \"80vh\",\n//         fontSize: \"15px\"\n//       },\n//       option: {\n//         minHeight: \"30px\",\n//       }\n//     },\n//   },\n// });\nlet data = [{\n  title: \"Amata City Long Thành\",\n  index: 0\n}, {\n  title: \"Hội An Golden Sea\",\n  index: 1\n}, {\n  title: \"Civilized Center City\",\n  index: 2\n}, {\n  title: \"Ecopark Hải Dương - Ecorivers\",\n  index: 3\n}, {\n  title: \"TD Plaza Cần Thơ\",\n  index: 4\n}, {\n  title: \"DC Tower\",\n  index: 5\n}, {\n  title: \"Long Thành Airport City\",\n  index: 6\n}, {\n  title: \"Khu đô thị Rùa Vàng City\",\n  index: 7\n}, {\n  title: \"Avalon Saigon Apartments\",\n  index: 8\n}, {\n  title: \"Khu phố chợ Điện Nam Bắc\",\n  index: 9\n}, {\n  title: \"Khu đô thị Sao Mai Xuân Thịnh\",\n  index: 10\n}, {\n  title: \"Eco Smart City\",\n  index: 11\n}];\nconst dataShoes = [{\n  title: \"Túi sách hàng hiệu nhật\",\n  year: 101\n}, {\n  title: \"Túi sách hàng hiệu hàn quốc\",\n  year: 102\n}, {\n  title: \"cặp sách đi học\",\n  year: 103\n}, {\n  title: \"Túi kéo\",\n  year: 104\n}, {\n  title: 'Túi thời trang',\n  year: 105\n}];\n\nconst SearchForm = props => {\n  const classes = useStyles();\n  const [valueSearch, setValueSearch] = React.useState(\"\");\n  let dataSearch = new Array();\n  useEffect(() => {\n    let arraySearch = new Array();\n    localStorage.setItem(localDataSearch, _JSON$stringify(arraySearch));\n    dataSearch = JSON.parse(localStorage.getItem(localDataSearch));\n\n    if (!Validator.isBlank(localStorage.getItem(localDataSearch))) {\n      localStorage.setItem(localDataSearch, _JSON$stringify(dataSearch));\n    }\n  }, []);\n\n  const onChangeSearch = e => {\n    setValueSearch(e.target.value);\n  };\n\n  const onBlur = e => {\n    if (e.target.value) {\n      dataSearch.unshift({\n        title: e.target.value,\n        year: dataSearch.length + 1\n      });\n\n      if (dataSearch.length == 4) {\n        dataSearch.splice(3, 1);\n      }\n\n      localStorage.setItem(localDataSearch, _JSON$stringify(dataSearch));\n    }\n\n    console.log(\"xxxx\", dataSearch);\n  };\n\n  return __jsx(\"div\", {\n    className: classes.root,\n    style: {\n      display: \"flex\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, __jsx(Autocomplete, {\n    freeSolo: true // Clear icon show\n    ,\n    autoHighlight: true // auto hover first item or select item last\n    // autoSelect={true} // Auto Select item\n    // selectOnFocus={true}\n    // popupIcon={<SearchIcon />} // Icon select show data\n    ,\n    closeIcon: false //{<CloseIcon fontSize=\"small\" />} clear icon show data\n    // options={ valueSearch ? dataProject :  dataSearch.concat(data)}\n    ,\n    options: data,\n    getOptionLabel: option => option.title,\n    size: \"small\",\n    renderInput: params => __jsx(TextField, _extends({}, params, {\n      className: classes.textFieldSearch,\n      variant: \"outlined\",\n      onChange: e => onChangeSearch(e),\n      onBlur: e => onBlur(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }), __jsx(Button, {\n    size: \"small\",\n    color: \"primary\",\n    className: classes.iconButton,\n    \"aria-label\": \"directions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, __jsx(SearchIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }), \"T\\xECm ki\\u1EBFm\"));\n};\n\nexport default SearchForm;","map":{"version":3,"sources":["C:/Users/manh nhan/Desktop/Nhadatmoi/components/Search/Search.form.tsx"],"names":["React","useEffect","Button","SearchIcon","Autocomplete","TextField","Validator","localDataSearch","makeStyles","useStyles","theme","root","padding","boxShadow","display","width","textFieldSearch","paper","maxHeight","lineHeight","fontSize","color","input","marginLeft","spacing","flex","iconButton","divider","height","margin","data","title","index","dataShoes","year","SearchForm","props","classes","valueSearch","setValueSearch","useState","dataSearch","Array","arraySearch","localStorage","setItem","JSON","parse","getItem","isBlank","onChangeSearch","e","target","value","onBlur","unshift","length","splice","console","log","option","params"],"mappings":"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","sourcesContent":["import React, { FunctionComponent, useEffect, useState } from 'react'\r\nimport { InputBase, Button, Paper, Divider, IconButton } from '@material-ui/core'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport InputAdornment from '@material-ui/core/InputAdornment'\r\nimport AccountCircle from '@material-ui/icons/AccountCircle'\r\nimport DirectionsIcon from '@material-ui/icons/Directions'\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Validator from \"../../modules/validator\";\r\nimport { localDataSearch } from \"../../constants\";\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    padding: '0px 0px',\r\n    boxShadow: \"0px\",\r\n    display: 'flex',\r\n    width: \"700px\",\r\n  },\r\n  textFieldSearch: {\r\n    width: \"500px\"\r\n  },\r\n  paper: {\r\n    maxHeight: \"55vh\",\r\n    lineHeight: 1,\r\n    fontSize: \"15px\",\r\n    color: \"red\",\r\n  },\r\n  input: {\r\n    marginLeft: theme.spacing(1),\r\n    flex: 1,\r\n  },\r\n  iconButton: {\r\n    padding: 10,\r\n  },\r\n  divider: {\r\n    height: 28,\r\n    margin: 4,\r\n  },\r\n}))\r\n\r\n\r\ninterface PropsData {\r\n\r\n}\r\n\r\n\r\n\r\n// let theme = createMuiTheme({\r\n//   overrides: {\r\n//     MuiAutocomplete: {   \r\n//       paper: {  \r\n//         color: 'red',\r\n//         lineHeight: 1,\r\n//         maxHeight: \"80vh\",\r\n//         fontSize: \"15px\"\r\n//       },\r\n//       option: {\r\n//         minHeight: \"30px\",\r\n//       }\r\n//     },\r\n//   },\r\n// });\r\n\r\nlet data = [\r\n  { title: \"Amata City Long Thành\", index: 0},\r\n  { title: \"Hội An Golden Sea\", index: 1 },\r\n  { title: \"Civilized Center City\", index: 2 },\r\n  { title: \"Ecopark Hải Dương - Ecorivers\", index: 3 },\r\n  { title: \"TD Plaza Cần Thơ\", index: 4 },\r\n  { title: \"DC Tower\", index: 5 },\r\n  { title: \"Long Thành Airport City\", index: 6 },\r\n  { title: \"Khu đô thị Rùa Vàng City\", index: 7 },\r\n  { title: \"Avalon Saigon Apartments\", index: 8 },\r\n  { title: \"Khu phố chợ Điện Nam Bắc\", index: 9 },\r\n  { title: \"Khu đô thị Sao Mai Xuân Thịnh\", index: 10 },\r\n  { title: \"Eco Smart City\", index: 11 },\r\n]\r\n\r\nconst dataShoes = [\r\n  { title: \"Túi sách hàng hiệu nhật\", year: 101 },\r\n  { title: \"Túi sách hàng hiệu hàn quốc\", year: 102 },\r\n  { title: \"cặp sách đi học\", year: 103 },\r\n  { title: \"Túi kéo\", year: 104 },\r\n  { title: 'Túi thời trang', year: 105 },\r\n]\r\n\r\n\r\nconst SearchForm: FunctionComponent<PropsData> = (props: PropsData) => {\r\n  const classes = useStyles()\r\n  const [valueSearch, setValueSearch] = React.useState(\"\") \r\n\r\n  let dataSearch = new Array()\r\n\r\n  useEffect(() => {\r\n    let arraySearch = new Array()    \r\n    localStorage.setItem(localDataSearch, JSON.stringify(arraySearch))\r\n    dataSearch = JSON.parse(localStorage.getItem(localDataSearch) as string) \r\n    if(!Validator.isBlank(localStorage.getItem(localDataSearch))) {\r\n      localStorage.setItem(localDataSearch, JSON.stringify(dataSearch))\r\n    } \r\n  }, []);\r\n\r\n  const onChangeSearch = (e: any) => {\r\n    setValueSearch(e.target.value)\r\n  }\r\n\r\n  const onBlur = (e: any) => {\r\n    if(e.target.value){\r\n      dataSearch.unshift({ title: e.target.value, year: dataSearch.length + 1 })\r\n      if(dataSearch.length == 4){\r\n        dataSearch.splice(3, 1)        \r\n      }\r\n      localStorage.setItem(localDataSearch, JSON.stringify(dataSearch))\r\n    }\r\n    console.log(\"xxxx\", dataSearch)\r\n  }\r\n\r\n  return (\r\n    <div  className={classes.root} style={{ display: \"flex\" }} > \r\n      {/* <ThemeProvider theme={theme}> */}\r\n      {/* <ThemeProvider> */}\r\n        <Autocomplete\r\n          freeSolo // Clear icon show\r\n          autoHighlight={true} // auto hover first item or select item last\r\n          // autoSelect={true} // Auto Select item\r\n          // selectOnFocus={true}\r\n          // popupIcon={<SearchIcon />} // Icon select show data\r\n          closeIcon={false} //{<CloseIcon fontSize=\"small\" />} clear icon show data\r\n          // options={ valueSearch ? dataProject :  dataSearch.concat(data)}\r\n          options={data}\r\n          getOptionLabel={option => option.title}\r\n          size=\"small\"\r\n          \r\n          renderInput={ params => \r\n            <TextField \r\n              {...params} \r\n              className={classes.textFieldSearch}\r\n              variant=\"outlined\"\r\n              onChange={(e: any) => onChangeSearch(e)}\r\n              onBlur={(e: any) => onBlur(e)}\r\n            /> \r\n          }\r\n        />\r\n      {/* </ThemeProvider> */}\r\n      <Button size=\"small\" color=\"primary\" className={classes.iconButton} aria-label=\"directions\" >\r\n        <SearchIcon />Tìm kiếm\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchForm\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\manh nhan\\\\Desktop\\\\Nhadatmoi\\\\components\\\\Search\\\\Search.form.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Button } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport Validator from \"../../modules/validator\";\nimport { localDataSearch } from \"../../constants\";\nimport { makeStyles } from '@material-ui/core/styles';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      padding: '0px 0px',\n      boxShadow: \"0px\",\n      display: 'flex',\n      width: \"700px\"\n    },\n    textFieldSearch: {\n      width: \"500px\"\n    },\n    paper: {\n      maxHeight: \"55vh\",\n      lineHeight: 1,\n      fontSize: \"15px\",\n      color: \"red\"\n    },\n    input: {\n      marginLeft: theme.spacing(1),\n      flex: 1\n    },\n    iconButton: {\n      padding: 10\n    },\n    divider: {\n      height: 28,\n      margin: 4\n    }\n  };\n});\n\n// const dataSearch = new Array()\n// localStorage.setItem(localDataSearch, JSON.stringify(dataSearch))\n// let theme = createMuiTheme({\n//   overrides: {\n//     MuiAutocomplete: {   \n//       paper: {  \n//         color: 'red',\n//         lineHeight: 1,\n//         maxHeight: \"80vh\",\n//         fontSize: \"15px\"\n//       },\n//       option: {\n//         minHeight: \"30px\",\n//       }\n//     },\n//   },\n// });\nvar SearchForm = function SearchForm(props) {\n  var classes = useStyles();\n\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      valueSearch = _React$useState2[0],\n      setValueSearch = _React$useState2[1];\n\n  var dataProject = [{\n    title: \"Amata City Long Thành\",\n    index: 0\n  }, {\n    title: \"Hội An Golden Sea\",\n    index: 1\n  }, {\n    title: \"Civilized Center City\",\n    index: 2\n  }, {\n    title: \"Ecopark Hải Dương - Ecorivers\",\n    index: 3\n  }, {\n    title: \"TD Plaza Cần Thơ\",\n    index: 4\n  }, {\n    title: \"DC Tower\",\n    index: 5\n  }, {\n    title: \"Long Thành Airport City\",\n    index: 6\n  }, {\n    title: \"Khu đô thị Rùa Vàng City\",\n    index: 7\n  }, {\n    title: \"Avalon Saigon Apartments\",\n    index: 8\n  }, {\n    title: \"Khu phố chợ Điện Nam Bắc\",\n    index: 9\n  }, {\n    title: \"Khu đô thị Sao Mai Xuân Thịnh\",\n    index: 10\n  }, {\n    title: \"Eco Smart City\",\n    index: 11\n  }];\n  var data = [{\n    title: \"Túi sách hàng hiệu nhật\",\n    year: 101\n  }, {\n    title: \"Túi sách hàng hiệu hàn quốc\",\n    year: 102\n  }, {\n    title: \"cặp sách đi học\",\n    year: 103\n  }, {\n    title: \"Túi kéo\",\n    year: 104\n  }, {\n    title: 'Túi thời trang',\n    year: 105\n  }];\n\n  var onChangeSearch = function onChangeSearch(e) {\n    setValueSearch(e.target.value);\n  };\n\n  var dataSearch = JSON.parse(localStorage.getItem(localDataSearch));\n\n  if (!Validator.isBlank(localStorage.getItem(localDataSearch))) {\n    localStorage.setItem(localDataSearch, _JSON$stringify(dataSearch));\n  }\n\n  var _onBlur = function onBlur(e) {// if(e.target.value){\n    //   dataSearch.unshift({ title: e.target.value, year: dataSearch.length + 1 })\n    //   if(dataSearch.length == 4){\n    //     dataSearch.splice(3, 1)        \n    //   }\n    // }\n    // localStorage.setItem(localDataSearch, JSON.stringify(dataSearch))\n  };\n\n  return __jsx(\"div\", {\n    className: classes.root,\n    style: {\n      display: \"flex\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, __jsx(Autocomplete, {\n    freeSolo: true // Clear icon show\n    ,\n    autoHighlight: true // auto hover first item or select item last\n    // autoSelect={true} // Auto Select item\n    // selectOnFocus={true}\n    // popupIcon={<SearchIcon />} // Icon select show data\n    ,\n    closeIcon: false //{<CloseIcon fontSize=\"small\" />} clear icon show data\n    // options={ valueSearch ? dataProject :  dataSearch.concat(data)}\n    ,\n    options: data,\n    getOptionLabel: function getOptionLabel(option) {\n      return option.title;\n    },\n    size: \"small\",\n    renderInput: function renderInput(params) {\n      return __jsx(TextField, _extends({}, params, {\n        className: classes.textFieldSearch,\n        variant: \"outlined\",\n        onChange: function onChange(e) {\n          return onChangeSearch(e);\n        },\n        onBlur: function onBlur(e) {\n          return _onBlur(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }), __jsx(Button, {\n    size: \"small\",\n    color: \"primary\",\n    className: classes.iconButton,\n    \"aria-label\": \"directions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, __jsx(SearchIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }), \"T\\xECm ki\\u1EBFm\"));\n};\n\nexport default SearchForm;","map":{"version":3,"sources":["C:/Users/manh nhan/Desktop/Nhadatmoi/components/Search/Search.form.tsx"],"names":["React","Button","SearchIcon","Autocomplete","TextField","Validator","localDataSearch","makeStyles","useStyles","theme","root","padding","boxShadow","display","width","textFieldSearch","paper","maxHeight","lineHeight","fontSize","color","input","marginLeft","spacing","flex","iconButton","divider","height","margin","SearchForm","props","classes","useState","valueSearch","setValueSearch","dataProject","title","index","data","year","onChangeSearch","e","target","value","dataSearch","JSON","parse","localStorage","getItem","isBlank","setItem","onBlur","option","params"],"mappings":"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","sourcesContent":["import React, { FunctionComponent } from 'react'\r\nimport { InputBase, Button, Paper, Divider, IconButton } from '@material-ui/core'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport InputAdornment from '@material-ui/core/InputAdornment'\r\nimport AccountCircle from '@material-ui/icons/AccountCircle'\r\nimport DirectionsIcon from '@material-ui/icons/Directions'\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Validator from \"../../modules/validator\";\r\nimport { localDataSearch } from \"../../constants\";\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    padding: '0px 0px',\r\n    boxShadow: \"0px\",\r\n    display: 'flex',\r\n    width: \"700px\",\r\n  },\r\n  textFieldSearch: {\r\n    width: \"500px\"\r\n  },\r\n  paper: {\r\n    maxHeight: \"55vh\",\r\n    lineHeight: 1,\r\n    fontSize: \"15px\",\r\n    color: \"red\",\r\n  },\r\n  input: {\r\n    marginLeft: theme.spacing(1),\r\n    flex: 1,\r\n  },\r\n  iconButton: {\r\n    padding: 10,\r\n  },\r\n  divider: {\r\n    height: 28,\r\n    margin: 4,\r\n  },\r\n}))\r\n\r\n\r\ninterface PropsData {\r\n\r\n}\r\n// const dataSearch = new Array()\r\n// localStorage.setItem(localDataSearch, JSON.stringify(dataSearch))\r\n// let theme = createMuiTheme({\r\n//   overrides: {\r\n//     MuiAutocomplete: {   \r\n//       paper: {  \r\n//         color: 'red',\r\n//         lineHeight: 1,\r\n//         maxHeight: \"80vh\",\r\n//         fontSize: \"15px\"\r\n//       },\r\n//       option: {\r\n//         minHeight: \"30px\",\r\n//       }\r\n//     },\r\n//   },\r\n// });\r\n\r\nconst SearchForm: FunctionComponent<PropsData> = (props: PropsData) => {\r\n  const classes = useStyles()\r\n  const [valueSearch, setValueSearch] = React.useState(\"\") \r\n\r\n  let dataProject = [\r\n    { title: \"Amata City Long Thành\", index: 0},\r\n    { title: \"Hội An Golden Sea\", index: 1 },\r\n    { title: \"Civilized Center City\", index: 2 },\r\n    { title: \"Ecopark Hải Dương - Ecorivers\", index: 3 },\r\n    { title: \"TD Plaza Cần Thơ\", index: 4 },\r\n    { title: \"DC Tower\", index: 5 },\r\n    { title: \"Long Thành Airport City\", index: 6 },\r\n    { title: \"Khu đô thị Rùa Vàng City\", index: 7 },\r\n    { title: \"Avalon Saigon Apartments\", index: 8 },\r\n    { title: \"Khu phố chợ Điện Nam Bắc\", index: 9 },\r\n    { title: \"Khu đô thị Sao Mai Xuân Thịnh\", index: 10 },\r\n    { title: \"Eco Smart City\", index: 11 },\r\n  ]\r\n  const data = [\r\n    { title: \"Túi sách hàng hiệu nhật\", year: 101 },\r\n    { title: \"Túi sách hàng hiệu hàn quốc\", year: 102 },\r\n    { title: \"cặp sách đi học\", year: 103 },\r\n    { title: \"Túi kéo\", year: 104 },\r\n    { title: 'Túi thời trang', year: 105 },\r\n  ]\r\n\r\n  const onChangeSearch = (e: any) => {\r\n    setValueSearch(e.target.value)\r\n  }\r\n\r\n  let dataSearch = JSON.parse(localStorage.getItem(localDataSearch) as string) \r\n  if(!Validator.isBlank(localStorage.getItem(localDataSearch))) {\r\n    localStorage.setItem(localDataSearch, JSON.stringify(dataSearch))\r\n  }\r\n\r\n  const onBlur = (e: any) => {\r\n    // if(e.target.value){\r\n    //   dataSearch.unshift({ title: e.target.value, year: dataSearch.length + 1 })\r\n    //   if(dataSearch.length == 4){\r\n    //     dataSearch.splice(3, 1)        \r\n    //   }\r\n    // }\r\n    // localStorage.setItem(localDataSearch, JSON.stringify(dataSearch))\r\n  }\r\n\r\n  return (\r\n    <div  className={classes.root} style={{ display: \"flex\" }} > \r\n      {/* <ThemeProvider theme={theme}> */}\r\n      {/* <ThemeProvider> */}\r\n        <Autocomplete\r\n          freeSolo // Clear icon show\r\n          autoHighlight={true} // auto hover first item or select item last\r\n          // autoSelect={true} // Auto Select item\r\n          // selectOnFocus={true}\r\n          // popupIcon={<SearchIcon />} // Icon select show data\r\n          closeIcon={false} //{<CloseIcon fontSize=\"small\" />} clear icon show data\r\n          // options={ valueSearch ? dataProject :  dataSearch.concat(data)}\r\n          options={data}\r\n          getOptionLabel={option => option.title}\r\n          size=\"small\"\r\n          \r\n          renderInput={ params => \r\n            <TextField \r\n              {...params} \r\n              className={classes.textFieldSearch}\r\n              variant=\"outlined\"\r\n              onChange={(e: any) => onChangeSearch(e)}\r\n              onBlur={(e: any) => onBlur(e)}\r\n            /> \r\n          }\r\n        />\r\n      {/* </ThemeProvider> */}\r\n      <Button size=\"small\" color=\"primary\" className={classes.iconButton} aria-label=\"directions\" >\r\n        <SearchIcon />Tìm kiếm\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchForm\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\manh nhan\\\\Desktop\\\\Nhadatmoi\\\\pages\\\\chu-dau-tu\\\\[slug].tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\n//Import Components\nimport Layout from '../../components/Layout/Layout';\nimport DetailInvestor from \"../../components/Investor/DetailInvestor\"; //Import Const\n\nimport { apolloClient } from \"../../utils\";\nimport { GET_INVESTOR_BY_ID } from \"../../graphql/investor/queries\"; //Import Module\n\nimport StringProcess from \"../../modules/stringProcess\";\nimport \"../../assets/scss/style.scss\";\nimport { localStorageCompareKey, mainURL } from \"../../constants\";\nimport urlProcess from \"../../modules/urlProcess\";\nimport Validator from \"../../modules/validator\";\n\n// @ts-ignore\nvar ProjectDetailPage = function ProjectDetailPage(props) {\n  var title = props.projectDetail.data.project.name ? props.projectDetail.data.project.name : 'Xem chi tiết dự án';\n  var albumImage = props.projectDetail.data.project.image;\n  var typeProject = '';\n  var statusProject = '';\n  var yearBuildProject = '';\n\n  var square = __jsx(React.Fragment, null, \"m\", __jsx(\"sup\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"2\"));\n\n  var areaString = __jsx(React.Fragment, null, StringProcess.addCommas(props.projectDetail.data.project.land_area), \" \", square);\n\n  var imageAvatar = 'https://static.nhadatmoi.net/default/home_default.jpg';\n\n  if (props.projectDetail.data.project.cover_image) {\n    imageAvatar = urlProcess.processImageUrl(props.projectDetail.data.project.cover_image, 'project');\n  }\n\n  var freshText = function freshText(input) {\n    input = StringProcess.stripProperties(input, []);\n    input = StringProcess.stripTags(input, '');\n    input = input.replace(/&nbsp;/g, ' ');\n    return input;\n  };\n\n  var convertDescription = function convertDescription(input) {\n    return input.replace(/&#(\\d+);/g, function (match, dec) {\n      return String.fromCharCode(dec);\n    });\n  };\n\n  var metaTitle = '';\n  var metaDescription = '';\n\n  if (props.projectDetail.data.project.seo_title) {\n    metaTitle = props.projectDetail.data.project.seo_title;\n  }\n\n  if (props.projectDetail.data.project.seo_description) {\n    metaDescription = props.projectDetail.data.project.seo_description;\n  }\n\n  if (metaTitle === '' || !metaTitle) {\n    metaTitle = title;\n  }\n\n  if (metaDescription === '' || !metaDescription) {\n    metaDescription = freshText(props.projectDetail.data.project.intro_content);\n    metaDescription = convertDescription(metaDescription);\n    metaDescription = StringProcess.truncateString(metaDescription, 255, '');\n  }\n\n  var initStateInvestor = {\n    id: \"\",\n    name: \"\",\n    description: \"\",\n    slug: \"\",\n    email: \"\",\n    website: \"\",\n    image: \"\",\n    address: {\n      text: \"\"\n    },\n    phone: \"\",\n    mobile: \"\"\n  }; //Count Ad Sell Lease\n\n  var _React$useState = React.useState(initStateInvestor),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      investor = _React$useState2[0],\n      setInvestor = _React$useState2[1];\n\n  useEffect(function () {\n    // let projectId = props.projectDetail.data.project.id;\n    // apolloClient.mutate({mutation: COUNT_VIEW_PROJECT, variables: {\n    //     \"input\": {\n    //       \"id\": projectId\n    //     }\n    //   }}).then((response: any) => {\n    // });\n    var investorId = props.projectDetail.data.project.investor;\n    apolloClient.query({\n      query: GET_INVESTOR_BY_ID,\n      variables: {\n        \"id\": investorId\n      }\n    }).then(function (response) {\n      if (!Validator.isBlank(response.data) && !Validator.isBlank(response.data.investor)) {\n        setInvestor(response.data.investor);\n      }\n    });\n  }, []);\n\n  var _React$useState3 = React.useState({}),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      dataCompare = _React$useState4[0],\n      setDataCompare = _React$useState4[1];\n\n  var updateCompareData = function updateCompareData(data) {\n    var dataToCompare = [];\n    var isAddToLocal = true;\n\n    if (localStorage.getItem(localStorageCompareKey) && !Validator.isBlank(localStorage.getItem(localStorageCompareKey))) {\n      dataToCompare = JSON.parse(localStorage.getItem(localStorageCompareKey));\n\n      for (var index in dataToCompare) {\n        if (dataToCompare[index].id === data.id) {\n          isAddToLocal = false;\n        }\n\n        if (dataToCompare[index].type !== data.type) {\n          localStorage.removeItem(localStorageCompareKey);\n          dataToCompare = [];\n          break;\n        }\n      }\n    }\n\n    if (isAddToLocal) {\n      dataToCompare.push(data); // @ts-ignore\n\n      setDataCompare(dataToCompare);\n      localStorage.setItem(localStorageCompareKey, _JSON$stringify(dataToCompare));\n    }\n  };\n\n  var propertyOverview = {\n    id: props.projectDetail.data.project.id,\n    video: props.projectDetail.data.project.video,\n    building_density: '',\n    financial_support: props.projectDetail.data.project.financial_support,\n    type: typeProject,\n    status: statusProject,\n    floor_number: 0,\n    living_room_number: 0,\n    bed_room_number: 0,\n    toilet_room_number: 0,\n    gara_number: 0,\n    material: '',\n    length: '',\n    width: '',\n    price: \"\",\n    area: areaString,\n    year_built: yearBuildProject,\n    address: props.projectDetail.data.project.address,\n    size: '-',\n    description: props.projectDetail.data.project.intro_content,\n    map: {\n      lat: props.projectDetail.data.project.google_map_latitude,\n      lng: props.projectDetail.data.project.google_map_longitude\n    },\n    title: title,\n    view_count: props.projectDetail.data.project.view_count,\n    updated_at: props.projectDetail.data.project.updated_at,\n    created_at: props.projectDetail.data.project.created_at,\n    position_content: props.projectDetail.data.project.position_content,\n    infrastructure_content: props.projectDetail.data.project.infrastructure_content\n  };\n  var contactDefault = {\n    image: '',\n    name: '',\n    address: '',\n    mobile: '',\n    phone: '',\n    email: ''\n  };\n  return __jsx(Layout, _extends({\n    title: metaTitle,\n    description: metaDescription\n  }, props, {\n    image: imageAvatar,\n    canonical: mainURL + '/chu-dau-tu/' + props.slug,\n    path: 'chu-dau-tu',\n    dataCompare: dataCompare,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  }), __jsx(DetailInvestor, {\n    investorId: props.projectDetail.data.project.investor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248\n    },\n    __self: this\n  }));\n}; // @ts-ignore\n// ProjectDetailPage.getInitialProps = async function(props: QueryProp) {\n//   console.log(\"props Chu dau tu Pages\", props)\n//   let projectSlug = props.query.slug;\n//   let projectDetail = await apolloClient.query({query: GET_PROJECT_BY_SLUG, variables: {\n//       \"slug\": projectSlug\n//     }}).then(response => {\n//     return response;\n//   });\n//   return {\n//     projectDetail: projectDetail,\n//     slug: projectSlug,\n//   };\n// };\n\n\nexport default ProjectDetailPage;","map":{"version":3,"sources":["C:/Users/manh nhan/Desktop/Nhadatmoi/pages/chu-dau-tu/[slug].tsx"],"names":["React","useEffect","Layout","DetailInvestor","apolloClient","GET_INVESTOR_BY_ID","StringProcess","localStorageCompareKey","mainURL","urlProcess","Validator","ProjectDetailPage","props","title","projectDetail","data","project","name","albumImage","image","typeProject","statusProject","yearBuildProject","square","areaString","addCommas","land_area","imageAvatar","cover_image","processImageUrl","freshText","input","stripProperties","stripTags","replace","convertDescription","match","dec","String","fromCharCode","metaTitle","metaDescription","seo_title","seo_description","intro_content","truncateString","initStateInvestor","id","description","slug","email","website","address","text","phone","mobile","useState","investor","setInvestor","investorId","query","variables","then","response","isBlank","dataCompare","setDataCompare","updateCompareData","dataToCompare","isAddToLocal","localStorage","getItem","JSON","parse","index","type","removeItem","push","setItem","propertyOverview","video","building_density","financial_support","status","floor_number","living_room_number","bed_room_number","toilet_room_number","gara_number","material","length","width","price","area","year_built","size","map","lat","google_map_latitude","lng","google_map_longitude","view_count","updated_at","created_at","position_content","infrastructure_content","contactDefault"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAGA;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,cAAP,MAA2B,0CAA3B,C,CAEA;;AACA,SAAQC,YAAR,QAA2B,aAA3B;AACA,SAAQC,kBAAR,QAAiC,gCAAjC,C,CACA;;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAO,8BAAP;AACA,SAAQC,sBAAR,EAAgCC,OAAhC,QAA8C,iBAA9C;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;AA2EA;AACA,IAAMC,iBAA2C,GAAG,SAA9CA,iBAA8C,CAACC,KAAD,EAA2B;AAC7E,MAAIC,KAAK,GAAID,KAAK,CAACE,aAAN,CAAoBC,IAApB,CAAyBC,OAAzB,CAAiCC,IAAlC,GAAwCL,KAAK,CAACE,aAAN,CAAoBC,IAApB,CAAyBC,OAAzB,CAAiCC,IAAzE,GAA8E,oBAA1F;AACA,MAAIC,UAAU,GAAGN,KAAK,CAACE,aAAN,CAAoBC,IAApB,CAAyBC,OAAzB,CAAiCG,KAAlD;AACA,MAAIC,WAAW,GAAG,EAAlB;AACA,MAAIC,aAAa,GAAG,EAApB;AACA,MAAIC,gBAAgB,GAAG,EAAvB;;AACA,MAAIC,MAAM,GAAI,iCAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAH,CAAd;;AACA,MAAIC,UAAU,GACZ,4BACGlB,aAAa,CAACmB,SAAd,CAAwBb,KAAK,CAACE,aAAN,CAAoBC,IAApB,CAAyBC,OAAzB,CAAiCU,SAAzD,CADH,OACyEH,MADzE,CADF;;AAMA,MAAII,WAAW,GAAG,uDAAlB;;AACA,MAAIf,KAAK,CAACE,aAAN,CAAoBC,IAApB,CAAyBC,OAAzB,CAAiCY,WAArC,EAAkD;AAChDD,IAAAA,WAAW,GAAGlB,UAAU,CAACoB,eAAX,CAA2BjB,KAAK,CAACE,aAAN,CAAoBC,IAApB,CAAyBC,OAAzB,CAAiCY,WAA5D,EAAyE,SAAzE,CAAd;AACD;;AACD,MAAME,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAmB;AACnCA,IAAAA,KAAK,GAAGzB,aAAa,CAAC0B,eAAd,CAA8BD,KAA9B,EAAqC,EAArC,CAAR;AACAA,IAAAA,KAAK,GAAGzB,aAAa,CAAC2B,SAAd,CAAwBF,KAAxB,EAA+B,EAA/B,CAAR;AACAA,IAAAA,KAAK,GAAGA,KAAK,CAACG,OAAN,CAAc,SAAd,EAAyB,GAAzB,CAAR;AACA,WAAOH,KAAP;AACD,GALD;;AAMA,MAAMI,kBAAkB,GAAG,SAArBA,kBAAqB,CAACJ,KAAD,EAAmB;AAC5C,WAAOA,KAAK,CAACG,OAAN,CAAc,WAAd,EAA2B,UAASE,KAAT,EAAgBC,GAAhB,EAAqB;AACrD,aAAOC,MAAM,CAACC,YAAP,CAAoBF,GAApB,CAAP;AACD,KAFM,CAAP;AAGD,GAJD;;AAMA,MAAIG,SAAS,GAAG,EAAhB;AACA,MAAIC,eAAe,GAAG,EAAtB;;AACA,MAAI7B,KAAK,CAACE,aAAN,CAAoBC,IAApB,CAAyBC,OAAzB,CAAiC0B,SAArC,EAAgD;AAC9CF,IAAAA,SAAS,GAAG5B,KAAK,CAACE,aAAN,CAAoBC,IAApB,CAAyBC,OAAzB,CAAiC0B,SAA7C;AACD;;AACD,MAAI9B,KAAK,CAACE,aAAN,CAAoBC,IAApB,CAAyBC,OAAzB,CAAiC2B,eAArC,EAAsD;AACpDF,IAAAA,eAAe,GAAG7B,KAAK,CAACE,aAAN,CAAoBC,IAApB,CAAyBC,OAAzB,CAAiC2B,eAAnD;AACD;;AACD,MAAIH,SAAS,KAAK,EAAd,IAAoB,CAACA,SAAzB,EAAoC;AAClCA,IAAAA,SAAS,GAAG3B,KAAZ;AACD;;AAED,MAAI4B,eAAe,KAAK,EAApB,IAA0B,CAACA,eAA/B,EAAgD;AAC9CA,IAAAA,eAAe,GAAGX,SAAS,CAAClB,KAAK,CAACE,aAAN,CAAoBC,IAApB,CAAyBC,OAAzB,CAAiC4B,aAAlC,CAA3B;AACAH,IAAAA,eAAe,GAAGN,kBAAkB,CAACM,eAAD,CAApC;AACAA,IAAAA,eAAe,GAAGnC,aAAa,CAACuC,cAAd,CAA6BJ,eAA7B,EAA8C,GAA9C,EAAmD,EAAnD,CAAlB;AACD;;AACD,MAAIK,iBAAiB,GAAG;AACtBC,IAAAA,EAAE,EAAE,EADkB;AAEtB9B,IAAAA,IAAI,EAAE,EAFgB;AAGtB+B,IAAAA,WAAW,EAAE,EAHS;AAItBC,IAAAA,IAAI,EAAE,EAJgB;AAKtBC,IAAAA,KAAK,EAAE,EALe;AAMtBC,IAAAA,OAAO,EAAE,EANa;AAOtBhC,IAAAA,KAAK,EAAE,EAPe;AAQtBiC,IAAAA,OAAO,EAAE;AACPC,MAAAA,IAAI,EAAE;AADC,KARa;AAWtBC,IAAAA,KAAK,EAAE,EAXe;AAYtBC,IAAAA,MAAM,EAAE;AAZc,GAAxB,CA9C6E,CA4D7E;;AA5D6E,wBA6D7CvD,KAAK,CAACwD,QAAN,CAAyBV,iBAAzB,CA7D6C;AAAA;AAAA,MA6DtEW,QA7DsE;AAAA,MA6D5DC,WA7D4D;;AA+D7EzD,EAAAA,SAAS,CAAC,YAAM;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAI0D,UAAU,GAAG/C,KAAK,CAACE,aAAN,CAAoBC,IAApB,CAAyBC,OAAzB,CAAiCyC,QAAlD;AACArD,IAAAA,YAAY,CAACwD,KAAb,CAAmB;AAACA,MAAAA,KAAK,EAAEvD,kBAAR;AAA4BwD,MAAAA,SAAS,EAAE;AACxD,cAAMF;AADkD;AAAvC,KAAnB,EAEMG,IAFN,CAEW,UAAAC,QAAQ,EAAI;AACnB,UAAI,CAACrD,SAAS,CAACsD,OAAV,CAAkBD,QAAQ,CAAChD,IAA3B,CAAD,IAAqC,CAACL,SAAS,CAACsD,OAAV,CAAkBD,QAAQ,CAAChD,IAAT,CAAc0C,QAAhC,CAA1C,EAAqF;AACnFC,QAAAA,WAAW,CAACK,QAAQ,CAAChD,IAAT,CAAc0C,QAAf,CAAX;AACD;AACJ,KAND;AAOD,GAhBQ,EAgBN,EAhBM,CAAT;;AA/D6E,yBAiFvCzD,KAAK,CAACwD,QAAN,CAAe,EAAf,CAjFuC;AAAA;AAAA,MAiFtES,WAjFsE;AAAA,MAiFzDC,cAjFyD;;AAkF7E,MAAIC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACpD,IAAD,EAA4B;AAClD,QAAIqD,aAAa,GAAG,EAApB;AACA,QAAIC,YAAY,GAAG,IAAnB;;AACA,QAAIC,YAAY,CAACC,OAAb,CAAqBhE,sBAArB,KAAgD,CAACG,SAAS,CAACsD,OAAV,CAAkBM,YAAY,CAACC,OAAb,CAAqBhE,sBAArB,CAAlB,CAArD,EAAsH;AACpH6D,MAAAA,aAAa,GAAGI,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqBhE,sBAArB,CAAX,CAAhB;;AACA,WAAK,IAAImE,KAAT,IAAkBN,aAAlB,EAAiC;AAC/B,YAAIA,aAAa,CAACM,KAAD,CAAb,CAAqB3B,EAArB,KAA4BhC,IAAI,CAACgC,EAArC,EAAyC;AACvCsB,UAAAA,YAAY,GAAG,KAAf;AACD;;AACD,YAAID,aAAa,CAACM,KAAD,CAAb,CAAqBC,IAArB,KAA8B5D,IAAI,CAAC4D,IAAvC,EAA6C;AAC3CL,UAAAA,YAAY,CAACM,UAAb,CAAwBrE,sBAAxB;AACA6D,UAAAA,aAAa,GAAG,EAAhB;AACA;AACD;AACF;AACF;;AACD,QAAIC,YAAJ,EAAkB;AAChBD,MAAAA,aAAa,CAACS,IAAd,CAAmB9D,IAAnB,EADgB,CAEhB;;AACAmD,MAAAA,cAAc,CAACE,aAAD,CAAd;AACAE,MAAAA,YAAY,CAACQ,OAAb,CAAqBvE,sBAArB,EAA6C,gBAAe6D,aAAf,CAA7C;AACD;AACF,GAtBD;;AAuBA,MAAIW,gBAAgB,GAAG;AACrBhC,IAAAA,EAAE,EAAEnC,KAAK,CAACE,aAAN,CAAoBC,IAApB,CAAyBC,OAAzB,CAAiC+B,EADhB;AAErBiC,IAAAA,KAAK,EAAEpE,KAAK,CAACE,aAAN,CAAoBC,IAApB,CAAyBC,OAAzB,CAAiCgE,KAFnB;AAGrBC,IAAAA,gBAAgB,EAAE,EAHG;AAIrBC,IAAAA,iBAAiB,EAAEtE,KAAK,CAACE,aAAN,CAAoBC,IAApB,CAAyBC,OAAzB,CAAiCkE,iBAJ/B;AAKrBP,IAAAA,IAAI,EAAEvD,WALe;AAMrB+D,IAAAA,MAAM,EAAE9D,aANa;AAOrB+D,IAAAA,YAAY,EAAE,CAPO;AAQrBC,IAAAA,kBAAkB,EAAE,CARC;AASrBC,IAAAA,eAAe,EAAE,CATI;AAUrBC,IAAAA,kBAAkB,EAAE,CAVC;AAWrBC,IAAAA,WAAW,EAAE,CAXQ;AAYrBC,IAAAA,QAAQ,EAAE,EAZW;AAarBC,IAAAA,MAAM,EAAE,EAba;AAcrBC,IAAAA,KAAK,EAAE,EAdc;AAerBC,IAAAA,KAAK,EAAE,EAfc;AAgBrBC,IAAAA,IAAI,EAAErE,UAhBe;AAiBrBsE,IAAAA,UAAU,EAAExE,gBAjBS;AAkBrB8B,IAAAA,OAAO,EAAExC,KAAK,CAACE,aAAN,CAAoBC,IAApB,CAAyBC,OAAzB,CAAiCoC,OAlBrB;AAmBrB2C,IAAAA,IAAI,EAAE,GAnBe;AAoBrB/C,IAAAA,WAAW,EAAEpC,KAAK,CAACE,aAAN,CAAoBC,IAApB,CAAyBC,OAAzB,CAAiC4B,aApBzB;AAqBrBoD,IAAAA,GAAG,EAAE;AACHC,MAAAA,GAAG,EAAErF,KAAK,CAACE,aAAN,CAAoBC,IAApB,CAAyBC,OAAzB,CAAiCkF,mBADnC;AAEHC,MAAAA,GAAG,EAAEvF,KAAK,CAACE,aAAN,CAAoBC,IAApB,CAAyBC,OAAzB,CAAiCoF;AAFnC,KArBgB;AAyBrBvF,IAAAA,KAAK,EAAEA,KAzBc;AA0BrBwF,IAAAA,UAAU,EAAEzF,KAAK,CAACE,aAAN,CAAoBC,IAApB,CAAyBC,OAAzB,CAAiCqF,UA1BxB;AA2BrBC,IAAAA,UAAU,EAAE1F,KAAK,CAACE,aAAN,CAAoBC,IAApB,CAAyBC,OAAzB,CAAiCsF,UA3BxB;AA4BrBC,IAAAA,UAAU,EAAE3F,KAAK,CAACE,aAAN,CAAoBC,IAApB,CAAyBC,OAAzB,CAAiCuF,UA5BxB;AA6BrBC,IAAAA,gBAAgB,EAAE5F,KAAK,CAACE,aAAN,CAAoBC,IAApB,CAAyBC,OAAzB,CAAiCwF,gBA7B9B;AA8BrBC,IAAAA,sBAAsB,EAAE7F,KAAK,CAACE,aAAN,CAAoBC,IAApB,CAAyBC,OAAzB,CAAiCyF;AA9BpC,GAAvB;AAgCA,MAAIC,cAAc,GAAG;AACnBvF,IAAAA,KAAK,EAAE,EADY;AAEnBF,IAAAA,IAAI,EAAE,EAFa;AAGnBmC,IAAAA,OAAO,EAAE,EAHU;AAInBG,IAAAA,MAAM,EAAE,EAJW;AAKnBD,IAAAA,KAAK,EAAE,EALY;AAMnBJ,IAAAA,KAAK,EAAE;AANY,GAArB;AAQA,SACE,MAAC,MAAD;AACE,IAAA,KAAK,EAAEV,SADT;AAEE,IAAA,WAAW,EAAEC;AAFf,KAGM7B,KAHN;AAIE,IAAA,KAAK,EAAEe,WAJT;AAKE,IAAA,SAAS,EAAGnB,OAAO,GAAG,cAAV,GAA2BI,KAAK,CAACqC,IAL/C;AAME,IAAA,IAAI,EAAE,YANR;AAOE,IAAA,WAAW,EAAEgB,WAPf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAUE,MAAC,cAAD;AAAgB,IAAA,UAAU,EAAErD,KAAK,CAACE,aAAN,CAAoBC,IAApB,CAAyBC,OAAzB,CAAiCyC,QAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF;AAcD,CA/JD,C,CAiKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAe9C,iBAAf","sourcesContent":["import React, {useEffect} from 'react';\r\nimport {NextPage} from \"next\";\r\n\r\n//Import Components\r\nimport Layout from '../../components/Layout/Layout';\r\nimport DetailInvestor from \"../../components/Investor/DetailInvestor\"\r\n\r\n//Import Const\r\nimport {apolloClient} from \"../../utils\";\r\nimport {GET_INVESTOR_BY_ID} from \"../../graphql/investor/queries\"\r\n//Import Module\r\nimport StringProcess from \"../../modules/stringProcess\";\r\nimport \"../../assets/scss/style.scss\";\r\nimport {localStorageCompareKey, mainURL} from \"../../constants\";\r\nimport urlProcess from \"../../modules/urlProcess\";\r\nimport Validator from \"../../modules/validator\";\r\nimport {COUNT_VIEW_PROJECT} from \"../../graphql/project/mutation\";\r\n\r\ninterface ProjectItemProp {\r\n  id: string,\r\n  investor: string,\r\n  price: string,\r\n  name: string,\r\n  land_area: string,\r\n  image: ImageProp[],\r\n  video: string,\r\n  financial_support: string,\r\n  position_content: string,\r\n  infrastructure_content: string,\r\n  seo_title: string|null,\r\n  seo_description: string|null,\r\n  address: { \r\n    text: string,\r\n    ward: string, \r\n    district: string, \r\n    city: string \r\n  },\r\n  block: {\r\n    name: string,\r\n    image: ImageProp,\r\n  }[],\r\n  cover_image: string,\r\n  intro_content: string\r\n  created_at: string\r\n  updated_at: string\r\n  view_count: number\r\n  google_map_latitude: string\r\n  google_map_longitude: string\r\n}\r\ninterface ImageProp { \r\n  alt_text: string \r\n  description: string\r\n  title: string\r\n  src: string\r\n}\r\ninterface ProjectDetails {\r\n  url: { query: { slug: string }},\r\n  projectDetail: { data: { project: ProjectItemProp } },\r\n  slug: string\r\n}\r\ninterface QueryProp { \r\n  query: { slug: string } \r\n}\r\ninterface CompareDataProps {\r\n  avatar: string,\r\n  title: string|null,\r\n  id: string,\r\n  type: string\r\n}\r\ninterface Investor {\r\n  id: string\r\n  name: string\r\n  description: string\r\n  slug: string\r\n  email: string\r\n  website: string\r\n  image: string\r\n  address: {\r\n   text: string\r\n  }\r\n  phone: string\r\n  mobile: string\r\n}\r\ninterface ImageProp {\r\n  alt_text: string\r\n  description: string\r\n  title: string\r\n  src: string\r\n}\r\n \r\n// @ts-ignore\r\nconst ProjectDetailPage: NextPage<ProjectDetails> = (props: ProjectDetails) => {\r\n  let title = (props.projectDetail.data.project.name)?props.projectDetail.data.project.name:'Xem chi tiết dự án';\r\n  let albumImage = props.projectDetail.data.project.image;\r\n  let typeProject = '';\r\n  let statusProject = '';\r\n  let yearBuildProject = '';\r\n  let square = (<>m<sup>2</sup></>);\r\n  let areaString = (\r\n    <>\r\n      {StringProcess.addCommas(props.projectDetail.data.project.land_area)} {square}\r\n    </>\r\n  );\r\n\r\n  let imageAvatar = 'https://static.nhadatmoi.net/default/home_default.jpg';\r\n  if (props.projectDetail.data.project.cover_image) {\r\n    imageAvatar = urlProcess.processImageUrl(props.projectDetail.data.project.cover_image, 'project');\r\n  }\r\n  const freshText = (input: string) => {\r\n    input = StringProcess.stripProperties(input, []);\r\n    input = StringProcess.stripTags(input, '');\r\n    input = input.replace(/&nbsp;/g, ' ');\r\n    return input;\r\n  };\r\n  const convertDescription = (input: string) => {\r\n    return input.replace(/&#(\\d+);/g, function(match, dec) {\r\n      return String.fromCharCode(dec);\r\n    });\r\n  };\r\n\r\n  let metaTitle = '';\r\n  let metaDescription = '';\r\n  if (props.projectDetail.data.project.seo_title) {\r\n    metaTitle = props.projectDetail.data.project.seo_title;\r\n  }\r\n  if (props.projectDetail.data.project.seo_description) {\r\n    metaDescription = props.projectDetail.data.project.seo_description;\r\n  }\r\n  if (metaTitle === '' || !metaTitle) {\r\n    metaTitle = title;\r\n  }\r\n\r\n  if (metaDescription === '' || !metaDescription) {\r\n    metaDescription = freshText(props.projectDetail.data.project.intro_content);\r\n    metaDescription = convertDescription(metaDescription);\r\n    metaDescription = StringProcess.truncateString(metaDescription, 255, '');\r\n  }\r\n  let initStateInvestor = {\r\n    id: \"\",\r\n    name: \"\",\r\n    description: \"\",\r\n    slug: \"\",\r\n    email: \"\",\r\n    website: \"\",\r\n    image: \"\",\r\n    address: {\r\n      text: \"\",\r\n    },\r\n    phone: \"\",\r\n    mobile: \"\"\r\n  }\r\n  //Count Ad Sell Lease\r\n  const [investor, setInvestor] = React.useState<Investor>(initStateInvestor);\r\n  \r\n  useEffect(() => {\r\n    // let projectId = props.projectDetail.data.project.id;\r\n    // apolloClient.mutate({mutation: COUNT_VIEW_PROJECT, variables: {\r\n    //     \"input\": {\r\n    //       \"id\": projectId\r\n    //     }\r\n    //   }}).then((response: any) => {\r\n    // });\r\n    let investorId = props.projectDetail.data.project.investor\r\n    apolloClient.query({query: GET_INVESTOR_BY_ID, variables: {\r\n      \"id\": investorId\r\n      }}).then(response => {\r\n        if (!Validator.isBlank(response.data) && !Validator.isBlank(response.data.investor)) {\r\n          setInvestor(response.data.investor);\r\n        }\r\n    });\r\n  }, []);\r\n\r\n  const [dataCompare, setDataCompare] = React.useState({});\r\n  let updateCompareData = (data: CompareDataProps) => {\r\n    let dataToCompare = [];\r\n    let isAddToLocal = true;\r\n    if (localStorage.getItem(localStorageCompareKey) && !Validator.isBlank(localStorage.getItem(localStorageCompareKey))) {\r\n      dataToCompare = JSON.parse(localStorage.getItem(localStorageCompareKey) as string);\r\n      for (let index in dataToCompare) {\r\n        if (dataToCompare[index].id === data.id) {\r\n          isAddToLocal = false;\r\n        }\r\n        if (dataToCompare[index].type !== data.type) {\r\n          localStorage.removeItem(localStorageCompareKey);\r\n          dataToCompare = [];\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    if (isAddToLocal) {\r\n      dataToCompare.push(data);\r\n      // @ts-ignore\r\n      setDataCompare(dataToCompare);\r\n      localStorage.setItem(localStorageCompareKey, JSON.stringify(dataToCompare));\r\n    }\r\n  };\r\n  let propertyOverview = {\r\n    id: props.projectDetail.data.project.id,\r\n    video: props.projectDetail.data.project.video,\r\n    building_density: '',\r\n    financial_support: props.projectDetail.data.project.financial_support,\r\n    type: typeProject,\r\n    status: statusProject,\r\n    floor_number: 0,\r\n    living_room_number: 0,\r\n    bed_room_number: 0,\r\n    toilet_room_number: 0,\r\n    gara_number: 0,\r\n    material: '',\r\n    length: '',\r\n    width: '',\r\n    price: \"\",\r\n    area: areaString,\r\n    year_built: yearBuildProject,\r\n    address: props.projectDetail.data.project.address,\r\n    size: '-',\r\n    description: props.projectDetail.data.project.intro_content,\r\n    map: {\r\n      lat: props.projectDetail.data.project.google_map_latitude,\r\n      lng: props.projectDetail.data.project.google_map_longitude\r\n    },\r\n    title: title,\r\n    view_count: props.projectDetail.data.project.view_count,\r\n    updated_at: props.projectDetail.data.project.updated_at,\r\n    created_at: props.projectDetail.data.project.created_at,\r\n    position_content: props.projectDetail.data.project.position_content,\r\n    infrastructure_content: props.projectDetail.data.project.infrastructure_content\r\n  };\r\n  let contactDefault = {\r\n    image: '',\r\n    name: '',\r\n    address: '',\r\n    mobile: '',\r\n    phone: '',\r\n    email: ''\r\n  };\r\n  return (\r\n    <Layout\r\n      title={metaTitle}\r\n      description={metaDescription}\r\n      {...props}\r\n      image={imageAvatar}\r\n      canonical={ mainURL + '/chu-dau-tu/' + props.slug}\r\n      path={'chu-dau-tu'}\r\n      dataCompare={dataCompare}\r\n    >\r\n      {/* <BannerSlider images={albumImage} imageType='project'/> */}\r\n      <DetailInvestor investorId={props.projectDetail.data.project.investor} />\r\n    </Layout>\r\n  );\r\n};\r\n\r\n// @ts-ignore\r\n// ProjectDetailPage.getInitialProps = async function(props: QueryProp) {\r\n//   console.log(\"props Chu dau tu Pages\", props)\r\n//   let projectSlug = props.query.slug;\r\n//   let projectDetail = await apolloClient.query({query: GET_PROJECT_BY_SLUG, variables: {\r\n//       \"slug\": projectSlug\r\n//     }}).then(response => {\r\n//     return response;\r\n//   });\r\n//   return {\r\n//     projectDetail: projectDetail,\r\n//     slug: projectSlug,\r\n//   };\r\n// };\r\n\r\nexport default ProjectDetailPage;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"const isBlank = value => {\n  if (typeof value === \"undefined\" || value == null || value === 0 || value === '') {\n    return true;\n  } else if (typeof value === \"string\" && (value.length <= 0 || value.trim().length <= 0)) {\n    return true;\n  } else if (typeof value === \"object\") {\n    return isEmpty(value);\n  } else {\n    return false;\n  }\n};\n\nconst isEmpty = obj => {\n  for (let key in obj) {\n    if (obj.hasOwnProperty(key)) return false;\n  }\n\n  return true;\n};\n\nconst isNumber = value => {\n  if (isBlank(value)) {\n    return false;\n  }\n\n  return !isNaN(parseFloat(value)) && isFinite(value);\n};\n\nconst isEmail = value => {\n  if (isBlank(value)) {\n    return false;\n  }\n\n  let email = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return email.test(value);\n};\n\nconst isSlug = value => {\n  if (isBlank(value)) {\n    return false;\n  }\n\n  let slug = /^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$/;\n  return slug.test(value);\n};\n\nconst isUrl = value => {\n  if (isBlank(value)) {\n    return false;\n  }\n\n  let regexp = /^(?:(?:https?|ftp):\\/\\/)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:\\/\\S*)?$/;\n  return regexp.test(value);\n};\n\nexport default {\n  isBlank,\n  isEmail,\n  isEmpty,\n  isNumber,\n  isUrl,\n  isSlug\n};","map":null,"metadata":{},"sourceType":"module"}
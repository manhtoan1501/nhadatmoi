{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\manh nhan\\\\Desktop\\\\Nhadatmoi\\\\components\\\\Users\\\\Tabs\\\\Projects.tsx\";\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { apolloClient } from \"../../../utils\";\nimport { GET_AD_SELL_LEASES } from \"../../../graphql/ad_sell_leases/queries\"; // import uuid from \"uuid\";\n// import dynamic from 'next/dynamic'\n// const uuid=dynamic(import ('uuid'),{ssr:false})\n\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {},\n    posts: {\n      marginTop: theme.spacing(2)\n    },\n    post: {\n      marginBottom: theme.spacing(2)\n    }\n  };\n});\n\nvar Timeline = function Timeline(props) {\n  var className = props.className,\n      rest = _objectWithoutProperties(props, [\"className\"]);\n\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      project = _React$useState2[0],\n      serProject = _React$useState2[1];\n\n  var classes = useStyles();\n\n  var _useState = useState([]),\n      posts = _useState[0],\n      setPosts = _useState[1];\n\n  var userId = {\n    user: \"5e7b82a48928eb4d96c1a526\"\n  };\n  var userFilter = JSON.stringify(userId);\n  useEffect(function () {\n    apolloClient.query({\n      query: GET_AD_SELL_LEASES,\n      variables: {\n        \"page\": 1,\n        \"limit\": 10,\n        \"filter\": userFilter\n      }\n    }).then(function (response) {\n      serProject(response.data.adSellLeases.edges);\n    });\n\n    var fetchPosts = function fetchPosts() {\n      setPosts([{\n        id: \"1\",\n        author: {\n          name: \"Shen Zhi\",\n          avatar: \"https://react-material-kit.devias.io/images/avatars/avatar_11.png\"\n        },\n        created_at: \"1 1 2020\",\n        message: \"Just made this home screen for a project, what-cha thinkin?\",\n        media: \"https://react-material-kit.devias.io/images/posts/post_1.jpg\",\n        avatar: \"https://react-material-kit.devias.io/images/avatars/avatar_5.png\",\n        name: \"string\",\n        comments: [{\n          id: \"1\",\n          author: {\n            avatar: \"https://react-material-kit.devias.io/images/avatars/avatar_5.png\",\n            name: \"Anje Keizer\"\n          },\n          created_at: \"1 1 2020\",\n          message: \"Could use some more statistics, but that’s me haha\"\n        }],\n        liked: false,\n        likes: 10\n      }]);\n    };\n\n    fetchPosts();\n  }, []);\n  var _posts = [{\n    id: \"1\",\n    author: {\n      name: \"Shen Zhi\",\n      avatar: \"https://react-material-kit.devias.io/images/avatars/avatar_11.png\"\n    },\n    created_at: \"1 1 2020\",\n    message: \"Just made this home screen for a project, what-cha thinkin?\",\n    media: \"https://react-material-kit.devias.io/images/posts/post_1.jpg\",\n    avatar: \"https://react-material-kit.devias.io/images/avatars/avatar_5.png\",\n    name: \"string\",\n    comments: [{\n      id: \"1\",\n      author: {\n        avatar: \"https://react-material-kit.devias.io/images/avatars/avatar_5.png\",\n        name: \"Anje Keizer\"\n      },\n      created_at: \"1 1 2020\",\n      message: \"Could use some more statistics, but that’s me haha\"\n    }],\n    liked: false,\n    likes: 10\n  }];\n  console.log(\"project\", project);\n  return __jsx(\"div\", _extends({}, rest, {\n    className: clsx(classes.root, className),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }), __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, \"D\\u1EF1 \\xE1n\"));\n};\n\nexport default Timeline;","map":{"version":3,"sources":["C:/Users/manh nhan/Desktop/Nhadatmoi/components/Users/Tabs/Projects.tsx"],"names":["React","useState","useEffect","clsx","makeStyles","apolloClient","GET_AD_SELL_LEASES","useStyles","theme","root","posts","marginTop","spacing","post","marginBottom","Timeline","props","className","rest","project","serProject","classes","setPosts","userId","user","userFilter","JSON","stringify","query","variables","then","response","data","adSellLeases","edges","fetchPosts","id","author","name","avatar","created_at","message","media","comments","liked","likes","_posts","console","log"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport clsx from 'clsx';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {apolloClient} from \"../../../utils\";\nimport {GET_AD_SELL_LEASES} from \"../../../graphql/ad_sell_leases/queries\"\n// import uuid from \"uuid\";\n// import dynamic from 'next/dynamic'\n// const uuid=dynamic(import ('uuid'),{ssr:false})\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {},\n    posts: {\n        marginTop: theme.spacing(2)\n    },\n    post: {\n        marginBottom: theme.spacing(2)\n    }\n}));\n\ninterface PostType {\n    id: any,\n    author:{\n        name:string,\n        avatar:string,\n\n    },\n    created_at:string,\n    message:string,\n    media:string,\n    avatar:string,\n    name:string,\n    comments:{\n        id:any,\n        author:{\n            avatar:string,\n            name:string\n        }\n        created_at:string,\n        message:string,\n    }[],\n    liked:boolean,\n    likes:number,\n}\n\ninterface TimelineProps {\n    className ?: string\n}\n\nconst Timeline: React.FunctionComponent<TimelineProps> = (props: TimelineProps) => {\n    const { className,  ...rest } = props\n    let [project, serProject] = React.useState()\n    const classes = useStyles();\n    const [posts, setPosts] = useState<PostType[]>([]);\n    let userId = { user: \"5e7b82a48928eb4d96c1a526\"}\n    let userFilter = JSON.stringify(userId)\n    useEffect(() => {\n        apolloClient.query({query: GET_AD_SELL_LEASES, variables: {\n            \"page\": 1,\n            \"limit\": 10,\n            \"filter\": userFilter\n        }}).then(response => { \n            serProject(response.data.adSellLeases.edges)\n        })\n        const fetchPosts = () => {\n            setPosts([{\n                id: \"1\",\n                author:{\n                    name:\"Shen Zhi\",\n                    avatar:\"https://react-material-kit.devias.io/images/avatars/avatar_11.png\",\n                },\n                created_at:\"1 1 2020\",\n                message:\"Just made this home screen for a project, what-cha thinkin?\",\n                media:\"https://react-material-kit.devias.io/images/posts/post_1.jpg\",\n                avatar:\"https://react-material-kit.devias.io/images/avatars/avatar_5.png\",\n                name:\"string\",\n                comments:[{\n                    id:\"1\",\n                    author:{\n                        avatar:\"https://react-material-kit.devias.io/images/avatars/avatar_5.png\",\n                        name:\"Anje Keizer\"\n                    },\n                    created_at:\"1 1 2020\",\n                    message:\"Could use some more statistics, but that’s me haha\",\n                }],\n                liked:false,\n                likes:10,\n            }])\n        }\n        fetchPosts()\n    }, [])\n    const _posts = [\n        {\n            id: \"1\",\n            author:{\n                name:\"Shen Zhi\",\n                avatar:\"https://react-material-kit.devias.io/images/avatars/avatar_11.png\",\n            },\n            created_at:\"1 1 2020\",\n            message:\"Just made this home screen for a project, what-cha thinkin?\",\n            media:\"https://react-material-kit.devias.io/images/posts/post_1.jpg\",\n            avatar:\"https://react-material-kit.devias.io/images/avatars/avatar_5.png\",\n            name:\"string\",\n            comments:[{\n                id:\"1\",\n                author:{\n                    avatar:\"https://react-material-kit.devias.io/images/avatars/avatar_5.png\",\n                    name:\"Anje Keizer\"\n                },\n                created_at:\"1 1 2020\",\n                message:\"Could use some more statistics, but that’s me haha\",\n            }],\n            liked:false,\n            likes:10,\n        }\n    ]\n    console.log(\"project\", project)\n    return (\n        <div {...rest} className={clsx(classes.root, className)}>\n            <h1>Dự án</h1>\n        </div>\n    );\n};\n\n\nexport default Timeline;\n"]},"metadata":{},"sourceType":"module"}
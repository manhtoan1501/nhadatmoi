{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"C:\\\\Users\\\\manh nhan\\\\Desktop\\\\new_ndm\\\\pages\\\\[slug]\\\\[location].tsx\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\n//Import for Props\nimport ProcessQueryData from '../../modules/LayeredNavigation/processDataFromQuery'; //Import Main Search Page\n\nimport MainSearchPage from \"../../components/LayeredNavigation/MainSearchPage\"; //Import SCSS\n\nimport \"../../assets/scss/style.scss\";\nimport { adSellLeaseCategory, adSellLeaseType } from \"../../constants\";\n\n// @ts-ignore\nvar AdSellLeasesSlug = function AdSellLeasesSlug(props) {\n  return __jsx(MainSearchPage, _extends({}, props, {\n    typePage: 'ad-sell-lease-location',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }));\n}; // @ts-ignore\n\n\nAdSellLeasesSlug.getInitialProps = function _callee(props) {\n  var isSlugType, type2ASL, type1ASL, index, slugASL2Type, _index, slugASL1Type, query, propObject;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          //Check Slug\n          isSlugType = false;\n          type2ASL = '';\n          type1ASL = '';\n\n          if (props.query && props.query.slug) {\n            for (index in adSellLeaseType) {\n              slugASL2Type = adSellLeaseType[index];\n\n              if (slugASL2Type.slug === '/' + props.query.slug) {\n                isSlugType = true;\n                type2ASL = slugASL2Type.id;\n              }\n            }\n\n            for (_index in adSellLeaseCategory) {\n              slugASL1Type = adSellLeaseCategory[_index];\n\n              if (slugASL1Type.slug === '/' + props.query.slug) {\n                isSlugType = true;\n                type1ASL = slugASL1Type.id;\n              }\n            }\n\n            if (props.query.slug === 'nha-dat-ban' || props.query.slug === 'tim-tin-rao' || props.query.slug === 'nha-dat-thue' || props.query.slug === 'nha-dat-can-ban' || props.query.slug === 'nha-dat-can-thue') {\n              isSlugType = true;\n            }\n          }\n\n          query = props.query;\n          propObject = ProcessQueryData.processQueryData(query, 'ad-sell-lease-location', type1ASL, type2ASL);\n\n          if (isSlugType) {\n            _context.next = 10;\n            break;\n          }\n\n          _context.next = 9;\n          return _regeneratorRuntime.awrap(propObject);\n\n        case 9:\n          _context.sent.statusCode = 404;\n\n        case 10:\n          return _context.abrupt(\"return\", propObject);\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, _Promise);\n};\n\nexport default AdSellLeasesSlug;","map":{"version":3,"sources":["C:/Users/manh nhan/Desktop/new_ndm/pages/[slug]/[location].tsx"],"names":["React","ProcessQueryData","MainSearchPage","adSellLeaseCategory","adSellLeaseType","AdSellLeasesSlug","props","getInitialProps","isSlugType","type2ASL","type1ASL","query","slug","index","slugASL2Type","id","slugASL1Type","propObject","processQueryData","statusCode"],"mappings":";;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA;AACA,OAAOC,gBAAP,MAA6B,sDAA7B,C,CAEA;;AACA,OAAOC,cAAP,MAA2B,mDAA3B,C,CACA;;AACA,OAAO,8BAAP;AACA,SAAQC,mBAAR,EAA6BC,eAA7B,QAAmD,iBAAnD;;AAkCA;AACA,IAAMC,gBAA0C,GAAG,SAA7CA,gBAA6C,CAACC,KAAD,EAA2B;AAC5E,SACE,MAAC,cAAD,eAAoBA,KAApB;AAA2B,IAAA,QAAQ,EAAE,wBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAGD,CAJD,C,CAMA;;;AACAD,gBAAgB,CAACE,eAAjB,GAAmC,iBAAeD,KAAf;AAAA;;AAAA;AAAA;AAAA;AAAA;AACjC;AACIE,UAAAA,UAF6B,GAEhB,KAFgB;AAG7BC,UAAAA,QAH6B,GAGlB,EAHkB;AAI7BC,UAAAA,QAJ6B,GAIlB,EAJkB;;AAKjC,cAAIJ,KAAK,CAACK,KAAN,IAAeL,KAAK,CAACK,KAAN,CAAYC,IAA/B,EAAqC;AACnC,iBAASC,KAAT,IAAkBT,eAAlB,EAAmC;AAC7BU,cAAAA,YAD6B,GACdV,eAAe,CAACS,KAAD,CADD;;AAEjC,kBAAIC,YAAY,CAACF,IAAb,KAAuB,MAAMN,KAAK,CAACK,KAAN,CAAYC,IAA7C,EAAoD;AAClDJ,gBAAAA,UAAU,GAAG,IAAb;AACAC,gBAAAA,QAAQ,GAAGK,YAAY,CAACC,EAAxB;AACD;AACF;;AACD,iBAASF,MAAT,IAAkBV,mBAAlB,EAAuC;AACjCa,cAAAA,YADiC,GAClBb,mBAAmB,CAACU,MAAD,CADD;;AAErC,kBAAIG,YAAY,CAACJ,IAAb,KAAuB,MAAMN,KAAK,CAACK,KAAN,CAAYC,IAA7C,EAAoD;AAClDJ,gBAAAA,UAAU,GAAG,IAAb;AACAE,gBAAAA,QAAQ,GAAGM,YAAY,CAACD,EAAxB;AACD;AACF;;AACD,gBAAIT,KAAK,CAACK,KAAN,CAAYC,IAAZ,KAAqB,aAArB,IACGN,KAAK,CAACK,KAAN,CAAYC,IAAZ,KAAqB,aADxB,IAEGN,KAAK,CAACK,KAAN,CAAYC,IAAZ,KAAqB,cAFxB,IAGGN,KAAK,CAACK,KAAN,CAAYC,IAAZ,KAAqB,iBAHxB,IAIGN,KAAK,CAACK,KAAN,CAAYC,IAAZ,KAAqB,kBAJ5B,EAKE;AACAJ,cAAAA,UAAU,GAAG,IAAb;AACD;AACF;;AAEGG,UAAAA,KA9B6B,GA8BrBL,KAAK,CAACK,KA9Be;AA+B7BM,UAAAA,UA/B6B,GA+BhBhB,gBAAgB,CAACiB,gBAAjB,CAAkCP,KAAlC,EAAyC,wBAAzC,EAAmED,QAAnE,EAA6ED,QAA7E,CA/BgB;;AAAA,cAgC5BD,UAhC4B;AAAA;AAAA;AAAA;;AAAA;AAAA,2CAiCxBS,UAjCwB;;AAAA;AAAA,wBAiCZE,UAjCY,GAiCC,GAjCD;;AAAA;AAAA,2CAmC1BF,UAnC0B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnC;;AAsCA,eAAeZ,gBAAf","sourcesContent":["import * as React from 'react';\r\nimport {NextPage} from 'next';\r\n//Import for Props\r\nimport ProcessQueryData from '../../modules/LayeredNavigation/processDataFromQuery';\r\n\r\n//Import Main Search Page\r\nimport MainSearchPage from \"../../components/LayeredNavigation/MainSearchPage\";\r\n//Import SCSS\r\nimport \"../../assets/scss/style.scss\";\r\nimport {adSellLeaseCategory, adSellLeaseType} from \"../../constants\";\r\nimport {DataLayeredNavigationProps} from '../../interfaces/interface';\r\n\r\ninterface LocationItemProp {\r\n  id: string|null;\r\n  name: string|null;\r\n  title: string|null;\r\n  slug: string|null;\r\n  seo_title: string|null;\r\n  seo_description: string|null;\r\n  image: string|null;\r\n}\r\n\r\ninterface SearchPageProp {\r\n  location: {\r\n    city: LocationItemProp;\r\n    ward: LocationItemProp;\r\n    district: LocationItemProp;\r\n  },\r\n  dataQuery: DataLayeredNavigationProps,\r\n  slug: string\r\n}\r\n\r\ninterface QueryProp {\r\n  query: any\r\n}\r\n\r\ninterface AdSellLeaseSortType {\r\n  time?: \"newest\" | \"oldest\",\r\n  price?: \"low_to_high\" | \"high_to_low\",\r\n  view?: \"low_to_high\" | \"high_to_low\",\r\n  rate?: \"high_to_low\"\r\n}\r\n\r\n// @ts-ignore\r\nconst AdSellLeasesSlug: NextPage<SearchPageProp> = (props: SearchPageProp) => {\r\n  return (\r\n    <MainSearchPage {...props} typePage={'ad-sell-lease-location'}/>\r\n  );\r\n};\r\n\r\n// @ts-ignore\r\nAdSellLeasesSlug.getInitialProps = async function(props: QueryProp) {\r\n  //Check Slug\r\n  let isSlugType = false;\r\n  let type2ASL = '';\r\n  let type1ASL = '';\r\n  if (props.query && props.query.slug) {\r\n    for (let index in adSellLeaseType) {\r\n      let slugASL2Type = adSellLeaseType[index];\r\n      if (slugASL2Type.slug === ('/' + props.query.slug)) {\r\n        isSlugType = true;\r\n        type2ASL = slugASL2Type.id;\r\n      }\r\n    }\r\n    for (let index in adSellLeaseCategory) {\r\n      let slugASL1Type = adSellLeaseCategory[index];\r\n      if (slugASL1Type.slug === ('/' + props.query.slug)) {\r\n        isSlugType = true;\r\n        type1ASL = slugASL1Type.id;\r\n      }\r\n    }\r\n    if (props.query.slug === 'nha-dat-ban'\r\n        || props.query.slug === 'tim-tin-rao'\r\n        || props.query.slug === 'nha-dat-thue'\r\n        || props.query.slug === 'nha-dat-can-ban'\r\n        || props.query.slug === 'nha-dat-can-thue'\r\n    ) {\r\n      isSlugType = true;\r\n    }\r\n  }\r\n\r\n  let query = props.query;\r\n  let propObject = ProcessQueryData.processQueryData(query, 'ad-sell-lease-location', type1ASL, type2ASL);\r\n  if (!isSlugType) {\r\n    (await propObject).statusCode = 404;\r\n  }\r\n  return propObject;\r\n};\r\n\r\nexport default AdSellLeasesSlug\r\n"]},"metadata":{},"sourceType":"module"}
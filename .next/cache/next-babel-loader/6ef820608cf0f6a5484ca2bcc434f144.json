{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manh nhan\\\\Desktop\\\\Nhadatmoi\\\\pages\\\\nguoi-dung\\\\[id].tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport Layout from '../../components/Layout/Layout';\nimport { apolloClient } from \"../../utils\";\nimport { GET_AD_SELL_LEASE_COMMENTS } from \"../../graphql/comments/queries\";\nimport { GET_USER_BY_ID } from \"../../graphql/user/queries/index\";\nimport \"../../assets/scss/style.scss\";\nimport { mainURL } from \"../../constants\";\nimport User from \"../../components/User/Index\";\n\n// @ts-ignore\nconst UserPage = props => {\n  let metaTitle = `Chuyên viên tư vấn ${props.infoUser.first_name} ${props.infoUser.last_name}`;\n  return __jsx(Layout, _extends({\n    title: metaTitle,\n    description: \"metaDescription\"\n  }, props, {\n    image: \"https://vcdn-giaitri.vnecdn.net/2020/01/23/C-OiQ-UUIAIycqR-1-1579796735_680x0.jpg\",\n    canonical: mainURL + '/nguoi-dung/' + props.userId,\n    path: 'nguoi-dung',\n    dataCompare: {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }), __jsx(User, {\n    listComment: props.listComment.data.adSellLeaseComments.edges,\n    userId: props.userId,\n    infoUser: props.infoUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }));\n}; // @ts-ignore\n\n\nUserPage.getInitialProps = async function (props) {\n  let userId = props.query.id;\n  let filterObject = {\n    id: userId\n  };\n  let dataFilter = JSON.stringify(filterObject);\n  let listComment = await apolloClient.query({\n    query: GET_AD_SELL_LEASE_COMMENTS,\n    variables: {\n      \"page\": 1,\n      \"limit\": 15,\n      \"filter\": dataFilter\n    }\n  }).then(response => {\n    return response.data.adSellLeaseComments.edges;\n  });\n  let infoUser = await apolloClient.query({\n    query: GET_USER_BY_ID,\n    variables: {\n      \"id\": userId\n    }\n  }).then(response => {\n    return response.data.user;\n  });\n  return {\n    listComment: listComment,\n    userId: userId,\n    infoUser: infoUser\n  };\n};\n\nexport default UserPage;","map":{"version":3,"sources":["C:/Users/manh nhan/Desktop/Nhadatmoi/pages/nguoi-dung/[id].tsx"],"names":["React","Layout","apolloClient","GET_AD_SELL_LEASE_COMMENTS","GET_USER_BY_ID","mainURL","User","UserPage","props","metaTitle","infoUser","first_name","last_name","userId","listComment","data","adSellLeaseComments","edges","getInitialProps","query","id","filterObject","dataFilter","JSON","stringify","variables","then","response","user"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,SAAQC,YAAR,QAA2B,aAA3B;AACA,SAAQC,0BAAR,QAAyC,gCAAzC;AACA,SAAQC,cAAR,QAA8B,kCAA9B;AACA,OAAO,8BAAP;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,IAAP,MAAiB,6BAAjB;;AAqDA;AACA,MAAMC,QAAkC,GAAIC,KAAD,IAA2B;AACpE,MAAIC,SAAS,GAAI,sBAAqBD,KAAK,CAACE,QAAN,CAAeC,UAAY,IAAGH,KAAK,CAACE,QAAN,CAAeE,SAAU,EAA7F;AACA,SACE,MAAC,MAAD;AACE,IAAA,KAAK,EAAEH,SADT;AAEE,IAAA,WAAW,EAAE;AAFf,KAGMD,KAHN;AAIE,IAAA,KAAK,EAAE,mFAJT;AAKE,IAAA,SAAS,EAAGH,OAAO,GAAG,cAAV,GAA2BG,KAAK,CAACK,MAL/C;AAME,IAAA,IAAI,EAAE,YANR;AAOE,IAAA,WAAW,EAAE,EAPf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MASE,MAAC,IAAD;AACE,IAAA,WAAW,EAAGL,KAAK,CAACM,WAAN,CAAkBC,IAAlB,CAAuBC,mBAAvB,CAA2CC,KAD3D;AAEE,IAAA,MAAM,EAAET,KAAK,CAACK,MAFhB;AAGE,IAAA,QAAQ,EAAEL,KAAK,CAACE,QAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF;AAiBD,CAnBD,C,CAqBA;;;AACAH,QAAQ,CAACW,eAAT,GAA2B,gBAAeV,KAAf,EAAiC;AAC1D,MAAIK,MAAM,GAAGL,KAAK,CAACW,KAAN,CAAYC,EAAzB;AACA,MAAIC,YAAY,GAAI;AAClBD,IAAAA,EAAE,EAAEP;AADc,GAApB;AAGA,MAAIS,UAAU,GAAGC,IAAI,CAACC,SAAL,CAAeH,YAAf,CAAjB;AACA,MAAIP,WAAW,GAAG,MAAMZ,YAAY,CAACiB,KAAb,CAAmB;AAACA,IAAAA,KAAK,EAAEhB,0BAAR;AAAoCsB,IAAAA,SAAS,EAAE;AACtF,cAAQ,CAD8E;AAEtF,eAAS,EAF6E;AAGtF,gBAAUH;AAH4E;AAA/C,GAAnB,EAIlBI,IAJkB,CAIbC,QAAQ,IAAI;AACrB,WAAOA,QAAQ,CAACZ,IAAT,CAAcC,mBAAd,CAAkCC,KAAzC;AACD,GANuB,CAAxB;AAQA,MAAIP,QAAQ,GAAI,MAAMR,YAAY,CAACiB,KAAb,CAAmB;AAACA,IAAAA,KAAK,EAAEf,cAAR;AAAwBqB,IAAAA,SAAS,EAAE;AAC1E,YAAMZ;AADoE;AAAnC,GAAnB,EAEhBa,IAFgB,CAEXC,QAAQ,IAAI;AACnB,WAAOA,QAAQ,CAACZ,IAAT,CAAca,IAArB;AACH,GAJqB,CAAtB;AAMA,SAAO;AACLd,IAAAA,WAAW,EAAEA,WADR;AAELD,IAAAA,MAAM,EAAEA,MAFH;AAGLH,IAAAA,QAAQ,EAAEA;AAHL,GAAP;AAKD,CAzBD;;AA2BA,eAAeH,QAAf","sourcesContent":["import React from 'react';\r\nimport {NextPage} from \"next\";\r\nimport Layout from '../../components/Layout/Layout';\r\nimport {apolloClient} from \"../../utils\";\r\nimport {GET_AD_SELL_LEASE_COMMENTS} from \"../../graphql/comments/queries\";\r\nimport {GET_USER_BY_ID } from \"../../graphql/user/queries/index\"\r\nimport \"../../assets/scss/style.scss\";\r\nimport { mainURL } from \"../../constants\";\r\nimport User from \"../../components/User/Index\"\r\n \r\ninterface ProjectDetails {\r\n  url: { query: { id: string }},\r\n  listComment: { data: { adSellLeaseComments: { edges: ListCommentProps[]}} },\r\n  userId: string\r\n  infoUser: UserProps\r\n}\r\n\r\ninterface QueryProp { \r\n  query: { id: string } \r\n}\r\n\r\ninterface UserProps {\r\n  address: String\r\n  avatar: String\r\n  birthday: String\r\n  email: String\r\n  facebook: String\r\n  first_name: String\r\n  gender: String\r\n  google_id: String\r\n  intro: String\r\n  id: String\r\n  last_name: String\r\n  phone: String\r\n  mobile: String\r\n  skype: String\r\n  username: String\r\n  viber: String\r\n  website: String\r\n  zalo: String\r\n  created_at: String\r\n  updated_at: String\r\n}\r\n\r\ninterface ListCommentProps {\r\n  node: {\r\n    id: string,\r\n    ad_sell_lease_id: string,\r\n    content: string,\r\n    user_id: string,\r\n    media: string,\r\n    user: {\r\n      first_name: string,\r\n      last_name: string,\r\n      avatar: string,\r\n    }\r\n    like_number: string,\r\n    created_at: string,\r\n  },\r\n}\r\n\r\n// @ts-ignore\r\nconst UserPage: NextPage<ProjectDetails> = (props: ProjectDetails) => {\r\n  let metaTitle = `Chuyên viên tư vấn ${props.infoUser.first_name } ${props.infoUser.last_name}`\r\n  return (\r\n    <Layout\r\n      title={metaTitle}\r\n      description={\"metaDescription\"}\r\n      {...props}\r\n      image={\"https://vcdn-giaitri.vnecdn.net/2020/01/23/C-OiQ-UUIAIycqR-1-1579796735_680x0.jpg\"}\r\n      canonical={ mainURL + '/nguoi-dung/' + props.userId}\r\n      path={'nguoi-dung'}\r\n      dataCompare={{}}\r\n    >\r\n      <User \r\n        listComment= {props.listComment.data.adSellLeaseComments.edges}\r\n        userId={props.userId}\r\n        infoUser={props.infoUser}\r\n      />\r\n    </Layout>\r\n  );\r\n};\r\n\r\n// @ts-ignore\r\nUserPage.getInitialProps = async function(props: QueryProp) {\r\n  let userId = props.query.id;\r\n  let filterObject =  {\r\n    id: userId,\r\n  };\r\n  let dataFilter = JSON.stringify(filterObject);\r\n  let listComment = await apolloClient.query({query: GET_AD_SELL_LEASE_COMMENTS, variables: {\r\n      \"page\": 1,\r\n      \"limit\": 15,\r\n      \"filter\": dataFilter\r\n    }}).then(response => {\r\n    return response.data.adSellLeaseComments.edges;\r\n  });\r\n\r\n  let infoUser =  await apolloClient.query({query: GET_USER_BY_ID, variables: {\r\n    \"id\": userId\r\n    }}).then(response => { \r\n      return response.data.user\r\n  })\r\n  \r\n  return {\r\n    listComment: listComment,\r\n    userId: userId,\r\n    infoUser: infoUser\r\n  };\r\n};\r\n\r\nexport default UserPage;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Array$isArray from \"@babel/runtime-corejs2/core-js/array/is-array\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\manh nhan\\\\Desktop\\\\new_ndm\\\\components\\\\Channel\\\\Tabs\\\\Rating.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Typography, CardHeader, Avatar, Grid } from '@material-ui/core';\nimport Rating from '@material-ui/lab/Rating';\nimport { ratings, ratingStyles } from \"../Constant\";\nimport { apolloClient } from \"../../../utils\";\nimport { GET_RATINGS_CHANNEL_BY_ID } from \"../../../graphql/channel/queries\";\nimport moment from \"moment\";\nimport 'moment/locale/es'; // without this line it didn't work\n\nmoment.locale('vi');\nvar avatar = \"https://1.bp.blogspot.com/-gx54Ig64I_k/WnktM_nzPXI/AAAAAAAAHgw/E7pSRwrXu_c3tSSg-vbO2iQgg4GbVxGKwCLcBGAs/s1600/anh-girl-xinh-9x-kute%2B%252811%2529.jpg\";\n\nvar Ratings = function Ratings(props) {\n  var classes = ratingStyles();\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      ratingsChannel = _React$useState2[0],\n      setRatingsChannel = _React$useState2[1];\n\n  var getAdChannel = function getAdChannel() {\n    var id, ratingsChannel;\n    return _regeneratorRuntime.async(function getAdChannel$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            id = props.channelId;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(apolloClient.query({\n              query: GET_RATINGS_CHANNEL_BY_ID,\n              variables: {\n                \"id\": id,\n                \"limit\": 18,\n                \"page\": 1\n              }\n            }).then(function (response) {\n              return response.data.channelAdSellLeaseRatings.edges;\n            }));\n\n          case 3:\n            ratingsChannel = _context.sent;\n\n            if (_Array$isArray(ratingsChannel)) {\n              setRatingsChannel(ratingsChannel);\n            }\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, _Promise);\n  };\n\n  React.useEffect(function () {\n    getAdChannel();\n  });\n\n  var renderRating = function renderRating() {\n    return ratings.map(function (item, index) {\n      return __jsx(\"div\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, __jsx(CardHeader, {\n        avatar: __jsx(Avatar, {\n          alt: \"Reviewer\",\n          src: avatar,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, item.name),\n        disableTypography: true,\n        subheader: __jsx(\"div\", {\n          className: classes.subheader,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, __jsx(Typography, {\n          variant: \"body2\",\n          className: classes.rating,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, \"\\u0110\\xE1nh gi\\xE1 b\\u1EDFi:\"), __jsx(Typography, {\n          className: classes.userRating,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, item.name), __jsx(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }), __jsx(Rating, {\n          disabled: true,\n          name: \"simple-controlled\",\n          value: item.rating,\n          style: {\n            color: \"#045EA8\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }), __jsx(Typography, {\n          variant: \"body2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, moment(item.time).fromNow())),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }));\n    });\n  };\n\n  var renderRatingChanel = function renderRatingChanel() {\n    return ratingsChannel.map(function (item, index) {\n      return __jsx(\"div\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, __jsx(CardHeader, {\n        avatar: __jsx(Avatar, {\n          alt: \"Reviewer\",\n          src: item.node.user_id.avatar || avatar,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, item.node.user_id.avatar),\n        disableTypography: true,\n        subheader: __jsx(\"div\", {\n          className: classes.subheader,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, __jsx(Typography, {\n          variant: \"body2\",\n          className: classes.rating,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, \"\\u0110\\xE1nh gi\\xE1 b\\u1EDFi:\"), __jsx(Typography, {\n          className: classes.userRating,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, item.node.user_id.first_name, \" \", item.node.user_id.last_name), __jsx(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }), __jsx(Rating, {\n          disabled: true,\n          name: \"simple-controlled\",\n          value: item.node.rate,\n          style: {\n            color: \"#045EA8\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }), __jsx(Typography, {\n          variant: \"body2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, moment(Number(item.node.created_at)).fromNow())),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }));\n    });\n  };\n\n  var renderAverageRating = function renderAverageRating() {\n    var total = 1396;\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, __jsx(Typography, {\n      variant: \"h5\",\n      className: classes.titleRating,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"\\u0110\\xE1nh gi\\xE1 ch\\u1EA5t l\\u01B0\\u1EE3ng\"), __jsx(\"div\", {\n      style: {\n        width: \"220px\",\n        height: \"200px\",\n        \"float\": \"left\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      style: {\n        fontSize: 150\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"5.0\"), __jsx(Grid, {\n      container: true,\n      alignItems: \"center\",\n      justify: \"center\",\n      spacing: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, __jsx(Grid, {\n      item: true,\n      xs: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, __jsx(Rating, {\n      disabled: true,\n      name: \"simple-controlled\",\n      value: 5,\n      style: {\n        color: \"#045EA8\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    })), __jsx(Grid, {\n      item: true,\n      xs: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, total))), __jsx(\"div\", {\n      style: {\n        width: \"calc(100% - 220px)\",\n        height: \"200px\",\n        \"float\": 'left'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      style: {\n        padding: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      style: {\n        width: '50%',\n        height: 10,\n        backgroundColor: \"#aaa\",\n        borderRadius: 5,\n        margin: '20px',\n        position: \"relative\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      style: {\n        width: '90%',\n        height: 10,\n        backgroundColor: \"blue\",\n        borderRadius: 5,\n        position: \"absolute\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    })))));\n  };\n\n  return __jsx(\"div\", {\n    className: classes.rootRating,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, __jsx(Typography, {\n    variant: \"h5\",\n    className: classes.titleRating,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, \"\\u0110\\xE1nh gi\\xE1 g\\u1EA7n nh\\u1EA5t\"), _Array$isArray(ratings) ? renderRatingChanel() : __jsx(Typography, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, \"Kh\\xF4ng c\\xF3 \\u0111\\xE1nh gi\\xE1 n\\xE0o\"), renderAverageRating());\n};\n\nexport default Ratings;","map":{"version":3,"sources":["C:/Users/manh nhan/Desktop/new_ndm/components/Channel/Tabs/Rating.tsx"],"names":["React","Typography","CardHeader","Avatar","Grid","Rating","ratings","ratingStyles","apolloClient","GET_RATINGS_CHANNEL_BY_ID","moment","locale","avatar","Ratings","props","classes","useState","ratingsChannel","setRatingsChannel","getAdChannel","id","channelId","query","variables","then","response","data","channelAdSellLeaseRatings","edges","useEffect","renderRating","map","item","index","name","subheader","rating","userRating","color","time","fromNow","renderRatingChanel","node","user_id","first_name","last_name","rate","Number","created_at","renderAverageRating","total","titleRating","width","height","fontSize","padding","backgroundColor","borderRadius","margin","position","rootRating"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Typography, CardHeader, Avatar, Grid } from '@material-ui/core';\nimport Rating from '@material-ui/lab/Rating';\nimport { ratings, ratingStyles } from \"../Constant\"\nimport { apolloClient } from \"../../../utils\";\nimport { GET_RATINGS_CHANNEL_BY_ID } from \"../../../graphql/channel/queries\";\nimport moment from \"moment\"\nimport 'moment/locale/es'  // without this line it didn't work\nmoment.locale('vi')\n\ninterface Props {\n  channelId: string\n}\ninterface RatingProps {\n  node: {\n    id: string\n    user_id: {\n      id: string\n      first_name: string\n      last_name: string\n      avatar: string\n    }\n    ad_sell_lease_id: {\n      id: string\n      title: string\n    }\n    rate: Number\n    created_at: string\n  }\n}\n\nconst avatar = \"https://1.bp.blogspot.com/-gx54Ig64I_k/WnktM_nzPXI/AAAAAAAAHgw/E7pSRwrXu_c3tSSg-vbO2iQgg4GbVxGKwCLcBGAs/s1600/anh-girl-xinh-9x-kute%2B%252811%2529.jpg\"\nconst Ratings: React.FunctionComponent<Props> = (props: Props) => {\n  const classes = ratingStyles();\n  const [ratingsChannel, setRatingsChannel] = React.useState<RatingProps[]>([])\n  const getAdChannel = async ()=> { \n    let id = props.channelId\n    let ratingsChannel = await apolloClient.query({ query: GET_RATINGS_CHANNEL_BY_ID, variables: {\n      \"id\": id,\n      \"limit\": 18,\n      \"page\": 1,\n    }})\n    .then((response: any) => {\n      return response.data.channelAdSellLeaseRatings.edges\n    })\n    if(Array.isArray(ratingsChannel)){\n      setRatingsChannel(ratingsChannel)\n    }\n  };\n\n  React.useEffect(() => {\n    getAdChannel()\n  })\n\n  const renderRating = () => {\n    return ratings.map((item: any, index: number) => {\n      return (\n        <div key={index}>\n          <CardHeader \n            avatar={ <Avatar alt=\"Reviewer\" src={avatar}>{item.name}</Avatar>}\n            disableTypography\n            subheader={\n              <div className={classes.subheader}>\n                <Typography variant=\"body2\" className={classes.rating}>Đánh giá bởi:</Typography>\n                <Typography className={classes.userRating}>{item.name}</Typography><br />\n                <Rating\n                  disabled\n                  name=\"simple-controlled\"\n                  value={item.rating}\n                  style={{ color: \"#045EA8\" }}\n                />\n                <Typography variant=\"body2\">{moment(item.time).fromNow()}</Typography>\n              </div>\n            }\n          />\n        </div>\n      )  \n    }) \n  }\n\n  const renderRatingChanel = () => {\n    return ratingsChannel.map((item: any, index: number) => {\n      return (\n        <div key={index}>\n          <CardHeader \n            avatar={ <Avatar alt=\"Reviewer\" src={item.node.user_id.avatar || avatar}>{item.node.user_id.avatar}</Avatar>}\n            disableTypography\n            subheader={\n              <div className={classes.subheader}>\n                <Typography variant=\"body2\" className={classes.rating}>Đánh giá bởi:</Typography>\n                <Typography className={classes.userRating}>{item.node.user_id.first_name} {item.node.user_id.last_name}</Typography><br />\n                <Rating\n                  disabled\n                  name=\"simple-controlled\"\n                  value={item.node.rate}\n                  style={{ color: \"#045EA8\" }}\n                />\n                <Typography variant=\"body2\">{moment(Number(item.node.created_at)).fromNow()}</Typography>\n              </div>\n            }\n          />\n        </div>\n      )  \n    }) \n  }\n\n  const renderAverageRating = () => {\n    const total = 1396\n    return (\n      <div>\n        <Typography variant=\"h5\" className={classes.titleRating}>Đánh giá chất lượng</Typography>\n        <div \n          style={{\n            width: \"220px\",\n            height: \"200px\",\n            float: \"left\",\n          }}\n        >\n          <p style={{ fontSize: 150, }}>5.0</p>\n          <Grid container alignItems=\"center\" justify=\"center\" spacing={4}>\n            <Grid item xs={8}>\n              <Rating disabled name=\"simple-controlled\" value={5} style={{ color: \"#045EA8\" }} />\n            </Grid>\n            <Grid item xs={4}>{total}</Grid>\n          </Grid>\n        </div>\n        <div \n          style={{\n            width: \"calc(100% - 220px)\",\n            height: \"200px\",\n            float: 'left',\n          }}\n        >\n          <div style={{ padding: \"20px\" }} >\n            <div style={{ width: '50%', height: 10, backgroundColor: \"#aaa\", borderRadius: 5, margin: '20px', position: \"relative\" }} >\n              <div style={{ width: '90%', height: 10, backgroundColor: \"blue\", borderRadius: 5, position: \"absolute\"}} ></div>\n            </div>\n           \n            {/* <div style={{ width: '100%', height: 10, backgroundColor: \"red\", borderRadius: 5, margin: '20px' }} ></div>\n            <div style={{ width: '100%', height: 10, backgroundColor: \"red\", borderRadius: 5, margin: '20px' }} ></div>\n            <div style={{ width: '100%', height: 10, backgroundColor: \"red\", borderRadius: 5, margin: '20px' }} ></div>\n            <div style={{ width: '100%', height: 10, backgroundColor: \"red\", borderRadius: 5, margin: '20px' }} ></div> */}\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className={classes.rootRating}>\n      <Typography variant=\"h5\" className={classes.titleRating}>Đánh giá gần nhất</Typography>\n      {Array.isArray(ratings) ? renderRatingChanel() : <Typography align=\"center\">Không có đánh giá nào</Typography> }\n      {renderAverageRating()}\n      {/* {Array.isArray(ratings) ? renderRating() : <Typography align=\"center\">Không có đánh giá nào</Typography> } */}\n    </div>\n  );\n};\n\n\nexport default Ratings;"]},"metadata":{},"sourceType":"module"}
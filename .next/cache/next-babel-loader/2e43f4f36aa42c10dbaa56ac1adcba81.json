{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\manh nhan\\\\Desktop\\\\data\\\\chat\\\\components\\\\AdSellLeases\\\\SameTypeASL.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport { apolloClient } from \"../../utils\";\nimport { GET_AD_SELL_LEASES } from \"../../graphql/ad_sell_leases/queries\";\nimport Validator from \"../../modules/validator\";\nimport GridAdSellLeases from \"../GridList/GridAdSellLeases\";\n\nvar SameTypeASL = function SameTypeASL(props) {\n  var type2 = '';\n\n  if (props.dataObject && props.dataObject.type && props.dataObject.type.type2) {\n    type2 = props.dataObject.type.type2;\n  }\n\n  var filterObject = {\n    type2: type2\n  };\n  var currentASLId = props.dataObject.id; //Search Data AdsellLease\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      searchDataAdSellLease = _React$useState2[0],\n      setSearchDataAdSellLease = _React$useState2[1];\n\n  useEffect(function () {\n    var dataFilter = _JSON$stringify(filterObject);\n\n    dataFilter = dataFilter.split('\"').join(\"'\");\n    apolloClient.query({\n      query: GET_AD_SELL_LEASES,\n      variables: {\n        \"page\": 1,\n        \"limit\": 7,\n        \"filter\": dataFilter\n      }\n    }).then(function (response) {\n      if (!Validator.isBlank(response.data) && !Validator.isBlank(response.data.adSellLeases.edges)) {\n        var dataASL = [];\n        var countNumber = 0;\n\n        for (var index in response.data.adSellLeases.edges) {\n          if (response.data.adSellLeases.edges[index].node.id !== currentASLId && countNumber < 6) {\n            dataASL.push(response.data.adSellLeases.edges[index]);\n            countNumber++;\n          }\n        }\n\n        setSearchDataAdSellLease(dataASL);\n      }\n    });\n  }, []);\n\n  if (searchDataAdSellLease && searchDataAdSellLease.length > 0) {\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: \"project-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, __jsx(\"h2\", {\n      className: \"project-info-title text-active u-margin-bottom-small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Tin c\\xF9ng lo\\u1EA1i h\\xECnh \", props.type2Name.toLowerCase())), __jsx(\"div\", {\n      className: 'project-body-ad-sell-lease',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, __jsx(GridAdSellLeases, {\n      grid: {\n        xl: 3,\n        lg: 4,\n        md: 6,\n        sm: 6,\n        xs: 12\n      },\n      gridData: searchDataAdSellLease,\n      className: \"grid__list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })));\n  } else {\n    return __jsx(React.Fragment, null);\n  }\n};\n\nexport default SameTypeASL;","map":{"version":3,"sources":["C:/Users/manh nhan/Desktop/data/chat/components/AdSellLeases/SameTypeASL.tsx"],"names":["React","useEffect","apolloClient","GET_AD_SELL_LEASES","Validator","GridAdSellLeases","SameTypeASL","props","type2","dataObject","type","filterObject","currentASLId","id","useState","searchDataAdSellLease","setSearchDataAdSellLease","dataFilter","split","join","query","variables","then","response","isBlank","data","adSellLeases","edges","dataASL","countNumber","index","node","push","length","type2Name","toLowerCase","xl","lg","md","sm","xs"],"mappings":"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","sourcesContent":["import React, {FunctionComponent, useEffect} from \"react\";\r\nimport {apolloClient} from \"../../utils\";\r\nimport {GET_AD_SELL_LEASES} from \"../../graphql/ad_sell_leases/queries\";\r\nimport Validator from \"../../modules/validator\";\r\nimport GridAdSellLeases from \"../GridList/GridAdSellLeases\";\r\nimport {AdSellLeaseItem} from '../../interfaces/adSellLeaseItem';\r\nimport {AdSellLeasesListProps} from '../../interfaces/interface';\r\n\r\ninterface ProjectProps {\r\n  dataObject: AdSellLeaseItem,\r\n  type2Name: string\r\n}\r\n\r\nconst SameTypeASL: FunctionComponent<ProjectProps> = (props: ProjectProps) => {\r\n  let type2 = '';\r\n  if (props.dataObject && props.dataObject.type && props.dataObject.type.type2) {\r\n    type2 = props.dataObject.type.type2;\r\n  }\r\n  let filterObject =  {\r\n    type2: type2\r\n  };\r\n  let currentASLId = props.dataObject.id;\r\n  //Search Data AdsellLease\r\n  const [searchDataAdSellLease, setSearchDataAdSellLease] = React.useState<AdSellLeasesListProps[]>([]);\r\n  useEffect(() => {\r\n    let dataFilter = JSON.stringify(filterObject);\r\n    dataFilter = dataFilter.split('\"').join(\"'\");\r\n    apolloClient.query({query: GET_AD_SELL_LEASES, variables: {\r\n        \"page\": 1,\r\n        \"limit\": 7,\r\n        \"filter\": dataFilter\r\n      }}).then(response => {\r\n      if (!Validator.isBlank(response.data) && !Validator.isBlank(response.data.adSellLeases.edges)) {\r\n        let dataASL = [];\r\n        let countNumber = 0;\r\n        for (let index in response.data.adSellLeases.edges) {\r\n          if (response.data.adSellLeases.edges[index].node.id !== currentASLId && countNumber < 6) {\r\n            dataASL.push(response.data.adSellLeases.edges[index]);\r\n            countNumber++;\r\n          }\r\n        }\r\n        setSearchDataAdSellLease(dataASL);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  if (searchDataAdSellLease && searchDataAdSellLease.length > 0) {\r\n    return (\r\n      <>\r\n        <div className=\"project-info\">\r\n          <h2 className=\"project-info-title text-active u-margin-bottom-small\">Tin cùng loại hình {(props.type2Name).toLowerCase()}</h2>\r\n        </div>\r\n        <div className={'project-body-ad-sell-lease'}>\r\n          <GridAdSellLeases\r\n            grid={{xl: 3, lg: 4, md: 6, sm: 6, xs: 12}}\r\n            gridData={searchDataAdSellLease}\r\n            className=\"grid__list\"\r\n          />\r\n        </div>\r\n      </>\r\n    );\r\n  } else {\r\n    return (<></>);\r\n  }\r\n\r\n};\r\n\r\nexport default SameTypeASL;\r\n"]},"metadata":{},"sourceType":"module"}
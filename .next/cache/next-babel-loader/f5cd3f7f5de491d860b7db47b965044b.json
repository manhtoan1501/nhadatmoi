{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _Array$isArray from \"@babel/runtime-corejs2/core-js/array/is-array\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\manh nhan\\\\Desktop\\\\Nhadatmoi\\\\components\\\\Chat\\\\Index.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Popper from '@material-ui/core/Popper';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { Element, scroller } from 'react-scroll';\nimport _ from 'lodash';\nimport { Grid, InputBase, Fade, Typography, Paper, CardHeader, Avatar, TextField, Divider, Input, IconButton } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport TagFacesIcon from '@material-ui/icons/TagFaces';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SendIcon from '@material-ui/icons/Send';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { dataEmoji, giphyDefault, useStyles, themeTextfieldAdmin, themeTextfieldUser, StyledBadge, themeTextHeader, themeInput, themeInputBase } from \"./constant\";\nimport { create } from 'jss';\nimport rtl from 'jss-rtl';\nimport axios from \"axios\";\nimport { apiBaseURL } from \"../../constants\";\nimport \"cross-fetch/polyfill\";\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { apolloClient } from \"../../utils\";\nvar client = axios.create({\n  baseURL: apiBaseURL,\n  timeout: 30000\n});\nimport { READ_MESSAGE } from \"../../graphql/chat/mutation\";\nimport moment from \"moment\";\nimport 'moment/locale/es';\nmoment.locale('vi');\nimport { jssPreset } from '@material-ui/core/styles';\nvar jss = create({\n  plugins: [].concat(_toConsumableArray(jssPreset().plugins), [rtl()])\n});\nvar useStylesBootstrap = makeStyles(function (theme) {\n  return {\n    arrow: {\n      color: \"#444\"\n    },\n    tooltip: {\n      backgroundColor: \"#444\"\n    }\n  };\n});\n\nfunction BootstrapTooltip(props) {\n  var classes = useStylesBootstrap();\n  return __jsx(Tooltip, _extends({\n    arrow: true,\n    classes: classes\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }));\n}\n\nexport default function PositionedPopper() {\n  var classes = useStyles();\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      anchorEl = _React$useState2[0],\n      setAnchorEl = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      open = _React$useState4[0],\n      setOpen = _React$useState4[1];\n\n  var _React$useState5 = React.useState(),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      placement = _React$useState6[0],\n      setPlacement = _React$useState6[1];\n\n  var _React$useState7 = React.useState(true),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      online = _React$useState8[0],\n      setOnline = _React$useState8[1];\n\n  var _React$useState9 = React.useState(true),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      internet = _React$useState10[0],\n      setInternet = _React$useState10[1];\n\n  var _React$useState11 = React.useState(false),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      texting = _React$useState12[0],\n      setTexting = _React$useState12[1];\n\n  var _React$useState13 = React.useState(),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      giphyData = _React$useState14[0],\n      setGiphyData = _React$useState14[1];\n\n  var _React$useState15 = React.useState(false),\n      _React$useState16 = _slicedToArray(_React$useState15, 2),\n      openEmojiGiphy = _React$useState16[0],\n      setOpenEmojiGiphy = _React$useState16[1];\n\n  var _React$useState17 = React.useState(\"\"),\n      _React$useState18 = _slicedToArray(_React$useState17, 2),\n      valueSearchGiphy = _React$useState18[0],\n      setValueSearchGiphy = _React$useState18[1]; // const [avatarImage, setAvatarImage] = React.useState(\"https://image.crisp.chat/avatar/operator/da8d4459-5ea3-4119-bca1-9170f49ee69c/240/?1585999578742&quot\")\n\n\n  var _React$useState19 = React.useState(\"https://png.pngtree.com/element_origin_min_pic/17/01/03/643d0060ffc94e7bd0d6aadc783274d8.jpg\"),\n      _React$useState20 = _slicedToArray(_React$useState19, 2),\n      avatarImage = _React$useState20[0],\n      setAvatarImage = _React$useState20[1];\n\n  var _React$useState21 = React.useState(\"Nguyễn Thanh Hương\"),\n      _React$useState22 = _slicedToArray(_React$useState21, 2),\n      nameAdmin = _React$useState22[0],\n      setNameAdmin = _React$useState22[1];\n\n  var _React$useState23 = React.useState(\"\"),\n      _React$useState24 = _slicedToArray(_React$useState23, 2),\n      valueInput = _React$useState24[0],\n      setValueInput = _React$useState24[1];\n\n  var _React$useState25 = React.useState(false),\n      _React$useState26 = _slicedToArray(_React$useState25, 2),\n      viewEmoji = _React$useState26[0],\n      setViewEmoji = _React$useState26[1];\n\n  var _React$useState27 = React.useState(),\n      _React$useState28 = _slicedToArray(_React$useState27, 2),\n      chatMessage = _React$useState28[0],\n      setChatMessage = _React$useState28[1];\n\n  var _React$useState29 = React.useState(true),\n      _React$useState30 = _slicedToArray(_React$useState29, 2),\n      reload = _React$useState30[0],\n      setReload = _React$useState30[1];\n\n  var _React$useState31 = React.useState(true),\n      _React$useState32 = _slicedToArray(_React$useState31, 2),\n      checkLogin = _React$useState32[0],\n      setCheckLogin = _React$useState32[1];\n\n  var onCloseChat = function onCloseChat() {\n    setOpen(false);\n  };\n\n  var getCookie = function getCookie(cname) {\n    var name = cname + \"=\";\n    var ca = document.cookie.split(';');\n\n    for (var i = 0; i < ca.length; i++) {\n      var c = ca[i];\n\n      while (c.charAt(0) == ' ') {\n        c = c.substring(1);\n      }\n\n      if (c.indexOf(name) == 0) {\n        return c.substring(name.length, c.length);\n      }\n    }\n\n    return \"\";\n  };\n\n  var checkCookie = function checkCookie() {\n    var user = getCookie(\"user\");\n    console.log(\"user login\", user);\n\n    if (user != \"\") {\n      setCheckLogin(true);\n    } else {\n      setCheckLogin(false);\n    }\n  };\n\n  var _senMessage = function _senMessage(value, url) {\n    return _regeneratorRuntime.async(function _senMessage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            apolloClient.mutate({\n              mutation: READ_MESSAGE,\n              variables: {\n                \"input\": {\n                  \"id\": \"5e991fef5e32af5f4e43c1ef\",\n                  \"message\": {\n                    \"text\": \"\".concat(value),\n                    \"attachment\": {\n                      \"type\": \"image\",\n                      \"payload\": {\n                        \"url\": \"\".concat(url)\n                      }\n                    }\n                  }\n                }\n              }\n            }).then(function (response) {\n              if (response.data) {\n                setChatMessage(response.data.chatMessage);\n              }\n            });\n            setReload(!reload);\n            setValueInput(\"\");\n            setScrollTo();\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  };\n\n  var renderHeader = function renderHeader() {\n    return __jsx(ThemeProvider, {\n      theme: themeTextHeader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, __jsx(CardHeader, {\n      className: classes.header,\n      avatar: __jsx(StyledBadge, {\n        overlap: \"circle\",\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right'\n        },\n        variant: online ? \"dot\" : \"standard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, __jsx(Avatar, {\n        src: avatarImage,\n        className: classes.sizeAvatarSmall,\n        alt: \"nhadatmoi.net\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      })),\n      title: nameAdmin,\n      subheader: __jsx(Typography, {\n        variant: \"caption\",\n        align: \"center\",\n        className: classes.timeWork,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"Ho\\u1EA1t \\u0111\\u1ED9ng: \", moment().format('DD/MM/YYYY')),\n      action: __jsx(IconButton, {\n        color: \"inherit\",\n        \"aria-label\": \"settings\",\n        onClick: function onClick() {\n          return onCloseChat();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, __jsx(CloseIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }));\n  };\n\n  var searchGiphy = function searchGiphy(event) {\n    var url, getData;\n    return _regeneratorRuntime.async(function searchGiphy$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            setValueSearchGiphy(event.target.value);\n            url = \"https://api.giphy.com/v1/gifs/search?api_key=UgTMyvovmg74m8fPN6qYiB623nwS1IPc&q=\".concat(event.target.value, \"&limit=20&offset=0&rating=G&lang=vi\");\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(axios.get(url, {}).then(function (response) {\n              setGiphyData(response.data.data);\n            }));\n\n          case 4:\n            getData = _context2.sent;\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    });\n  };\n\n  var dataSearch = [];\n\n  if (_Array$isArray(giphyData)) {\n    giphyData.map(function (item, index) {\n      dataSearch.push({\n        image: {\n          url: item.images.fixed_width.url,\n          height: item.images.fixed_width.height,\n          width: item.images.fixed_width.width\n        }\n      });\n    });\n  }\n\n  ; // Gửi ảnh emoji giphy \n\n  var setItemGiphy = function setItemGiphy(index, name) {\n    setOpenEmojiGiphy(!openEmojiGiphy);\n\n    if (name == \"giphyDefault\") {\n      _senMessage(\"\", giphyDefault[index].image.url);\n    } else if (name == \"dataSearch\") {\n      _senMessage(\"\", dataSearch[index].image.url);\n    }\n  };\n\n  var onClickEmoji = function onClickEmoji(index) {\n    valueInput = valueInput + dataEmoji[index][\"native\"];\n    setValueInput(valueInput);\n  };\n\n  var renderEmojiGiphy = function renderEmojiGiphy() {\n    return __jsx(\"div\", {\n      className: classes.emojiGiphy,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: classes.marinButtonEmojiGiphy,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, __jsx(\"button\", {\n      className: classes.buttonEmojiGiphy,\n      onClick: function onClick() {\n        return setViewEmoji(true);\n      },\n      style: {\n        backgroundColor: !viewEmoji ? \"#aaa\" : \"\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, \" Bi\\u1EC3u t\\u01B0\\u1EE3ng\"), __jsx(\"button\", {\n      className: classes.buttonEmojiGiphy,\n      onClick: function onClick() {\n        return setViewEmoji(false);\n      },\n      style: {\n        backgroundColor: viewEmoji ? \"#aaa\" : \"\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, \" \\u1EA2nh \\u0111\\u1ED9ng\")), !viewEmoji && // ẩn search\n    __jsx(\"div\", {\n      className: classes.rootPaper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, __jsx(SearchIcon, {\n      className: classes.sizeSearchIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }), __jsx(ThemeProvider, {\n      theme: themeInputBase,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, __jsx(InputBase, {\n      onChange: function onChange(e) {\n        return searchGiphy(e);\n      },\n      className: classes.inputBaseGiphy,\n      placeholder: \"T\\xECm ki\\u1EBFm ...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }))), viewEmoji // view emoji or giphy\n    ? __jsx(\"div\", {\n      className: classes.overflowHeightEmoji,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, dataEmoji.map(function (item, index) {\n      return __jsx(\"div\", {\n        onClick: function onClick() {\n          return onClickEmoji(index);\n        },\n        key: index,\n        className: classes.itemEmoji,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, item[\"native\"]);\n    })) : __jsx(\"div\", {\n      className: classes.overflowHeightGiphy,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, valueSearchGiphy // view giphy serach\n    ? dataSearch.map(function (item, index) {\n      return __jsx(\"div\", {\n        className: classes.dispalyImageGiphy,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, __jsx(\"img\", {\n        className: classes.imgListGiphy,\n        alt: \"giphy\",\n        src: item.image.url,\n        onClick: function onClick() {\n          return setItemGiphy(index, \"dataSearch\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }));\n    }) : giphyDefault.map(function (item, index) {\n      // view giphy default\n      return __jsx(\"div\", {\n        className: classes.dispalyImageGiphy,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, __jsx(\"img\", {\n        className: classes.imgListGiphy,\n        alt: \"giphy\",\n        src: item.image.url,\n        onClick: function onClick() {\n          return setItemGiphy(index, \"giphyDefault\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }));\n    })));\n  };\n\n  var doesConnectionExist = function doesConnectionExist() {\n    var xhr = new XMLHttpRequest();\n    var file = \"https://nhadatmoi.net/\";\n    var randomNum = Math.round(Math.random() * 10000);\n    xhr.open('HEAD', file + \"?rand=\" + randomNum, false);\n\n    try {\n      xhr.send();\n\n      if (xhr.status >= 200 && xhr.status < 304) {\n        return true;\n      } else {\n        return false;\n      }\n    } catch (e) {\n      return false;\n    }\n  };\n\n  var renderContentChat = function renderContentChat() {\n    var conversation = _.get(chatMessage, \"conversation\", []);\n\n    console.log(\"conversation\", conversation);\n    return __jsx(\"div\", {\n      className: classes.overflowHeightEmojiGiphy,\n      style: {\n        height: openEmojiGiphy ? '230px' : '430px'\n      },\n      id: 'ContainerElementID',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, __jsx(Element, {\n      name: \"myScrollToElement\",\n      id: \"test_ndm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }, __jsx(Typography, {\n      align: \"center\",\n      className: classes.textSizeNewDate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }, moment().format('LLL')), __jsx(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }), conversation.length ? conversation.map(function (item, index) {\n      var checkNewDate = false;\n      var setViewAvatar = true;\n      var oldDate = index > 0 ? moment(Number(conversation[index - 1].send_at)).format('YYYY-MM-DD') : '';\n      var newDate = moment(Number(conversation[index].send_at)).format('YYYY-MM-DD');\n\n      if (index > 0 && oldDate !== newDate) {\n        checkNewDate = true;\n      } // setView avatar admin\n      // if(item.type === 'admin' && index > 0) {\n      //   if((index === arrChat.length) || (arrChat[index - 1].type != arrChat[index].type) || (oldDate !== newDate)){\n      //     setViewAvatar = true\n      //   }\n      // } else if(item.type === 'admin' && index === 0 ) {\n      //   setViewAvatar = true\n      // }\n      // let width = item.image.width\n      // let height = item.image.height\n\n\n      console.log(\"item >>> \", item);\n      return __jsx(\"div\", {\n        key: index,\n        style: {\n          display: \"block\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362\n        },\n        __self: this\n      }, checkNewDate && __jsx(Typography, {\n        align: \"center\",\n        className: classes.textSizeNewDate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }, moment(Number(item.send_at)).format(\"LLL\"), \" \", __jsx(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364\n        },\n        __self: this\n      })), item.send_user_id !== 'admin' ? __jsx(ThemeProvider, {\n        theme: themeTextfieldAdmin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: classes.viewAvatarChatContent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        },\n        __self: this\n      }, setViewAvatar && __jsx(Avatar, {\n        className: classes.avatarAdminText,\n        alt: \"nhadatmoi.net\",\n        src: avatarImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368\n        },\n        __self: this\n      })), __jsx(\"div\", {\n        className: classes.textFieldChatContent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370\n        },\n        __self: this\n      }, item.message.attachment.payload.url ? __jsx(\"div\", {\n        className: classes.viewContentImageGiphy,\n        style: {\n          width: \"250px\",\n          maxWidth: \"300px\",\n          height: \"auto\",\n          \"float\": \"left\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373\n        },\n        __self: this\n      }, __jsx(BootstrapTooltip, {\n        title: moment(Number(item.send_at)).fromNow(),\n        placement: \"top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374\n        },\n        __self: this\n      }, __jsx(\"img\", {\n        className: classes.imgGiphy,\n        alt: \"giphy\",\n        src: item.message.attachment.payload.url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375\n        },\n        __self: this\n      }))) : __jsx(\"div\", {\n        className: classes.textAdminLeft,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378\n        },\n        __self: this\n      }, __jsx(BootstrapTooltip, {\n        title: moment(Number(item.send_at)).fromNow(),\n        placement: \"top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379\n        },\n        __self: this\n      }, __jsx(TextField, {\n        fullWidth: item.message.text.length > 15 ? true : false,\n        label: \"\",\n        color: \"primary\",\n        className: classes.textAdmin,\n        value: item.message.text.trim(),\n        margin: \"dense\",\n        id: \"outlined-basic\",\n        multiline: true,\n        InputProps: {\n          readOnly: true\n        },\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380\n        },\n        __self: this\n      }))))) : __jsx(ThemeProvider, {\n        theme: themeTextfieldUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399\n        },\n        __self: this\n      }, item.message.attachment.payload.url ? __jsx(\"div\", {\n        className: classes.viewContentImageGiphy,\n        style: {\n          width: \"250px\",\n          height: \"auto\",\n          \"float\": \"right\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402\n        },\n        __self: this\n      }, __jsx(BootstrapTooltip, {\n        title: moment(Number(item.send_at)).fromNow(),\n        placement: \"top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403\n        },\n        __self: this\n      }, __jsx(\"img\", {\n        className: classes.imgGiphy,\n        alt: \"giphy\",\n        src: item.message.attachment.payload.url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404\n        },\n        __self: this\n      }))) : __jsx(\"div\", {\n        className: classes.textFieldUserChatContent,\n        dir: \"\".concat(item.message.text.length < 45 ? 'rtl' : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408\n        },\n        __self: this\n      }, __jsx(BootstrapTooltip, {\n        title: moment(Number(item.send_at)).fromNow(),\n        placement: \"top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409\n        },\n        __self: this\n      }, __jsx(TextField, {\n        fullWidth: item.message.text.length > 15 ? true : false,\n        label: \"\",\n        color: \"primary\",\n        className: classes.textUser,\n        value: item.message.text.trim(),\n        margin: \"dense\",\n        id: \"outlined-basic\",\n        multiline: true,\n        InputProps: {\n          readOnly: true\n        },\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410\n        },\n        __self: this\n      })))), __jsx(\"div\", {\n        style: {\n          clear: \"both\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429\n        },\n        __self: this\n      }));\n    }) : \"\", __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434\n      },\n      __self: this\n    }, !internet && __jsx(\"p\", {\n      className: classes.errInternet,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435\n      },\n      __self: this\n    }, \" \", __jsx(\"u\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435\n      },\n      __self: this\n    }, \"Kh\\xF4ng th\\u1EC3 g\\u1EEDi tin nh\\u1EAFn n\\xE0y. Ki\\u1EC3m tra k\\u1EBFt n\\u1ED1i internet v\\xE0 th\\u1EED l\\u1EA1i\"))), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437\n      },\n      __self: this\n    }, texting && __jsx(\"p\", {\n      className: classes.texting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438\n      },\n      __self: this\n    }, \"\\u0110ang nh\\u1EADp ...\"))));\n  };\n\n  var onClickOpenEmojiGiphy = function onClickOpenEmojiGiphy() {\n    setOpenEmojiGiphy(!openEmojiGiphy);\n    setViewEmoji(true);\n  };\n\n  React.useEffect(function () {\n    checkCookie(); // const interval = setInterval(() => {\n    //   let internet = doesConnectionExist()\n    //   setInternet(!internet)\n    // }, 5000);\n    // return () => clearInterval(interval);\n  }, []);\n  var apiBaseURL = \"https://graph.nhadatmoi.net\";\n  var apiUpload = \"\".concat(apiBaseURL, \"/private_upload_image_app\");\n\n  var api = function api(method, url, data) {\n    return client.request({\n      data: _JSON$stringify(data),\n      headers: {\n        \"Accept\": \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      method: method,\n      url: url,\n      withCredentials: true\n    }).then(function (response) {\n      return response.data;\n    });\n  };\n\n  var upLoadImage = function upLoadImage(files) {\n    var reader = new FileReader();\n    var file = files.target.files[0];\n    reader.readAsDataURL(file);\n\n    reader.onload = function () {\n      api(\"POST\", \"\".concat(apiUpload), {\n        base64_image: reader.result,\n        fileName: new Date().getTime() + \"\" + file.name,\n        typeUpload: \"ad_sell_lease\"\n      }).then(function (res) {\n        _senMessage(\"\", res.location);\n      })[\"catch\"](function (err) {\n        alert('HTTP Error: ' + err.message);\n      });\n    };\n  };\n\n  var setOnKeyDown = function setOnKeyDown(event) {\n    if (event.keyCode == 13) {\n      _senMessage(valueInput, \"\");\n\n      setValueInput(\"\");\n      setScrollTo();\n    }\n  };\n\n  var setScrollTo = function setScrollTo() {\n    var heightChatDiv = 0;\n    var elm = document.getElementById(\"test_ndm\");\n\n    if (elm) {\n      heightChatDiv = elm.offsetHeight;\n    }\n\n    scroller.scrollTo('myScrollToElement', {\n      duration: 500,\n      delay: 100,\n      smooth: true,\n      containerId: 'ContainerElementID',\n      offset: heightChatDiv\n    });\n  };\n\n  var setChangeInput = function setChangeInput(value) {\n    setValueInput(value);\n  };\n\n  var renderInput = function renderInput() {\n    return __jsx(Paper, {\n      component: \"form\",\n      className: classes.inputBase,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521\n      },\n      __self: this\n    }, __jsx(ThemeProvider, {\n      theme: themeInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522\n      },\n      __self: this\n    }, __jsx(Input, {\n      fullWidth: true,\n      disabled: !internet,\n      margin: \"dense\",\n      id: \"outlined-basic\",\n      autoFocus: true,\n      value: valueInput,\n      multiline: true,\n      onChange: function onChange(e) {\n        return setChangeInput(e.target.value);\n      },\n      onKeyDown: function onKeyDown(e) {\n        return setOnKeyDown(e);\n      },\n      placeholder: \"Nh\\u1EADp tin nh\\u1EAFn ...\",\n      autoComplete: \"false\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 523\n      },\n      __self: this\n    }), openEmojiGiphy ? __jsx(BootstrapTooltip, {\n      title: \"Ch\\xE8n bi\\u1EC3u t\\u01B0\\u1EE3ng\",\n      placement: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 537\n      },\n      __self: this\n    }, __jsx(ExpandMoreIcon, {\n      className: classes.sizeIcon,\n      onClick: onClickOpenEmojiGiphy,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 538\n      },\n      __self: this\n    })) : __jsx(BootstrapTooltip, {\n      title: \"Ch\\xE8n bi\\u1EC3u t\\u01B0\\u1EE3ng\",\n      placement: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540\n      },\n      __self: this\n    }, __jsx(TagFacesIcon, {\n      className: classes.sizeIcon,\n      onClick: onClickOpenEmojiGiphy,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541\n      },\n      __self: this\n    })), valueInput ? __jsx(BootstrapTooltip, {\n      title: \"G\\u1EEDi tin nh\\u1EAFn\",\n      placement: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 545\n      },\n      __self: this\n    }, __jsx(SendIcon, {\n      onClick: function onClick() {\n        return _senMessage(valueInput, \"\");\n      },\n      className: classes.sizeIcon,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 546\n      },\n      __self: this\n    })) : __jsx(BootstrapTooltip, {\n      title: \"Th\\xEAm t\\u1EADp tin\",\n      placement: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 548\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: classes.inputWrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 549\n      },\n      __self: this\n    }, __jsx(AddCircleOutlineIcon, {\n      className: classes.sizeIcon,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 550\n      },\n      __self: this\n    }), __jsx(\"input\", {\n      type: \"file\",\n      className: classes.fileInput,\n      onChange: upLoadImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551\n      },\n      __self: this\n    })))));\n  };\n\n  var viewChat = function viewChat() {\n    var _open = open && checkLogin ? true : false;\n\n    return __jsx(Popper, {\n      open: _open,\n      anchorEl: anchorEl,\n      placement: placement,\n      transition: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 563\n      },\n      __self: this\n    }, function (_ref) {\n      var TransitionProps = _ref.TransitionProps;\n      return __jsx(Fade, _extends({}, TransitionProps, {\n        timeout: 300,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 565\n        },\n        __self: this\n      }), __jsx(Paper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 566\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: classes.positionSizeViewChat,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 567\n        },\n        __self: this\n      }, renderHeader(), renderContentChat(), openEmojiGiphy && renderEmojiGiphy(), renderInput())));\n    });\n  };\n\n  var handleClick = function handleClick(newPlacement) {\n    setOpen(true);\n    setPlacement(newPlacement);\n  };\n\n  var renderAvatar = function renderAvatar() {\n    return __jsx(\"div\", {\n      className: classes.positionAvatar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 587\n      },\n      __self: this\n    }, __jsx(StyledBadge, {\n      overlap: \"circle\",\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'right'\n      },\n      variant: online ? \"dot\" : \"standard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 588\n      },\n      __self: this\n    }, __jsx(Avatar, {\n      src: avatarImage,\n      onClick: function onClick() {\n        return handleClick(\"top-start\");\n      },\n      className: classes.large,\n      alt: \"nhadatmoi.net\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 593\n      },\n      __self: this\n    })));\n  };\n\n  return __jsx(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 600\n    },\n    __self: this\n  }, viewChat(), __jsx(Grid, {\n    container: true,\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 602\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 603\n    },\n    __self: this\n  }, !open && renderAvatar())));\n}\n;","map":{"version":3,"sources":["C:/Users/manh nhan/Desktop/Nhadatmoi/components/Chat/Index.tsx"],"names":["React","Popper","ThemeProvider","Element","scroller","_","Grid","InputBase","Fade","Typography","Paper","CardHeader","Avatar","TextField","Divider","Input","IconButton","SearchIcon","AddCircleOutlineIcon","TagFacesIcon","ExpandMoreIcon","CloseIcon","SendIcon","makeStyles","dataEmoji","giphyDefault","useStyles","themeTextfieldAdmin","themeTextfieldUser","StyledBadge","themeTextHeader","themeInput","themeInputBase","create","rtl","axios","apiBaseURL","Tooltip","apolloClient","client","baseURL","timeout","READ_MESSAGE","moment","locale","jssPreset","jss","plugins","useStylesBootstrap","theme","arrow","color","tooltip","backgroundColor","BootstrapTooltip","props","classes","PositionedPopper","useState","anchorEl","setAnchorEl","open","setOpen","placement","setPlacement","online","setOnline","internet","setInternet","texting","setTexting","giphyData","setGiphyData","openEmojiGiphy","setOpenEmojiGiphy","valueSearchGiphy","setValueSearchGiphy","avatarImage","setAvatarImage","nameAdmin","setNameAdmin","valueInput","setValueInput","viewEmoji","setViewEmoji","chatMessage","setChatMessage","reload","setReload","checkLogin","setCheckLogin","onCloseChat","getCookie","cname","name","ca","document","cookie","split","i","length","c","charAt","substring","indexOf","checkCookie","user","console","log","_senMessage","value","url","mutate","mutation","variables","then","response","data","setScrollTo","renderHeader","header","vertical","horizontal","sizeAvatarSmall","timeWork","format","searchGiphy","event","target","get","getData","dataSearch","map","item","index","push","image","images","fixed_width","height","width","setItemGiphy","onClickEmoji","renderEmojiGiphy","emojiGiphy","marinButtonEmojiGiphy","buttonEmojiGiphy","rootPaper","sizeSearchIcon","e","inputBaseGiphy","overflowHeightEmoji","itemEmoji","overflowHeightGiphy","dispalyImageGiphy","imgListGiphy","doesConnectionExist","xhr","XMLHttpRequest","file","randomNum","Math","round","random","send","status","renderContentChat","conversation","overflowHeightEmojiGiphy","textSizeNewDate","checkNewDate","setViewAvatar","oldDate","Number","send_at","newDate","display","send_user_id","viewAvatarChatContent","avatarAdminText","textFieldChatContent","message","attachment","payload","viewContentImageGiphy","maxWidth","fromNow","imgGiphy","textAdminLeft","text","textAdmin","trim","readOnly","textFieldUserChatContent","textUser","clear","errInternet","onClickOpenEmojiGiphy","useEffect","apiUpload","api","method","request","headers","withCredentials","upLoadImage","files","reader","FileReader","readAsDataURL","onload","base64_image","result","fileName","Date","getTime","typeUpload","res","location","err","alert","setOnKeyDown","keyCode","heightChatDiv","elm","getElementById","offsetHeight","scrollTo","duration","delay","smooth","containerId","offset","setChangeInput","renderInput","inputBase","sizeIcon","inputWrapper","fileInput","viewChat","_open","TransitionProps","positionSizeViewChat","handleClick","newPlacement","renderAvatar","positionAvatar","large","root"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport Popper, { PopperPlacementType } from '@material-ui/core/Popper';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport { Link, Element , Events, animateScroll as scroll, scrollSpy, scroller } from 'react-scroll';\r\nimport _ from 'lodash'\r\nimport { \r\n  Grid, \r\n  InputBase, \r\n  Fade,\r\n  Typography, \r\n  Paper, \r\n  CardHeader,\r\n  CardActionArea, \r\n  CardMedia, \r\n  Avatar, \r\n  TextField,\r\n  Badge, \r\n  Divider, \r\n  Input, \r\n  Chip, \r\n  IconButton\r\n} from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport TagFacesIcon from '@material-ui/icons/TagFaces';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport { \r\n  Theme, \r\n  makeStyles, \r\n  withStyles, \r\n  createStyles\r\n} from '@material-ui/core/styles';\r\nimport { \r\n  dataEmoji, \r\n  arrChat, \r\n  giphyDefault, \r\n  useStyles,\r\n  themeTextfieldAdmin, \r\n  themeTextfieldUser, \r\n  StyledBadge,\r\n  themeTextHeader,\r\n  themeInput,\r\n  themeInputBase\r\n} from \"./constant\"\r\nimport { create } from 'jss';\r\nimport rtl from 'jss-rtl';\r\nimport axios, {Method} from \"axios\";\r\nimport {apiBaseURL, apiGraphQLURL} from \"../../constants\";\r\nimport \"cross-fetch/polyfill\";\r\nimport Tooltip, { TooltipProps } from '@material-ui/core/Tooltip';\r\nimport ApolloClient from \"apollo-boost\";\r\nimport {apolloClient} from \"../../utils\";\r\nconst client = axios.create({ baseURL: apiBaseURL, timeout: 30000 });\r\nimport { SEN_MESSAGE, UPDATE_MESSAGE, READ_MESSAGE } from \"../../graphql/chat/mutation\";\r\nimport moment from \"moment\"\r\nimport 'moment/locale/es'   \r\nmoment.locale('vi')\r\nimport { StylesProvider, jssPreset } from '@material-ui/core/styles';\r\nconst jss = create({ plugins: [...jssPreset().plugins, rtl()] });\r\n\r\nconst useStylesBootstrap = makeStyles((theme: Theme) => ({\r\n  arrow: {\r\n    color: \"#444\",\r\n  },\r\n  tooltip: {\r\n    backgroundColor: \"#444\",\r\n  },\r\n}));\r\n\r\nfunction BootstrapTooltip(props: TooltipProps) {\r\n  const classes = useStylesBootstrap();\r\n\r\n  return <Tooltip arrow classes={classes} {...props} />;\r\n}\r\n\r\ninterface ChatMessage {\r\n  chatMessage: {\r\n    id: string\r\n    conversation: Conversation[]\r\n  }\r\n}\r\n\r\ninterface Conversation {\r\n  id: string\r\n  send_user_id: string\r\n  message: {\r\n    text: string\r\n    attachment: {\r\n      type: string\r\n      payload: {\r\n        url: string\r\n      }\r\n    }\r\n    status_check: number\r\n    read_at: string\r\n    send_at: string\r\n  }\r\n}\r\n\r\n\r\nexport default function PositionedPopper() {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(null);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [placement, setPlacement] = React.useState<PopperPlacementType>();\r\n  const [online, setOnline] = React.useState<boolean>(true);\r\n  const [internet, setInternet] = React.useState<boolean>(true);\r\n  const [texting, setTexting] = React.useState<boolean>(false);\r\n  const [giphyData, setGiphyData] = React.useState<any>();\r\n  const [openEmojiGiphy, setOpenEmojiGiphy] = React.useState<boolean>(false);\r\n  const [valueSearchGiphy, setValueSearchGiphy] = React.useState(\"\");\r\n  // const [avatarImage, setAvatarImage] = React.useState(\"https://image.crisp.chat/avatar/operator/da8d4459-5ea3-4119-bca1-9170f49ee69c/240/?1585999578742&quot\")\r\n  const [avatarImage, setAvatarImage] = React.useState(\"https://png.pngtree.com/element_origin_min_pic/17/01/03/643d0060ffc94e7bd0d6aadc783274d8.jpg\")\r\n  const [nameAdmin, setNameAdmin] = React.useState(\"Nguyễn Thanh Hương\");\r\n  let   [valueInput, setValueInput] = React.useState(\"\");\r\n  const [viewEmoji, setViewEmoji] = React.useState(false);\r\n  const [chatMessage, setChatMessage] = React.useState<ChatMessage>()\r\n  const [reload, setReload] = React.useState(true)\r\n  const [checkLogin, setCheckLogin] = React.useState<boolean>(true)\r\n\r\n  const onCloseChat = () => {\r\n    setOpen(false)\r\n  };\r\n\r\n  const getCookie = (cname: any) => {\r\n    var name = cname + \"=\";\r\n    var ca = document.cookie.split(';');\r\n    for(var i = 0; i <ca.length; i++) {\r\n        var c = ca[i];\r\n        while (c.charAt(0)==' ') {\r\n            c = c.substring(1);\r\n        }\r\n        if (c.indexOf(name) == 0) {\r\n            return c.substring(name.length,c.length);\r\n        }\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  const checkCookie = () => {\r\n    let user = getCookie(\"user\");\r\n    console.log(\"user login\", user)\r\n    if (user != \"\") {\r\n      setCheckLogin(true)\r\n    } else {\r\n      setCheckLogin(false)\r\n    }\r\n  }\r\n\r\n  const _senMessage = async (value: any, url: string)=> { \r\n    apolloClient.mutate({mutation: READ_MESSAGE, variables: {\r\n      \"input\": {\r\n        \"id\": \"5e991fef5e32af5f4e43c1ef\",\r\n        \"message\": {\r\n          \"text\": `${value}`,\r\n          \"attachment\": {\r\n            \"type\": \"image\",\r\n            \"payload\": {\r\n              \"url\" : `${url}`\r\n            }\r\n          }\r\n        }\r\n      }}})\r\n      .then((response: any) => {\r\n      if(response.data){\r\n        setChatMessage(response.data.chatMessage)\r\n      }\r\n    })\r\n    setReload(!reload)\r\n    setValueInput(\"\")\r\n    setScrollTo()\r\n  };\r\n\r\n  const renderHeader = () => {\r\n    return (\r\n      <ThemeProvider theme={themeTextHeader}>\r\n        <CardHeader\r\n          className={classes.header}\r\n          avatar={\r\n            <StyledBadge\r\n              overlap=\"circle\"\r\n              anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n              variant= { online ? \"dot\" : \"standard\" }\r\n            >\r\n              <Avatar src={avatarImage} className={classes.sizeAvatarSmall} alt=\"nhadatmoi.net\" />\r\n            </StyledBadge>\r\n          }\r\n          title={nameAdmin}\r\n          subheader={ \r\n            <Typography variant=\"caption\" align=\"center\" className={classes.timeWork}>\r\n              Hoạt động: {moment().format('DD/MM/YYYY')}\r\n            </Typography>\r\n          }\r\n          action={\r\n            <IconButton color='inherit' aria-label=\"settings\" onClick={() => onCloseChat()} >\r\n              <CloseIcon/>\r\n            </IconButton>\r\n          }\r\n        />\r\n      </ThemeProvider>\r\n    )\r\n  };\r\n\r\n  const searchGiphy = async (event: any)=>  { \r\n    setValueSearchGiphy(event.target.value)\r\n    let url = `https://api.giphy.com/v1/gifs/search?api_key=UgTMyvovmg74m8fPN6qYiB623nwS1IPc&q=${event.target.value}&limit=20&offset=0&rating=G&lang=vi`\r\n    let getData = await axios.get(url, {})\r\n    .then(function (response) {\r\n      setGiphyData(response.data.data)\r\n    })\r\n  };\r\n\r\n  let dataSearch: any = [];\r\n  if(Array.isArray(giphyData)){\r\n    giphyData.map((item: any, index: number) => {\r\n      dataSearch.push({ \r\n        image: {\r\n          url: item.images.fixed_width.url,\r\n          height: item.images.fixed_width.height,\r\n          width: item.images.fixed_width.width,\r\n        }})\r\n    })\r\n  };\r\n  \r\n  // Gửi ảnh emoji giphy \r\n  const setItemGiphy = (index: number, name: string) => {\r\n    setOpenEmojiGiphy(!openEmojiGiphy)\r\n    if(name == \"giphyDefault\") {\r\n      _senMessage(\"\", giphyDefault[index].image.url)\r\n    } else if ( name == \"dataSearch\") {\r\n      _senMessage(\"\", dataSearch[index].image.url)\r\n    }\r\n  };\r\n\r\n  const onClickEmoji = (index: number) => {\r\n    valueInput = valueInput +  dataEmoji[index].native\r\n    setValueInput(valueInput)\r\n  };\r\n\r\n  const renderEmojiGiphy = () => {\r\n    return (\r\n      <div className={classes.emojiGiphy}>\r\n        <div className={classes.marinButtonEmojiGiphy}>\r\n          <button \r\n            className={classes.buttonEmojiGiphy} \r\n            onClick={() => setViewEmoji(true)} \r\n            style={{ backgroundColor: !viewEmoji ? \"#aaa\" : \"\" }}\r\n          > Biểu tượng</button>\r\n          <button \r\n            className={classes.buttonEmojiGiphy} \r\n            onClick={() => setViewEmoji(false)} \r\n            style={{ backgroundColor: viewEmoji ? \"#aaa\" : \"\" }}\r\n          > Ảnh động</button>\r\n        </div>\r\n        { !viewEmoji && // ẩn search\r\n          <div className={classes.rootPaper}>\r\n            <SearchIcon className={classes.sizeSearchIcon} />\r\n            <ThemeProvider theme={themeInputBase}>\r\n              <InputBase\r\n                onChange={(e) => searchGiphy(e)}\r\n                className={classes.inputBaseGiphy}\r\n                placeholder=\"Tìm kiếm ...\"\r\n              />\r\n            </ThemeProvider>\r\n          </div>}\r\n        { viewEmoji // view emoji or giphy\r\n          ? <div className={classes.overflowHeightEmoji}>\r\n              {dataEmoji.map((item: any, index: number) => {\r\n                return (\r\n                  <div \r\n                    onClick={() => onClickEmoji(index)} \r\n                    key={index} className={classes.itemEmoji}\r\n                  >{item.native}</div>\r\n                )\r\n              })}\r\n            </div>\r\n          : <div className={classes.overflowHeightGiphy}>\r\n              {valueSearchGiphy // view giphy serach\r\n                ? dataSearch.map((item: any, index: number) => {\r\n                    return (\r\n                      <div className={classes.dispalyImageGiphy} >\r\n                        <img \r\n                          className={classes.imgListGiphy} \r\n                          alt=\"giphy\" \r\n                          src={item.image.url} \r\n                          onClick={() => setItemGiphy(index, \"dataSearch\")} \r\n                        />\r\n                      </div>\r\n                    )\r\n                  })\r\n                : giphyDefault.map((item: any, index: number) => { // view giphy default\r\n                    return (\r\n                      <div className={classes.dispalyImageGiphy} >\r\n                        <img \r\n                          className={classes.imgListGiphy} \r\n                          alt=\"giphy\" \r\n                          src={item.image.url} \r\n                          onClick={() => setItemGiphy(index, \"giphyDefault\")} \r\n                        />\r\n                      </div>\r\n                    )\r\n                  })\r\n              }\r\n            </div>\r\n        }\r\n      </div>\r\n    )\r\n  };\r\n\r\n  const doesConnectionExist = () => {\r\n        var xhr = new XMLHttpRequest();\r\n        var file = \"https://nhadatmoi.net/\";\r\n        var randomNum = Math.round(Math.random() * 10000);\r\n        xhr.open('HEAD', file + \"?rand=\" + randomNum, false);\r\n        try {\r\n            xhr.send();\r\n            if (xhr.status >= 200 && xhr.status < 304) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n  }\r\n\r\n  const renderContentChat = () => {\r\n    let conversation = _.get(chatMessage, \"conversation\", [])\r\n    console.log(\"conversation\", conversation)\r\n    return (\r\n      <div className={classes.overflowHeightEmojiGiphy} style={{ height: openEmojiGiphy ? '230px' : '430px' }} id={'ContainerElementID'}>\r\n        <Element name=\"myScrollToElement\" id={\"test_ndm\"}>\r\n          <Typography align=\"center\" className={classes.textSizeNewDate}>\r\n            {moment().format('LLL')}\r\n          </Typography>\r\n          <Divider />\r\n          {conversation.length ?\r\n            conversation.map((item: any, index: number) => {\r\n              let checkNewDate = false\r\n              let setViewAvatar = true\r\n\r\n              let oldDate = index > 0 ? moment(Number(conversation[index - 1].send_at)).format('YYYY-MM-DD') : ''\r\n              let newDate = moment(Number(conversation[index].send_at)).format('YYYY-MM-DD')\r\n              if(index > 0 && (oldDate !== newDate)) {\r\n                checkNewDate = true\r\n              }\r\n\r\n              // setView avatar admin\r\n              // if(item.type === 'admin' && index > 0) {\r\n              //   if((index === arrChat.length) || (arrChat[index - 1].type != arrChat[index].type) || (oldDate !== newDate)){\r\n              //     setViewAvatar = true\r\n              //   }\r\n              // } else if(item.type === 'admin' && index === 0 ) {\r\n              //   setViewAvatar = true\r\n              // }\r\n              // let width = item.image.width\r\n              // let height = item.image.height\r\n              console.log(\"item >>> \", item)\r\n              return (\r\n                <div key={index} style={{ display: \"block\" }}>\r\n                  { checkNewDate && <Typography align=\"center\" className={classes.textSizeNewDate}>\r\n                    {moment(Number(item.send_at)).format(\"LLL\")} <Divider /></Typography>}\r\n                  { item.send_user_id !== 'admin'\r\n                    ? <ThemeProvider theme={themeTextfieldAdmin}>\r\n                      <div className={classes.viewAvatarChatContent}>\r\n                        { setViewAvatar && <Avatar className={classes.avatarAdminText} alt=\"nhadatmoi.net\" src={avatarImage} /> }\r\n                      </div>\r\n                      <div className={classes.textFieldChatContent}>\r\n                        {\r\n                          item.message.attachment.payload.url\r\n                          ? <div className={classes.viewContentImageGiphy} style={{ width: `250px`, maxWidth: \"300px\", height: `auto`,   float: \"left\" }} >\r\n                              <BootstrapTooltip  title={moment(Number(item.send_at)).fromNow()} placement=\"top\"> \r\n                                <img className={classes.imgGiphy} alt=\"giphy\" src={item.message.attachment.payload.url} />\r\n                              </BootstrapTooltip>\r\n                            </div>\r\n                          : <div className={classes.textAdminLeft}>\r\n                              <BootstrapTooltip  title={moment(Number(item.send_at)).fromNow()} placement=\"top\">\r\n                                <TextField\r\n                                  fullWidth={item.message.text.length > 15 ? true : false}\r\n                                  label=\"\"\r\n                                  color=\"primary\"\r\n                                  className={classes.textAdmin}\r\n                                  value={item.message.text.trim()}\r\n                                  margin=\"dense\"\r\n                                  id=\"outlined-basic\"\r\n                                  multiline={true}\r\n                                  InputProps={{\r\n                                    readOnly: true\r\n                                  }}\r\n                                  variant=\"outlined\"\r\n                                />\r\n                                </BootstrapTooltip >\r\n                            </div>\r\n                        }\r\n                      </div>\r\n                    </ThemeProvider>\r\n                    : <ThemeProvider theme={themeTextfieldUser}>\r\n                      {\r\n                        item.message.attachment.payload.url\r\n                        ? <div className={classes.viewContentImageGiphy} style={{ width: `250px`, height: `auto`, float: \"right\" }} >\r\n                            <BootstrapTooltip  title={moment(Number(item.send_at)).fromNow()} placement=\"top\"> \r\n                              <img className={classes.imgGiphy} alt=\"giphy\" src={item.message.attachment.payload.url} />\r\n                            </BootstrapTooltip >\r\n                          </div>\r\n                        \r\n                        : <div className={classes.textFieldUserChatContent} dir={`${item.message.text.length < 45 ? 'rtl' : \"\"}`}>\r\n                            <BootstrapTooltip  title={moment(Number(item.send_at)).fromNow()} placement=\"top\">\r\n                              <TextField\r\n                                fullWidth={item.message.text.length > 15 ? true : false}\r\n                                label=\"\"\r\n                                color=\"primary\"\r\n                                className={classes.textUser}\r\n                                value={item.message.text.trim()}\r\n                                margin=\"dense\"\r\n                                id=\"outlined-basic\"\r\n                                multiline={true}\r\n                                InputProps={{\r\n                                  readOnly: true\r\n                                }}\r\n                                variant=\"outlined\"\r\n                              />\r\n                            </BootstrapTooltip>\r\n                          </div>\r\n                      }\r\n                    </ThemeProvider>\r\n                  }\r\n                  <div style={{ clear: \"both\" }} />\r\n                </div>\r\n              )\r\n            })\r\n          : \"\"}\r\n          <div>\r\n            {!internet && <p className={classes.errInternet}> <u>Không thể gửi tin nhắn này. Kiểm tra kết nối internet và thử lại</u></p> }\r\n          </div>\r\n          <div>\r\n            {texting && <p className={classes.texting}>Đang nhập ...</p>}\r\n          </div>\r\n        </Element>\r\n      </div>\r\n    )\r\n  };\r\n\r\n  const onClickOpenEmojiGiphy = () => {\r\n    setOpenEmojiGiphy(!openEmojiGiphy) \r\n    setViewEmoji(true)\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    checkCookie()\r\n    // const interval = setInterval(() => {\r\n    //   let internet = doesConnectionExist()\r\n    //   setInternet(!internet)\r\n    // }, 5000);\r\n    // return () => clearInterval(interval);\r\n  }, [])\r\n \r\n  const apiBaseURL = \"https://graph.nhadatmoi.net\";\r\n  const apiUpload = `${apiBaseURL}/private_upload_image_app`;\r\n  const api = (method: Method, url: string, data?: any) => client\r\n    .request({\r\n      data: JSON.stringify(data), \r\n      headers: { \r\n        \"Accept\": \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      }, \r\n      method,\r\n      url,\r\n      withCredentials: true,\r\n    }).then((response: any) => response.data);\r\n\r\n  const upLoadImage = (files: any) => {\r\n    const reader = new FileReader;\r\n    let file = files.target.files[0]\r\n    reader.readAsDataURL(file)\r\n    reader.onload = () => {\r\n      api(\"POST\", `${apiUpload}`, { \r\n        base64_image: reader.result, \r\n        fileName: (new Date()).getTime() + \"\" + file.name,\r\n        typeUpload: \"ad_sell_lease\",\r\n      })\r\n      .then(function (res) {\r\n        _senMessage(\"\", res.location)\r\n      })\r\n      .catch(function (err) {\r\n        alert('HTTP Error: ' + err.message);\r\n      });\r\n    };\r\n  };\r\n\r\n  const setOnKeyDown = (event: any) => {\r\n    if(event.keyCode == 13){\r\n      _senMessage(valueInput, \"\")\r\n      setValueInput(\"\");\r\n      setScrollTo()\r\n    }\r\n  };\r\n\r\n  const setScrollTo = () => {\r\n    let heightChatDiv = 0;\r\n    let elm = document.getElementById(\"test_ndm\");\r\n    if (elm) {\r\n      heightChatDiv =  elm.offsetHeight;\r\n    }\r\n    scroller.scrollTo('myScrollToElement', {\r\n      duration: 500,\r\n      delay: 100,\r\n      smooth: true,\r\n      containerId: 'ContainerElementID',\r\n      offset: heightChatDiv,\r\n    })\r\n  }\r\n  \r\n  const setChangeInput = (value: any) => {\r\n    setValueInput(value)\r\n  };\r\n\r\n  const renderInput = () => {\r\n    return (\r\n      <Paper component=\"form\" className={classes.inputBase}>\r\n        <ThemeProvider theme={themeInput}>\r\n          <Input \r\n            fullWidth\r\n            disabled={!internet}\r\n            margin=\"dense\"\r\n            id=\"outlined-basic\" \r\n            autoFocus={true}\r\n            value={valueInput}\r\n            multiline={true}\r\n            onChange={(e) => setChangeInput(e.target.value)}\r\n            onKeyDown={(e) => setOnKeyDown(e)}\r\n            placeholder=\"Nhập tin nhắn ...\"\r\n            autoComplete=\"false\"\r\n          />\r\n          { openEmojiGiphy \r\n            ? <BootstrapTooltip  title=\"Chèn biểu tượng\" placement=\"top\"> \r\n                <ExpandMoreIcon className={classes.sizeIcon} onClick={onClickOpenEmojiGiphy} color=\"primary\" />\r\n              </BootstrapTooltip > \r\n            : <BootstrapTooltip  title=\"Chèn biểu tượng\" placement=\"top\"> \r\n                <TagFacesIcon className={classes.sizeIcon} onClick={onClickOpenEmojiGiphy} color=\"primary\" />\r\n              </BootstrapTooltip >\r\n          }\r\n          { valueInput\r\n            ? <BootstrapTooltip  title=\"Gửi tin nhắn\" placement=\"top\">\r\n                <SendIcon onClick={() => _senMessage(valueInput, \"\")} className={classes.sizeIcon} color=\"primary\" />\r\n              </BootstrapTooltip >\r\n            : <BootstrapTooltip  title=\"Thêm tập tin\" placement=\"top\">\r\n                <div className={classes.inputWrapper}> \r\n                  <AddCircleOutlineIcon className={classes.sizeIcon} color=\"primary\"/> \r\n                  <input type=\"file\" className={classes.fileInput}  onChange={upLoadImage} /> \r\n                </div>\r\n              </BootstrapTooltip >\r\n          }\r\n        </ThemeProvider>\r\n      </Paper>\r\n    )\r\n  };\r\n\r\n  const viewChat = () => {\r\n    let _open = open && checkLogin ? true : false\r\n    return (\r\n      <Popper open={_open} anchorEl={anchorEl} placement={placement} transition >\r\n        {({ TransitionProps }) => (\r\n          <Fade {...TransitionProps} timeout={300}>\r\n            <Paper>\r\n              <div className={classes.positionSizeViewChat} > \r\n                {renderHeader()}\r\n                {renderContentChat()}\r\n                {openEmojiGiphy && renderEmojiGiphy()}\r\n                {renderInput()}\r\n              </div>\r\n            </Paper>\r\n          </Fade>\r\n        )}\r\n      </Popper>\r\n    )\r\n  };\r\n\r\n  const handleClick = (newPlacement: PopperPlacementType) => {\r\n    setOpen(true)\r\n    setPlacement(newPlacement);\r\n  };\r\n\r\n  const renderAvatar = () => {\r\n    return (\r\n      <div className={classes.positionAvatar}>\r\n        <StyledBadge\r\n          overlap=\"circle\"\r\n          anchorOrigin={{ vertical: 'bottom', horizontal: 'right', }}\r\n          variant= { online ? \"dot\" : \"standard\" }\r\n        >\r\n          <Avatar src={avatarImage} onClick={() => handleClick(\"top-start\")} className={classes.large} alt=\"nhadatmoi.net\"/>\r\n        </StyledBadge>\r\n      </div>\r\n    )\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {viewChat()}\r\n      <Grid container justify=\"center\">\r\n        <Grid item>\r\n          { !open && renderAvatar()}\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};"]},"metadata":{},"sourceType":"module"}
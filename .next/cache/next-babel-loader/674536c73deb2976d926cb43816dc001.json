{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\manh nhan\\\\Desktop\\\\new_ndm\\\\components\\\\Channel\\\\Header.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Avatar, Button, Grid } from \"@material-ui/core\";\nimport { headerStyles } from './Constant';\nimport { FOLLOW_CHANNEL, UNFOLLOW_CHANNEL } from \"../../graphql/channel/mutation\";\nimport { apolloClient } from \"../../utils\";\nimport _ from \"lodash\";\n\nvar Header = function Header(props) {\n  var classes = headerStyles();\n  var avatar = \"https://sf.co.ua/14/07/wallpaper-117233.jpg\"; // \"https://news.mogi.vn/wp-content/uploads/2018/08/anh-nha-dep-13.jpg\"\n\n  var channelId = _.get(props, 'channel.id');\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      reload = _React$useState2[0],\n      setReload = _React$useState2[1];\n\n  var follow = function follow() {\n    var id, follow;\n    return _regeneratorRuntime.async(function follow$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            id = channelId;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(apolloClient.mutate({\n              mutation: FOLLOW_CHANNEL,\n              variables: {\n                \"input\": {\n                  \"id\": id\n                }\n              }\n            }).then(function (response) {\n              setReload(!reload);\n            }));\n\n          case 3:\n            follow = _context.sent;\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, _Promise);\n  };\n\n  var unfollow = function unfollow() {\n    var id, follow;\n    return _regeneratorRuntime.async(function unfollow$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            id = channelId;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(apolloClient.mutate({\n              mutation: UNFOLLOW_CHANNEL,\n              variables: {\n                \"input\": {\n                  \"id\": id\n                }\n              }\n            }).then(function (response) {\n              setReload(!reload);\n            }));\n\n          case 3:\n            follow = _context2.sent;\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, _Promise);\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.cover,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: classes.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, __jsx(Avatar, {\n    alt: \"nhadatmoi.net\",\n    className: classes.avatar,\n    src: avatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), __jsx(Grid, {\n    container: true,\n    spacing: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    xs: 4,\n    sm: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.followStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, __jsx(Button, {\n    color: \"primary\",\n    onClick: function onClick() {\n      return follow();\n    },\n    fullWidth: true,\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Theo d\\xF5i\")), __jsx(\"div\", {\n    className: classes.followStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, __jsx(Button, {\n    color: \"primary\",\n    onClick: function onClick() {\n      return unfollow();\n    },\n    fullWidth: true,\n    variant: \"contained\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"B\\u1ECF theo d\\xF5i\"))))));\n};\n\nexport default Header;","map":{"version":3,"sources":["C:/Users/manh nhan/Desktop/new_ndm/components/Channel/Header.tsx"],"names":["React","Avatar","Button","Grid","headerStyles","FOLLOW_CHANNEL","UNFOLLOW_CHANNEL","apolloClient","_","Header","props","classes","avatar","channelId","get","useState","reload","setReload","follow","id","mutate","mutation","variables","then","response","unfollow","cover","container","followStyle"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Avatar, Typography, Button, Grid } from \"@material-ui/core\";\nimport StyledCheckbox from './StyledCheckbox'\nimport { headerStyles } from './Constant'\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport { FOLLOW_CHANNEL, UNFOLLOW_CHANNEL } from \"../../graphql/channel/mutation\"\nimport { apolloClient } from \"../../utils\";\nimport _ from \"lodash\"\n\ninterface HearderProps {\n  userLogin: string\n  channel: ChannelProp\n}\n\ninterface ChannelProp {\n  id: string\n  name: string\n  slug: string\n  avatar: string\n  cover: string\n  description: string\n  nation: string\n  language: string\n  telephone: string\n  address: string\n  facebook: string\n  youtube: string\n  website: string\n  official_status: number\n  follow_value: number\n  followers: {\n    user_id: string\n  }[]\n  created_at: string\n}\n\n\nconst Header: React.FunctionComponent<HearderProps> = (props: HearderProps) => {\n  const classes = headerStyles();\n  const avatar = \"https://sf.co.ua/14/07/wallpaper-117233.jpg\" // \"https://news.mogi.vn/wp-content/uploads/2018/08/anh-nha-dep-13.jpg\"\n  const channelId = _.get(props, 'channel.id')\n  const [reload, setReload] = React.useState(false)\n\n  const follow = async ()=> { \n    let id = channelId\n    let follow = await apolloClient.mutate({ mutation: FOLLOW_CHANNEL, variables: {\n      \"input\": {\n        \"id\": id\n      }\n    }})\n    .then((response: any) => {\n      setReload(!reload)\n    })\n  };\n \n  const unfollow = async ()=> { \n    let id = channelId\n    let follow = await apolloClient.mutate({ mutation: UNFOLLOW_CHANNEL, variables: {\n      \"input\": {\n        \"id\": id\n      }\n    }})\n    .then((response: any) => {\n      setReload(!reload)\n    })\n  };\n\n  return (\n    <div>\n      <div className={classes.cover}></div>\n      <div className={classes.container}>\n        <Avatar\n          alt=\"nhadatmoi.net\"\n          className={classes.avatar}\n          src={avatar}\n        />   \n        <Grid container spacing={0}>\n          {/* <Grid item xs={8} sm={6}>\n            <div className={classes.titleFollow}>\n              <Typography component=\"h2\" gutterBottom className={classes.title}> \n                Nhà Đất Mới <CheckCircleIcon style={{ color: \"#045EA8\", fontSize: \"15px\" }} /> \n              </Typography>\n              <Typography component=\"h3\" variant=\"body2\" className={classes.follow}>\n                {props.channel.follow_value} lượt theo dõi\n              </Typography>\n            </div>\n          </Grid> */}\n          <Grid item xs={4} sm={6}>\n            <div className={classes.followStyle}>\n              <Button color=\"primary\" onClick={() => follow()} fullWidth variant=\"outlined\">Theo dõi</Button>\n            </div>\n            <div className={classes.followStyle}>\n              <Button color=\"primary\" onClick={() => unfollow()} fullWidth variant=\"contained\">Bỏ theo dõi</Button>\n            </div>\n          </Grid>\n        </Grid>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}
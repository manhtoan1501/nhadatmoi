{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manh nhan\\\\Desktop\\\\data\\\\chat\\\\components\\\\GridList\\\\GridProject.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport GridItemASL from \"./GridItemASL\";\nimport Grid from \"@material-ui/core/Grid\";\nimport StringProcess from \"./../../modules/stringProcess\";\nimport urlProcess from \"../../modules/urlProcess\";\n\nvar GridList = function GridList(props) {\n  return __jsx(Grid, {\n    container: true,\n    spacing: 0,\n    item: true,\n    xs: 12,\n    direction: \"row\",\n    alignItems: \"baseline\",\n    className: props.className,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, props.gridData.map(function (dataItem, index) {\n    var dataGrid = {\n      image: urlProcess.processImageUrl(dataItem.node.cover_image, 'project'),\n      title: dataItem.node.name,\n      address: dataItem.node.address.text,\n      area: StringProcess.addCommas(dataItem.node.land_area),\n      price: StringProcess.addCommas(dataItem.node.price) + ' triệu/m2',\n      slug: dataItem.node.slug,\n      path: '/du-an/',\n      updated_at: dataItem.node.updated_at,\n      created_at: dataItem.node.created_at,\n      like_status: false,\n      id: dataItem.node.id,\n      view_count: dataItem.node.view_count\n    };\n    return __jsx(GridItemASL, {\n      grid: props.grid,\n      dataGird: dataGrid,\n      key: \"gird_project_\" + index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    });\n  }));\n};\n\nexport default GridList;","map":{"version":3,"sources":["C:/Users/manh nhan/Desktop/data/chat/components/GridList/GridProject.tsx"],"names":["React","GridItemASL","Grid","StringProcess","urlProcess","GridList","props","className","gridData","map","dataItem","index","dataGrid","image","processImageUrl","node","cover_image","title","name","address","text","area","addCommas","land_area","price","slug","path","updated_at","created_at","like_status","id","view_count","grid"],"mappings":";;AAAA,OAAOA,KAAP,MAAuC,OAAvC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;AAmCA,IAAMC,QAA0C,GAAG,SAA7CA,QAA6C,CAACC,KAAD,EAA0B;AAC3E,SACE,MAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAA4B,IAAA,IAAI,MAAhC;AAAiC,IAAA,EAAE,EAAE,EAArC;AAAyC,IAAA,SAAS,EAAC,KAAnD;AACM,IAAA,UAAU,EAAC,UADjB;AAC4B,IAAA,SAAS,EAAEA,KAAK,CAACC,SAD7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGD,KAAK,CAACE,QAAN,CAAeC,GAAf,CAAmB,UAACC,QAAD,EAAWC,KAAX,EAA4B;AAC9C,QAAIC,QAAQ,GAAG;AACbC,MAAAA,KAAK,EAAET,UAAU,CAACU,eAAX,CAA2BJ,QAAQ,CAACK,IAAT,CAAcC,WAAzC,EAAsD,SAAtD,CADM;AAEbC,MAAAA,KAAK,EAAEP,QAAQ,CAACK,IAAT,CAAcG,IAFR;AAGbC,MAAAA,OAAO,EAAET,QAAQ,CAACK,IAAT,CAAcI,OAAd,CAAsBC,IAHlB;AAIbC,MAAAA,IAAI,EAAElB,aAAa,CAACmB,SAAd,CAAwBZ,QAAQ,CAACK,IAAT,CAAcQ,SAAtC,CAJO;AAKbC,MAAAA,KAAK,EAAErB,aAAa,CAACmB,SAAd,CAAwBZ,QAAQ,CAACK,IAAT,CAAcS,KAAtC,IAA+C,WALzC;AAMbC,MAAAA,IAAI,EAAEf,QAAQ,CAACK,IAAT,CAAcU,IANP;AAObC,MAAAA,IAAI,EAAE,SAPO;AAQbC,MAAAA,UAAU,EAAEjB,QAAQ,CAACK,IAAT,CAAcY,UARb;AASbC,MAAAA,UAAU,EAAElB,QAAQ,CAACK,IAAT,CAAca,UATb;AAUbC,MAAAA,WAAW,EAAE,KAVA;AAWbC,MAAAA,EAAE,EAAEpB,QAAQ,CAACK,IAAT,CAAce,EAXL;AAYbC,MAAAA,UAAU,EAAErB,QAAQ,CAACK,IAAT,CAAcgB;AAZb,KAAf;AAcA,WACE,MAAC,WAAD;AAAa,MAAA,IAAI,EAAEzB,KAAK,CAAC0B,IAAzB;AAA+B,MAAA,QAAQ,EAAEpB,QAAzC;AAAmD,MAAA,GAAG,EAAE,kBAAkBD,KAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD,GAlBA,CAFH,CADF;AAwBD,CAzBD;;AA0BA,eAAeN,QAAf","sourcesContent":["import React, {FunctionComponent} from 'react';\r\nimport GridItemASL from \"./GridItemASL\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport StringProcess from \"./../../modules/stringProcess\";\r\nimport urlProcess from \"../../modules/urlProcess\";\r\n\r\ninterface GridProps {\r\n  node: {\r\n    id: string\r\n    price: string,\r\n    name: string,\r\n    land_area: string,\r\n    created_at: string,\r\n    updated_at: string,\r\n    slug: string,\r\n    view_count: number,\r\n    address: {\r\n      text: string,\r\n      ward: string,\r\n      district: string,\r\n      city: string\r\n    },\r\n    cover_image: string,\r\n    intro_content: string\r\n  }\r\n}\r\n\r\ninterface GridListProps {\r\n  gridData: GridProps[];\r\n  grid: {\r\n    lg: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12;\r\n    md: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12;\r\n    sm: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12;\r\n    xs: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12;\r\n    xl: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12;\r\n  };\r\n  className: string;\r\n}\r\n\r\nconst GridList: FunctionComponent<GridListProps> = (props: GridListProps) => {\r\n  return (\r\n    <Grid container spacing={0} item xs={12} direction=\"row\"\r\n          alignItems=\"baseline\" className={props.className}>\r\n      {props.gridData.map((dataItem, index:number) => {\r\n        let dataGrid = {\r\n          image: urlProcess.processImageUrl(dataItem.node.cover_image, 'project'),\r\n          title: dataItem.node.name,\r\n          address: dataItem.node.address.text,\r\n          area: StringProcess.addCommas(dataItem.node.land_area),\r\n          price: StringProcess.addCommas(dataItem.node.price) + ' triệu/m2',\r\n          slug: dataItem.node.slug,\r\n          path: '/du-an/',\r\n          updated_at: dataItem.node.updated_at,\r\n          created_at: dataItem.node.created_at,\r\n          like_status: false,\r\n          id: dataItem.node.id,\r\n          view_count: dataItem.node.view_count\r\n        };\r\n        return (\r\n          <GridItemASL grid={props.grid} dataGird={dataGrid} key={\"gird_project_\" + index}/>\r\n        )\r\n      })}\r\n    </Grid>\r\n  );\r\n};\r\nexport default GridList;\r\n"]},"metadata":{},"sourceType":"module"}
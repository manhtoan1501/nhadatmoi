{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manh nhan\\\\Desktop\\\\Nhadatmoi\\\\components\\\\Chat\\\\Chat.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport Popper from '@material-ui/core/Popper';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport SpeedDial from '@material-ui/lab/SpeedDial';\nimport { Grid, Fade, Typography, Paper, CardHeader, CardContent, CardActionArea, Avatar, Badge, Divider, Tooltip } from '@material-ui/core';\nimport InputBase from '@material-ui/core/InputBase';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport TagFacesIcon from '@material-ui/icons/TagFaces';\nimport CloseIcon from '@material-ui/icons/Close';\nimport moment from \"moment\";\nimport 'moment/locale/es'; // without this line it didn't work\n\nmoment.locale('vi');\nimport { makeStyles, withStyles, createStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    width: 500,\n    backgroundColor: \"red\"\n  },\n  inputBase: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    width: \"100%\",\n    position: \"absolute\",\n    boxShadow: \"0px -1px 3px black\",\n    // borderTop: \"3px solid gray\",\n    borderRadius: \"0px 0px\",\n    bottom: \"0px\"\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    height: 50,\n    flex: 1\n  },\n  divider: {\n    height: 28,\n    margin: 4\n  },\n  typography: {\n    padding: theme.spacing(2)\n  },\n  positionSizeViewChat: {\n    height: \"600px\",\n    width: \"400px\",\n    position: \"fixed\",\n    right: '30px',\n    bottom: \"30px\",\n    boxShadow: \"0px -1px 3px #b3c5cc\" // boxShadow:\"3px 3px 3px #b3c5cc\"\n\n  },\n  textField: {\n    position: \"absolute\",\n    bottom: \"0px\"\n  },\n  exampleWrapper: {\n    position: 'fixed',\n    right: \"60px\",\n    bottom: \"2px\"\n  },\n  large: {\n    width: theme.spacing(7),\n    height: theme.spacing(7)\n  },\n  positionAvatar: {\n    position: 'fixed',\n    right: \"18px\",\n    bottom: \"30px\"\n  },\n  radioGroup: {\n    margin: theme.spacing(1, 0)\n  },\n  avatar: {\n    backgroundColor: \"blue\"\n  },\n  media: {\n    height: 100,\n    backgroundColor: \"blue\"\n  },\n  hearder: {\n    backgroundColor: \"#1a75ff\",\n    color: \"white\"\n  },\n  speedDial: {\n    position: 'absolute',\n    '&.MuiSpeedDial-directionUp, &.MuiSpeedDial-directionLeft': {\n      bottom: theme.spacing(2),\n      right: theme.spacing(2)\n    },\n    '&.MuiSpeedDial-directionDown, &.MuiSpeedDial-directionRight': {\n      top: theme.spacing(2),\n      left: theme.spacing(2)\n    }\n  },\n  xxx: {\n    display: \"fixed\",\n    right: \"50px\",\n    bottom: \"20px\",\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  }\n}));\nconst StyledBadge = withStyles(theme => createStyles({\n  badge: {\n    backgroundColor: '#44b700',\n    color: '#44b700',\n    boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\n    '&::after': {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      borderRadius: '50%',\n      animation: '$ripple 1.2s infinite ease-in-out',\n      border: '1px solid currentColor',\n      content: '\"\"'\n    }\n  },\n  '@keyframes ripple': {\n    '0%': {\n      transform: 'scale(.8)',\n      opacity: 1\n    },\n    '100%': {\n      transform: 'scale(2.4)',\n      opacity: 0\n    }\n  }\n}))(Badge);\nconst SmallAvatar = withStyles(theme => createStyles({\n  root: {\n    width: 22,\n    height: 22,\n    border: `2px solid ${theme.palette.background.paper}`\n  }\n}))(Avatar);\nexport default function PositionedPopper() {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [open, setOpen] = React.useState(false);\n  const [placement, setPlacement] = React.useState();\n  const classes = useStyles();\n\n  const handleClick = newPlacement => event => {\n    setAnchorEl(event.currentTarget);\n    setOpen(true);\n    setPlacement('top-end');\n  };\n\n  const onCloseChat = () => {\n    setOpen(false);\n  };\n\n  const viewChat = () => {\n    return __jsx(Popper, {\n      open: open,\n      anchorEl: anchorEl,\n      placement: placement,\n      transition: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 7\n      }\n    }, ({\n      TransitionProps\n    }) => __jsx(Fade, _extends({}, TransitionProps, {\n      timeout: 300,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }\n    }), __jsx(Paper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: classes.positionSizeViewChat,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 15\n      }\n    }, __jsx(CardActionArea, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }\n    }, __jsx(CardHeader, {\n      className: classes.hearder // <Avatar alt=\"nhadatmoi.net\" className={classes.avatar} src={avatarUser} />\n      ,\n      avatar: __jsx(StyledBadge, {\n        overlap: \"circle\",\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right'\n        },\n        variant: \"dot\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 23\n        }\n      }, __jsx(Avatar, {\n        className: classes.large,\n        alt: \"nhadatmoi.net\",\n        src: \"https://image.crisp.chat/avatar/operator/da8d4459-5ea3-4119-bca1-9170f49ee69c/240/?1585999578742&quot\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 23\n        }\n      })),\n      title: \"Nh\\xE0 \\u0111\\u1EA5t m\\u1EDBi\",\n      action: __jsx(IconButton, {\n        color: \"inherit\",\n        \"aria-label\": \"settings\",\n        onClick: () => onCloseChat(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 23\n        }\n      }, __jsx(CloseIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 25\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 19\n      }\n    })), __jsx(CardContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }\n    }, __jsx(Typography, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 19\n      }\n    }, moment().format('LLL')), __jsx(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 19\n      }\n    })), __jsx(Paper, {\n      component: \"form\",\n      className: classes.inputBase,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }\n    }, __jsx(InputBase, {\n      className: classes.input,\n      placeholder: \"Nh\\u1EADp tin nh\\u1EAFn ...\",\n      inputProps: {\n        'aria-label': 'search google maps'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 19\n      }\n    }), __jsx(Tooltip, {\n      title: \"Ch\\xE8n bi\\u1EC3u t\\u01B0\\u1EE3ng\",\n      placement: \"top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 19\n      }\n    }, __jsx(TagFacesIcon, {\n      style: {\n        fontSize: \"30px\"\n      },\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 21\n      }\n    })), __jsx(Tooltip, {\n      title: \"Th\\xEAm t\\u1EADp tin\",\n      placement: \"top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 19\n      }\n    }, __jsx(AddCircleOutlineIcon, {\n      style: {\n        fontSize: \"30px\"\n      },\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 21\n      }\n    })))))));\n  };\n\n  const onClickDiv = () => {\n    setOpen(true);\n    setPlacement('top-end');\n  };\n\n  const renderAvatar = () => {\n    return __jsx(\"div\", {\n      className: classes.positionAvatar,\n      onClick: () => onClickDiv(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 7\n      }\n    }, __jsx(StyledBadge, {\n      overlap: \"circle\",\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'right'\n      },\n      variant: \"dot\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }\n    }, __jsx(Avatar, {\n      className: classes.large,\n      alt: \"nhadatmoi.net\",\n      src: \"https://image.crisp.chat/avatar/operator/da8d4459-5ea3-4119-bca1-9170f49ee69c/240/?1585999578742&quot\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 11\n      }\n    })));\n  };\n\n  const renderIcon = () => {\n    return __jsx(\"div\", {\n      className: classes.exampleWrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 7\n      }\n    }, __jsx(SpeedDial, {\n      ariaLabel: \"SpeedDial example\",\n      className: classes.speedDial,\n      icon: __jsx(SpeedDialIcon, {\n        onClick: handleClick('top-end'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 17\n        }\n      }),\n      open: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 5\n    }\n  }, viewChat(), __jsx(Grid, {\n    container: true,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 9\n    }\n  }, renderAvatar())));\n}","map":{"version":3,"sources":["C:/Users/manh nhan/Desktop/Nhadatmoi/components/Chat/Chat.tsx"],"names":["React","Popper","SpeedDialIcon","SpeedDial","Grid","Fade","Typography","Paper","CardHeader","CardContent","CardActionArea","Avatar","Badge","Divider","Tooltip","InputBase","IconButton","AddCircleOutlineIcon","TagFacesIcon","CloseIcon","moment","locale","makeStyles","withStyles","createStyles","useStyles","theme","root","width","backgroundColor","inputBase","padding","display","alignItems","position","boxShadow","borderRadius","bottom","input","marginLeft","spacing","height","flex","divider","margin","typography","positionSizeViewChat","right","textField","exampleWrapper","large","positionAvatar","radioGroup","avatar","media","hearder","color","speedDial","top","left","xxx","StyledBadge","badge","palette","background","paper","animation","border","content","transform","opacity","SmallAvatar","PositionedPopper","anchorEl","setAnchorEl","useState","open","setOpen","placement","setPlacement","classes","handleClick","newPlacement","event","currentTarget","onCloseChat","viewChat","TransitionProps","vertical","horizontal","format","fontSize","onClickDiv","renderAvatar","renderIcon"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Popper, { PopperPlacementType } from '@material-ui/core/Popper';\r\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\r\nimport SpeedDial, { SpeedDialProps } from '@material-ui/lab/SpeedDial';\r\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction';\r\nimport {\r\n  Grid,\r\n  Button,\r\n  Fade,\r\n  Typography,\r\n  Paper,\r\n  Card, \r\n  CardHeader,\r\n  CardContent,\r\n  CardActionArea, \r\n  CardMedia,\r\n  Avatar,\r\n  TextField,\r\n  Badge,\r\n  Divider,\r\n  Tooltip \r\n} from '@material-ui/core';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport TagFacesIcon from '@material-ui/icons/TagFaces';\r\nimport DirectionsIcon from '@material-ui/icons/Directions';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport moment from \"moment\"\r\nimport 'moment/locale/es'  // without this line it didn't work\r\nmoment.locale('vi')\r\n\r\nimport { Theme, makeStyles, withStyles, createStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: 500,\r\n      backgroundColor: \"red\"\r\n    },\r\n    inputBase: {\r\n      padding: '2px 4px',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      width: \"100%\",\r\n      position: \"absolute\",\r\n      boxShadow: \"0px -1px 3px black\",\r\n      // borderTop: \"3px solid gray\",\r\n      borderRadius: \"0px 0px\",\r\n      bottom: \"0px\"\r\n    },\r\n    input: {\r\n      marginLeft: theme.spacing(1),\r\n      height: 50 ,\r\n      flex: 1,\r\n    },\r\n    divider: {\r\n      height: 28,\r\n      margin: 4,\r\n    },\r\n    typography: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    positionSizeViewChat: {\r\n      height:\"600px\", \r\n      width: \"400px\",\r\n      position: \"fixed\",\r\n      right: '30px',\r\n      bottom: \"30px\",\r\n      boxShadow: \"0px -1px 3px #b3c5cc\",\r\n      // boxShadow:\"3px 3px 3px #b3c5cc\"\r\n    },\r\n    textField: {\r\n      position: \"absolute\",\r\n      bottom: \"0px\"\r\n    },\r\n    exampleWrapper: {\r\n      position: 'fixed',\r\n      right: \"60px\", \r\n      bottom: \"2px\",\r\n    },\r\n    large: {\r\n      width: theme.spacing(7),\r\n      height: theme.spacing(7),\r\n    },\r\n    positionAvatar: {\r\n      position: 'fixed',\r\n      right: \"18px\", \r\n      bottom: \"30px\",\r\n    },\r\n    radioGroup: {\r\n      margin: theme.spacing(1, 0),\r\n    },\r\n    avatar: {\r\n      backgroundColor: \"blue\",\r\n    },\r\n    media: {\r\n      height: 100,\r\n      backgroundColor: \"blue\"\r\n    },\r\n    hearder: {\r\n      backgroundColor: \"#1a75ff\",\r\n      color: \"white\"\r\n    },\r\n    speedDial: {\r\n      position: 'absolute',\r\n      '&.MuiSpeedDial-directionUp, &.MuiSpeedDial-directionLeft': {\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n      },\r\n      '&.MuiSpeedDial-directionDown, &.MuiSpeedDial-directionRight': {\r\n        top: theme.spacing(2),\r\n        left: theme.spacing(2),\r\n      },\r\n    },\r\n    xxx: {\r\n      display: \"fixed\",\r\n      right: \"50px\",\r\n      bottom: \"20px\",\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n    }\r\n  }),\r\n);\r\n\r\nconst StyledBadge = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    badge: {\r\n      backgroundColor: '#44b700',\r\n      color: '#44b700',\r\n      boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n      '&::after': {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        width: '100%',\r\n        height: '100%',\r\n        borderRadius: '50%',\r\n        animation: '$ripple 1.2s infinite ease-in-out',\r\n        border: '1px solid currentColor',\r\n        content: '\"\"',\r\n      },\r\n    },\r\n    '@keyframes ripple': {\r\n      '0%': {\r\n        transform: 'scale(.8)',\r\n        opacity: 1,\r\n      },\r\n      '100%': {\r\n        transform: 'scale(2.4)',\r\n        opacity: 0,\r\n      },\r\n    },\r\n  }),\r\n)(Badge);\r\n\r\nconst SmallAvatar = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: 22,\r\n      height: 22,\r\n      border: `2px solid ${theme.palette.background.paper}`,\r\n    },\r\n  }),\r\n)(Avatar);\r\n\r\n\r\nexport default function PositionedPopper() {\r\n  const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(null);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [placement, setPlacement] = React.useState<PopperPlacementType>();\r\n  const classes = useStyles();\r\n\r\n  const handleClick = (newPlacement: PopperPlacementType) => (\r\n    event: React.MouseEvent<HTMLButtonElement>,\r\n  ) => {\r\n    setAnchorEl(event.currentTarget);\r\n    setOpen(true)\r\n    setPlacement('top-end');\r\n  };\r\n\r\n  const onCloseChat = () => {\r\n    setOpen(false)\r\n  }\r\n\r\n  const viewChat = () => {\r\n    return (\r\n      <Popper \r\n        open={open} \r\n        anchorEl={anchorEl}\r\n        placement={placement} \r\n        transition\r\n      >\r\n        {({ TransitionProps }) => (\r\n          <Fade {...TransitionProps} timeout={300}>\r\n            <Paper>\r\n              <div className={classes.positionSizeViewChat} >\r\n                <CardActionArea> \r\n                  <CardHeader\r\n                    className={classes.hearder}\r\n                    // <Avatar alt=\"nhadatmoi.net\" className={classes.avatar} src={avatarUser} />\r\n                    avatar={\r\n                      <StyledBadge\r\n                        overlap=\"circle\"\r\n                        anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n                        variant=\"dot\"\r\n                      >\r\n                      <Avatar \r\n                        className={classes.large} \r\n                        alt=\"nhadatmoi.net\" \r\n                        src=\"https://image.crisp.chat/avatar/operator/da8d4459-5ea3-4119-bca1-9170f49ee69c/240/?1585999578742&quot\"\r\n                      />\r\n                    </StyledBadge>\r\n                    }\r\n                    title=\"Nhà đất mới\"\r\n                    action={\r\n                      <IconButton color='inherit' aria-label=\"settings\" onClick={() => onCloseChat()} >\r\n                        <CloseIcon/>\r\n                      </IconButton>\r\n                    }\r\n                  />\r\n                </CardActionArea>\r\n                <CardContent>\r\n                  <Typography align=\"center\">\r\n                    {moment().format('LLL')}\r\n                  </Typography>\r\n                  <Divider />\r\n                </CardContent>\r\n                <Paper component=\"form\" className={classes.inputBase}>\r\n                  <InputBase\r\n                    className={classes.input}\r\n                    placeholder=\"Nhập tin nhắn ...\"\r\n                    inputProps={{ 'aria-label': 'search google maps' }}\r\n                  />\r\n                  <Tooltip title=\"Chèn biểu tượng\" placement=\"top\">\r\n                    <TagFacesIcon \r\n                      style={{ fontSize: \"30px\" }} \r\n                      color=\"primary\"\r\n                    />\r\n                  </Tooltip>\r\n                  <Tooltip title=\"Thêm tập tin\" placement=\"top\">\r\n                    <AddCircleOutlineIcon style={{ fontSize: \"30px\" }} color=\"primary\"/>\r\n                  </Tooltip>\r\n                </Paper>\r\n              </div>\r\n            </Paper>\r\n          </Fade>\r\n        )}\r\n      </Popper>\r\n    )\r\n  }\r\n\r\n  const onClickDiv = () => {\r\n    setOpen(true)\r\n    setPlacement('top-end');\r\n  }\r\n\r\n  const renderAvatar = () => {\r\n    return (\r\n      <div className={classes.positionAvatar} onClick={() => onClickDiv()}>\r\n        <StyledBadge\r\n          overlap=\"circle\"\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'right',\r\n          }}\r\n          variant=\"dot\"\r\n        >\r\n          <Avatar \r\n            className={classes.large} \r\n            alt=\"nhadatmoi.net\" \r\n            src=\"https://image.crisp.chat/avatar/operator/da8d4459-5ea3-4119-bca1-9170f49ee69c/240/?1585999578742&quot\"\r\n          />\r\n        </StyledBadge>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const renderIcon = () => {\r\n    return (\r\n      <div className={classes.exampleWrapper}>\r\n        <SpeedDial\r\n          ariaLabel=\"SpeedDial example\"\r\n          className={classes.speedDial}\r\n          icon={<SpeedDialIcon onClick={handleClick('top-end')} />}\r\n          open={false}\r\n        /> \r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {viewChat()}\r\n      <Grid container justify=\"center\">\r\n        <Grid item>\r\n          {/* {renderIcon()} */}\r\n          {renderAvatar()}\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}
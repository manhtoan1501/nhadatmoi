{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"C:\\\\Users\\\\manh nhan\\\\Desktop\\\\new_ndm\\\\pages\\\\channel\\\\[slug].tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Layout from '../../components/Layout/Layout';\nimport { apolloClient } from \"../../utils\";\nimport { GET_CHANNEL_BY_SLUG } from \"../../graphql/channel/queries\";\nimport \"../../assets/scss/style.scss\";\nimport { mainURL } from \"../../constants\";\nimport Channel from \"../../components/Channel/Index\";\nimport _ from \"lodash\";\n\n// @ts-ignore\nconst UserPage = props => {\n  let metaTitle = props.channel.data.channel.name;\n  let imgBanner = \"https://static.nhadatmoi.net/project/1585911111698_chung-cu-b2-truong-sa-phuong-17-quan-binh-thanh-1.jpg\";\n\n  let userLogin = _.get(props, 'user._id', \"\");\n\n  const getChannel = async () => {\n    let channel = await apolloClient.query({\n      query: GET_CHANNEL_BY_SLUG,\n      variables: {\n        \"slug\": props.slug\n      }\n    }).then(response => {\n      return response;\n    });\n  };\n\n  React.useEffect(() => {\n    getChannel();\n  });\n  return __jsx(Layout, _extends({\n    title: metaTitle,\n    description: \"\"\n  }, props, {\n    image: imgBanner,\n    canonical: mainURL + '/channel/' + props.slug,\n    path: 'channel',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), __jsx(Channel, {\n    slug: props.slug,\n    channel: props.channel.data.channel,\n    userLogin: userLogin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }));\n}; // @ts-ignore\n\n\nUserPage.getInitialProps = async function (props) {\n  let slugChanel = props.query.slug;\n  let channel = await apolloClient.query({\n    query: GET_CHANNEL_BY_SLUG,\n    variables: {\n      \"slug\": slugChanel\n    }\n  }).then(response => {\n    return response;\n  });\n  return {\n    channel: channel,\n    slug: slugChanel\n  };\n};\n\nexport default UserPage;","map":{"version":3,"sources":["C:/Users/manh nhan/Desktop/new_ndm/pages/channel/[slug].tsx"],"names":["React","Layout","apolloClient","GET_CHANNEL_BY_SLUG","mainURL","Channel","_","UserPage","props","metaTitle","channel","data","name","imgBanner","userLogin","get","getChannel","query","variables","slug","then","response","useEffect","getInitialProps","slugChanel"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,SAAQC,YAAR,QAA2B,aAA3B;AACA,SAASC,mBAAT,QAAoC,+BAApC;AACA,OAAO,8BAAP;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,OAAP,MAAoB,gCAApB;AACA,OAAOC,CAAP,MAAc,QAAd;;AAgCA;AACA,MAAMC,QAA8B,GAAIC,KAAD,IAAuB;AAE5D,MAAIC,SAAS,GAAGD,KAAK,CAACE,OAAN,CAAcC,IAAd,CAAmBD,OAAnB,CAA2BE,IAA3C;AACA,MAAIC,SAAS,GAAG,0GAAhB;;AACA,MAAIC,SAAS,GAAGR,CAAC,CAACS,GAAF,CAAMP,KAAN,EAAa,UAAb,EAAyB,EAAzB,CAAhB;;AAEA,QAAMQ,UAAU,GAAG,YAAY;AAC7B,QAAIN,OAAO,GAAG,MAAMR,YAAY,CAACe,KAAb,CAAmB;AAAEA,MAAAA,KAAK,EAAEd,mBAAT;AAA8Be,MAAAA,SAAS,EAAE;AAC5E,gBAAQV,KAAK,CAACW;AAD8D;AAAzC,KAAnB,EAEdC,IAFc,CAERC,QAAD,IAAmB;AAC5B,aAAOA,QAAP;AACD,KAJmB,CAApB;AAKD,GAND;;AAQArB,EAAAA,KAAK,CAACsB,SAAN,CAAgB,MAAM;AACpBN,IAAAA,UAAU;AACX,GAFD;AAIA,SACE,MAAC,MAAD;AACE,IAAA,KAAK,EAAEP,SADT;AAEE,IAAA,WAAW,EAAE;AAFf,KAGMD,KAHN;AAIE,IAAA,KAAK,EAAEK,SAJT;AAKE,IAAA,SAAS,EAAGT,OAAO,GAAG,WAAV,GAAwBI,KAAK,CAACW,IAL5C;AAME,IAAA,IAAI,EAAE,SANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQE,MAAC,OAAD;AAAS,IAAA,IAAI,EAAEX,KAAK,CAACW,IAArB;AAA2B,IAAA,OAAO,EAAEX,KAAK,CAACE,OAAN,CAAcC,IAAd,CAAmBD,OAAvD;AAAgE,IAAA,SAAS,EAAEI,SAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF;AAYD,CA9BD,C,CAgCA;;;AACAP,QAAQ,CAACgB,eAAT,GAA2B,gBAAef,KAAf,EAAiC;AAC1D,MAAIgB,UAAU,GAAGhB,KAAK,CAACS,KAAN,CAAYE,IAA7B;AACA,MAAIT,OAAO,GAAG,MAAMR,YAAY,CAACe,KAAb,CAAmB;AAAEA,IAAAA,KAAK,EAAEd,mBAAT;AAA8Be,IAAAA,SAAS,EAAE;AAC5E,cAAQM;AADoE;AAAzC,GAAnB,EAEdJ,IAFc,CAERC,QAAD,IAAmB;AAC5B,WAAOA,QAAP;AACD,GAJmB,CAApB;AAMA,SAAO;AACLX,IAAAA,OAAO,EAAEA,OADJ;AAELS,IAAAA,IAAI,EAAEK;AAFD,GAAP;AAID,CAZD;;AAeA,eAAejB,QAAf","sourcesContent":["import React from 'react';\r\nimport {NextPage} from \"next\";\r\nimport Layout from '../../components/Layout/Layout';\r\nimport {apolloClient} from \"../../utils\";\r\nimport { GET_CHANNEL_BY_SLUG } from \"../../graphql/channel/queries\";\r\nimport \"../../assets/scss/style.scss\";\r\nimport { mainURL } from \"../../constants\";\r\nimport Channel from \"../../components/Channel/Index\"\r\nimport _ from \"lodash\"\r\ninterface IndexProps {\r\n  // channel: { data: { channel: ChannelProp}}\r\n  slug: string\r\n}\r\n\r\ninterface ChannelProp {\r\n  id: string\r\n  name: string\r\n  slug: string\r\n  avatar: string\r\n  cover: string\r\n  description: string\r\n  nation: string\r\n  language: string\r\n  telephone: string\r\n  address: string\r\n  facebook: string\r\n  youtube: string\r\n  website: string\r\n  official_status: number\r\n  follow_value: number\r\n  followers: {\r\n    user_id: string\r\n  }[]\r\n  created_at: string\r\n}\r\n\r\ninterface QueryProp { \r\n  query: { slug: string } \r\n}\r\n\r\n// @ts-ignore\r\nconst UserPage: NextPage<IndexProps> = (props: IndexProps) => {\r\n\r\n  let metaTitle = props.channel.data.channel.name\r\n  let imgBanner = \"https://static.nhadatmoi.net/project/1585911111698_chung-cu-b2-truong-sa-phuong-17-quan-binh-thanh-1.jpg\"\r\n  let userLogin = _.get(props, 'user._id', \"\")\r\n\r\n  const getChannel = async () => {\r\n    let channel = await apolloClient.query({ query: GET_CHANNEL_BY_SLUG, variables: {\r\n        \"slug\": props.slug,\r\n      }}).then((response: any) => {\r\n      return response\r\n    });\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    getChannel()\r\n  })\r\n\r\n  return (\r\n    <Layout\r\n      title={metaTitle}\r\n      description={\"\"}\r\n      {...props}\r\n      image={imgBanner}\r\n      canonical={ mainURL + '/channel/' + props.slug}\r\n      path={'channel'}\r\n    >\r\n      <Channel slug={props.slug} channel={props.channel.data.channel} userLogin={userLogin} />\r\n    </Layout>\r\n  );\r\n};\r\n\r\n// @ts-ignore\r\nUserPage.getInitialProps = async function(props: QueryProp) {\r\n  let slugChanel = props.query.slug;\r\n  let channel = await apolloClient.query({ query: GET_CHANNEL_BY_SLUG, variables: {\r\n      \"slug\": slugChanel,\r\n    }}).then((response: any) => {\r\n    return response\r\n  });\r\n  \r\n  return {\r\n    channel: channel,\r\n    slug: slugChanel\r\n  };\r\n};\r\n\r\n\r\nexport default UserPage;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manh nhan\\\\Desktop\\\\Nhadatmoi\\\\components\\\\Users\\\\Index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react'; // import {Redirect, BrowserRouter as Router, useHistory, useParams} from \"react-router-dom\"\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Info from './Tabs/Info';\nimport Projects from \"./Tabs/Projects\";\nimport Reviews from \"./Tabs/Reviews\";\nimport Ad from \"./Tabs/Ad\";\nimport Header from \"./Header\";\nimport Paper from '@material-ui/core/Paper';\nimport { Tabs, Tab, Divider, colors } from '@material-ui/core';\nimport { apolloClient } from \"../../utils\";\nimport { GET_USER_BY_ID } from \"../../graphql/user/queries/index\";\nimport { GET_AD_SELL_LEASES } from \"../../graphql/ad_sell_leases/queries\";\nimport Page from \"./Page\";\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  rootTabs: {\n    flexGrow: 1\n  },\n  inner: {\n    width: theme.breakpoints.values.lg,\n    maxWidth: '100%',\n    margin: '0 auto',\n    padding: theme.spacing(3)\n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  content: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nconst Index = props => {\n  const classes = useStyles();\n  const {\n    0: itemTab,\n    1: setItemTab\n  } = useState(\"info\");\n  const {\n    0: list_ad,\n    1: setListAd\n  } = useState();\n  const {\n    0: user,\n    1: setUser\n  } = useState();\n  const tabs = [{\n    value: 'info',\n    label: 'Thông tin'\n  }, {\n    value: 'projects',\n    label: 'Dự án'\n  }, {\n    value: 'ad',\n    label: 'Tin rao'\n  }, {\n    value: 'reviews',\n    label: \"Reviews\"\n  }];\n  useEffect(() => {\n    let userId = \"5e7b82a48928eb4d96c1a526\";\n    let dataFilterAd = {\n      user: userId\n    };\n    let filterUser = JSON.stringify(dataFilterAd);\n    apolloClient.query({\n      query: GET_AD_SELL_LEASES,\n      variables: {\n        \"page\": 1,\n        \"limit\": 50,\n        \"filter\": filterUser\n      }\n    }).then(response => {\n      setListAd(response.data.adSellLeases.edges);\n    });\n    apolloClient.query({\n      query: GET_USER_BY_ID,\n      variables: {\n        \"id\": userId\n      }\n    }).then(response => {\n      setUser(response.data.user);\n    });\n  }, []);\n\n  const handleTabsChange = (event, value) => {\n    setItemTab(value);\n  };\n\n  return __jsx(Page, {\n    title: \"Profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, __jsx(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    className: classes.inner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, __jsx(Paper, {\n    square: true,\n    className: classes.rootTabs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }, __jsx(Tabs, {\n    onChange: handleTabsChange,\n    scrollButtons: \"auto\",\n    indicatorColor: \"primary\",\n    textColor: \"primary\",\n    value: itemTab,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  }, tabs.map(tab => __jsx(Tab, {\n    key: tab.value,\n    label: tab.label,\n    value: tab.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 21\n    }\n  })))), __jsx(Divider, {\n    className: classes.divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    className: classes.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }\n  }, itemTab === 'info' && __jsx(Info, {\n    user: user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 44\n    }\n  }), itemTab === 'projects' && __jsx(Projects, {\n    list_project: list_ad,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 48\n    }\n  }), itemTab === 'ad' && __jsx(Ad, {\n    list_ad: list_ad,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 42\n    }\n  }), itemTab === 'reviews' && __jsx(Reviews, {\n    list_project: list_ad,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 47\n    }\n  }))));\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/manh nhan/Desktop/Nhadatmoi/components/Users/Index.tsx"],"names":["React","useState","useEffect","makeStyles","Info","Projects","Reviews","Ad","Header","Paper","Tabs","Tab","Divider","colors","apolloClient","GET_USER_BY_ID","GET_AD_SELL_LEASES","Page","useStyles","theme","root","rootTabs","flexGrow","inner","width","breakpoints","values","lg","maxWidth","margin","padding","spacing","divider","backgroundColor","grey","content","marginTop","Index","props","classes","itemTab","setItemTab","list_ad","setListAd","user","setUser","tabs","value","label","userId","dataFilterAd","filterUser","JSON","stringify","query","variables","then","response","data","adSellLeases","edges","handleTabsChange","event","map","tab"],"mappings":"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","sourcesContent":["import React, { FunctionComponent, useState, useEffect} from 'react';\r\n// import {Redirect, BrowserRouter as Router, useHistory, useParams} from \"react-router-dom\"\r\nimport {makeStyles} from '@material-ui/core/styles'\r\nimport Info from './Tabs/Info'\r\nimport Projects from \"./Tabs/Projects\"\r\nimport Reviews from \"./Tabs/Reviews\"\r\nimport Ad from \"./Tabs/Ad\"\r\nimport Header from \"./Header\"\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {Tabs, Tab, Divider, colors} from '@material-ui/core';\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport {apolloClient} from \"../../utils\";\r\nimport {GET_PROJECT_LIST_NAME} from \"../../graphql/project/queries\";\r\nimport {GET_USER_BY_ID } from \"../../graphql/user/queries/index\"\r\nimport {GET_AD_SELL_LEASES} from \"../../graphql/ad_sell_leases/queries\"\r\nimport Page from \"./Page\";\r\n \r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {},\r\n    rootTabs: {\r\n        flexGrow: 1,\r\n    },\r\n    inner: {\r\n        width: theme.breakpoints.values.lg,\r\n        maxWidth: '100%',\r\n        margin: '0 auto',\r\n        padding: theme.spacing(3)\r\n    },\r\n    divider: {\r\n        backgroundColor: colors.grey[300]\r\n    },\r\n    content: {\r\n        marginTop: theme.spacing(3)\r\n    }\r\n}));\r\n\r\ninterface ProfileProps {\r\n\r\n}\r\n\r\ninterface User {\r\n  address: String\r\n  avatar: String\r\n  birthday: String\r\n  email: String\r\n  facebook: String\r\n  first_name: String\r\n  gender: String\r\n  google_id: String\r\n  id: String\r\n  intro: String\r\n  last_name: String\r\n  phone: String\r\n  mobile: String\r\n  skype: String\r\n  username: String\r\n  viber: String\r\n  website: String\r\n  zalo: String\r\n  created_at: String\r\n  updated_at: String\r\n}\r\n\r\ninterface AdProps  {\r\n  node: {\r\n      title: string,\r\n      slug: string,\r\n      created_at: string,\r\n      updated_at: string,\r\n      price: {\r\n        unit: string\r\n        value: string\r\n      },\r\n      avatar: {\r\n        alt_text: string\r\n        src: string\r\n        description: string\r\n      },\r\n      address: {\r\n        text: string,\r\n        ward: string,\r\n        district: string,\r\n        city: string\r\n      },\r\n      contact: {\r\n        image: string,\r\n        name: string,\r\n        address: string,\r\n        mobile: string,\r\n        phone: string,\r\n        email: string,\r\n      }\r\n      area: {\r\n        unit: string\r\n        value: string\r\n      }\r\n  },\r\n}\r\n\r\nconst Index: FunctionComponent<ProfileProps> = (props: ProfileProps) => {\r\nconst classes = useStyles();\r\nconst [itemTab, setItemTab] = useState(\"info\")\r\nconst [list_ad , setListAd] = useState();\r\nconst [user , setUser] = useState();\r\nconst tabs = [\r\n    {value: 'info', label: 'Thông tin'},\r\n    {value: 'projects', label: 'Dự án'},\r\n    {value: 'ad', label: 'Tin rao'},\r\n    {value: 'reviews', label: \"Reviews\"}\r\n]\r\n\r\n    useEffect(() => {\r\n        let userId = \"5e7b82a48928eb4d96c1a526\"\r\n        let dataFilterAd = { user: userId}\r\n        let filterUser = JSON.stringify(dataFilterAd)\r\n        apolloClient.query({query: GET_AD_SELL_LEASES, variables: {\r\n        \"page\": 1,\r\n        \"limit\": 50,\r\n        \"filter\": filterUser \r\n        }}).then(response => { \r\n        setListAd(response.data.adSellLeases.edges)\r\n        })\r\n        apolloClient.query({query: GET_USER_BY_ID, variables: {\r\n        \"id\": userId\r\n        }}).then(response => { \r\n        setUser(response.data.user)\r\n        })\r\n    }, [])\r\n\r\n    const handleTabsChange = (event: any, value: any) => {\r\n        setItemTab(value)\r\n    }\r\n\r\n    return (\r\n        <Page title=\"Profile\">\r\n            <Header/>\r\n            <div className={classes.inner}>\r\n                <Paper square className={classes.rootTabs}>\r\n                <Tabs\r\n                    onChange={handleTabsChange}\r\n                    scrollButtons=\"auto\"\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                    value={itemTab}\r\n                >\r\n                    {tabs.map(tab => (\r\n                    <Tab key={tab.value} label={tab.label} value={tab.value} />\r\n                    ))}\r\n                </Tabs>\r\n                </Paper>\r\n                <Divider className={classes.divider}/>\r\n                <div className={classes.content}>\r\n                    {itemTab === 'info' && <Info user={user} />}\r\n                    {itemTab === 'projects' && <Projects list_project={list_ad}/>}\r\n                    {itemTab === 'ad' && <Ad list_ad={list_ad}/>}\r\n                    {itemTab === 'reviews' && <Reviews list_project={list_ad} />}\r\n                </div>\r\n            </div>\r\n        </Page>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\manh nhan\\\\Desktop\\\\Nhadatmoi\\\\pages\\\\nguoi-dung\\\\[slug].tsx\";\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport Layout from '../../components/Layout/Layout';\nimport { apolloClient } from \"../../utils\";\nimport { GET_PROJECT_BY_SLUG } from \"../../graphql/project/queries\";\nimport { GET_INVESTOR_BY_ID } from \"../../graphql/investor/queries\";\nimport StringProcess from \"../../modules/stringProcess\";\nimport \"../../assets/scss/style.scss\";\nimport { localStorageCompareKey, mainURL } from \"../../constants\";\nimport urlProcess from \"../../modules/urlProcess\";\nimport Validator from \"../../modules/validator\";\nimport { COUNT_VIEW_PROJECT } from \"../../graphql/project/mutation\";\n\n// @ts-ignore\nvar ProjectDetailPage = function ProjectDetailPage(props) {\n  var title = props.projectDetail.data.project.name ? props.projectDetail.data.project.name : 'Xem chi tiết dự án';\n\n  var square = __jsx(React.Fragment, null, \"m\", __jsx(\"sup\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 20\n    }\n  }, \"2\"));\n\n  var imageAvatar = 'https://static.nhadatmoi.net/default/home_default.jpg';\n\n  if (props.projectDetail.data.project.cover_image) {\n    imageAvatar = urlProcess.processImageUrl(props.projectDetail.data.project.cover_image, 'project');\n  }\n\n  var freshText = function freshText(input) {\n    input = StringProcess.stripProperties(input, []);\n    input = StringProcess.stripTags(input, '');\n    input = input.replace(/&nbsp;/g, ' ');\n    return input;\n  };\n\n  var convertDescription = function convertDescription(input) {\n    return input.replace(/&#(\\d+);/g, function (match, dec) {\n      return String.fromCharCode(dec);\n    });\n  };\n\n  var metaTitle = '';\n  var metaDescription = '';\n\n  if (props.projectDetail.data.project.seo_title) {\n    metaTitle = props.projectDetail.data.project.seo_title;\n  }\n\n  if (props.projectDetail.data.project.seo_description) {\n    metaDescription = props.projectDetail.data.project.seo_description;\n  }\n\n  if (metaTitle === '' || !metaTitle) {\n    metaTitle = title;\n  }\n\n  if (metaDescription === '' || !metaDescription) {\n    metaDescription = freshText(props.projectDetail.data.project.intro_content);\n    metaDescription = convertDescription(metaDescription);\n    metaDescription = StringProcess.truncateString(metaDescription, 255, '');\n  }\n\n  var initStateInvestor = {\n    id: \"\",\n    name: \"\",\n    description: \"\",\n    slug: \"\",\n    email: \"\",\n    website: \"\",\n    image: \"\",\n    address: {\n      text: \"\"\n    },\n    phone: \"\",\n    mobile: \"\"\n  }; //Count Ad Sell Lease\n\n  var _React$useState = React.useState(initStateInvestor),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      investor = _React$useState2[0],\n      setInvestor = _React$useState2[1];\n\n  useEffect(function () {\n    var projectId = props.projectDetail.data.project.id;\n    apolloClient.mutate({\n      mutation: COUNT_VIEW_PROJECT,\n      variables: {\n        \"input\": {\n          \"id\": projectId\n        }\n      }\n    }).then(function (response) {});\n    var investorId = props.projectDetail.data.project.investor;\n    apolloClient.query({\n      query: GET_INVESTOR_BY_ID,\n      variables: {\n        \"id\": investorId\n      }\n    }).then(function (response) {\n      if (!Validator.isBlank(response.data) && !Validator.isBlank(response.data.investor)) {\n        setInvestor(response.data.investor);\n      }\n    });\n  }, []);\n\n  var _React$useState3 = React.useState({}),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      dataCompare = _React$useState4[0],\n      setDataCompare = _React$useState4[1];\n\n  var updateCompareData = function updateCompareData(data) {\n    var dataToCompare = [];\n    var isAddToLocal = true;\n\n    if (localStorage.getItem(localStorageCompareKey) && !Validator.isBlank(localStorage.getItem(localStorageCompareKey))) {\n      dataToCompare = JSON.parse(localStorage.getItem(localStorageCompareKey));\n\n      for (var index in dataToCompare) {\n        if (dataToCompare[index].id === data.id) {\n          isAddToLocal = false;\n        }\n\n        if (dataToCompare[index].type !== data.type) {\n          localStorage.removeItem(localStorageCompareKey);\n          dataToCompare = [];\n          break;\n        }\n      }\n    }\n\n    if (isAddToLocal) {\n      dataToCompare.push(data); // @ts-ignore\n\n      setDataCompare(dataToCompare);\n      localStorage.setItem(localStorageCompareKey, JSON.stringify(dataToCompare));\n    }\n  };\n\n  return __jsx(Layout, _extends({\n    title: \"metaTitle\",\n    description: \"metaDescription\"\n  }, props, {\n    image: \"https://www.w3schools.com/w3css/img_lights.jpg\",\n    canonical: mainURL + '/nguoi-dung/' + \"ra-hang-dot-cuoi-toa-nha-discovery-complex-so-302-cau-giay-gia-chi-tu-31trm2-1585625310485\",\n    path: 'nguoi-dung',\n    dataCompare: {},\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 5\n    }\n  }), __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }\n  }, \"Dai ca\"));\n}; // @ts-ignore\n\n\nProjectDetailPage.getInitialProps = function _callee(props) {\n  var projectSlug, projectDetail;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          projectSlug = props.query.slug;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(apolloClient.query({\n            query: GET_PROJECT_BY_SLUG,\n            variables: {\n              \"slug\": projectSlug\n            }\n          }).then(function (response) {\n            return response;\n          }));\n\n        case 3:\n          projectDetail = _context.sent;\n          return _context.abrupt(\"return\", {\n            projectDetail: projectDetail,\n            slug: projectSlug\n          });\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default ProjectDetailPage;","map":{"version":3,"sources":["C:/Users/manh nhan/Desktop/Nhadatmoi/pages/nguoi-dung/[slug].tsx"],"names":["React","useEffect","Layout","apolloClient","GET_PROJECT_BY_SLUG","GET_INVESTOR_BY_ID","StringProcess","localStorageCompareKey","mainURL","urlProcess","Validator","COUNT_VIEW_PROJECT","ProjectDetailPage","props","title","projectDetail","data","project","name","square","imageAvatar","cover_image","processImageUrl","freshText","input","stripProperties","stripTags","replace","convertDescription","match","dec","String","fromCharCode","metaTitle","metaDescription","seo_title","seo_description","intro_content","truncateString","initStateInvestor","id","description","slug","email","website","image","address","text","phone","mobile","useState","investor","setInvestor","projectId","mutate","mutation","variables","then","response","investorId","query","isBlank","dataCompare","setDataCompare","updateCompareData","dataToCompare","isAddToLocal","localStorage","getItem","JSON","parse","index","type","removeItem","push","setItem","stringify","getInitialProps","projectSlug"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\r\nimport {NextPage} from \"next\";\r\nimport Layout from '../../components/Layout/Layout';\r\nimport BannerSlider from \"../../components/PageDetail/BannerSlider\";\r\nimport Main from \"../../components/Project/ProjectMain\";\r\nimport DetailInvestor from \"../../components/Investor/DetailInvestor\"\r\nimport {apolloClient} from \"../../utils\";\r\nimport {GET_PROJECT_BY_SLUG} from \"../../graphql/project/queries\";\r\nimport {GET_INVESTOR_BY_ID} from \"../../graphql/investor/queries\"\r\nimport StringProcess from \"../../modules/stringProcess\";\r\nimport \"../../assets/scss/style.scss\";\r\nimport {localStorageCompareKey, mainURL} from \"../../constants\";\r\nimport urlProcess from \"../../modules/urlProcess\";\r\nimport Validator from \"../../modules/validator\";\r\nimport {COUNT_VIEW_PROJECT} from \"../../graphql/project/mutation\";\r\n\r\ninterface ProjectItemProp {\r\n  id: string,\r\n  investor: string,\r\n  price: string,\r\n  name: string,\r\n  land_area: string,\r\n  image: ImageProp[],\r\n  video: string,\r\n  financial_support: string,\r\n  position_content: string,\r\n  infrastructure_content: string,\r\n  seo_title: string|null,\r\n  seo_description: string|null,\r\n  address: { \r\n    text: string,\r\n    ward: string, \r\n    district: string, \r\n    city: string \r\n  },\r\n  block: {\r\n    name: string,\r\n    image: ImageProp,\r\n  }[],\r\n  cover_image: string,\r\n  intro_content: string\r\n  created_at: string\r\n  updated_at: string\r\n  view_count: number\r\n  google_map_latitude: string\r\n  google_map_longitude: string\r\n}\r\ninterface ImageProp { \r\n  alt_text: string \r\n  description: string\r\n  title: string\r\n  src: string\r\n}\r\ninterface ProjectDetails {\r\n  url: { query: { slug: string }},\r\n  // projectDetail: { data: { project: ProjectItemProp } },\r\n  slug: string\r\n}\r\ninterface QueryProp { \r\n  query: { slug: string } \r\n}\r\ninterface CompareDataProps {\r\n  avatar: string,\r\n  title: string|null,\r\n  id: string,\r\n  type: string\r\n}\r\ninterface Investor {\r\n  id: string\r\n  name: string\r\n  description: string\r\n  slug: string\r\n  email: string\r\n  website: string\r\n  image: string\r\n  address: {\r\n   text: string\r\n  }\r\n  phone: string\r\n  mobile: string\r\n}\r\ninterface ImageProp {\r\n  alt_text: string\r\n  description: string\r\n  title: string\r\n  src: string\r\n}\r\n \r\n// @ts-ignore\r\nconst ProjectDetailPage: NextPage<ProjectDetails> = (props: ProjectDetails) => {\r\n  let title = (props.projectDetail.data.project.name)?props.projectDetail.data.project.name:'Xem chi tiết dự án';\r\n  let square = (<>m<sup>2</sup></>);\r\n  let imageAvatar = 'https://static.nhadatmoi.net/default/home_default.jpg';\r\n  if (props.projectDetail.data.project.cover_image) {\r\n    imageAvatar = urlProcess.processImageUrl(props.projectDetail.data.project.cover_image, 'project');\r\n  }\r\n  const freshText = (input: string) => {\r\n    input = StringProcess.stripProperties(input, []);\r\n    input = StringProcess.stripTags(input, '');\r\n    input = input.replace(/&nbsp;/g, ' ');\r\n    return input;\r\n  };\r\n  const convertDescription = (input: string) => {\r\n    return input.replace(/&#(\\d+);/g, function(match, dec) {\r\n      return String.fromCharCode(dec);\r\n    });\r\n  };\r\n  let metaTitle = '';\r\n  let metaDescription = '';\r\n  if (props.projectDetail.data.project.seo_title) {\r\n    metaTitle = props.projectDetail.data.project.seo_title;\r\n  }\r\n  if (props.projectDetail.data.project.seo_description) {\r\n    metaDescription = props.projectDetail.data.project.seo_description;\r\n  }\r\n  if (metaTitle === '' || !metaTitle) {\r\n    metaTitle = title;\r\n  }\r\n  \r\n  if (metaDescription === '' || !metaDescription) {\r\n    metaDescription = freshText(props.projectDetail.data.project.intro_content);\r\n    metaDescription = convertDescription(metaDescription);\r\n    metaDescription = StringProcess.truncateString(metaDescription, 255, '');\r\n  }\r\n  let initStateInvestor = {\r\n    id: \"\",\r\n    name: \"\",\r\n    description: \"\",\r\n    slug: \"\",\r\n    email: \"\",\r\n    website: \"\",\r\n    image: \"\",\r\n    address: {\r\n      text: \"\",\r\n    },\r\n    phone: \"\",\r\n    mobile: \"\"\r\n  }\r\n  //Count Ad Sell Lease\r\n  const [investor, setInvestor] = React.useState<Investor>(initStateInvestor);\r\n  \r\n  useEffect(() => {\r\n    let projectId = props.projectDetail.data.project.id;\r\n    apolloClient.mutate({mutation: COUNT_VIEW_PROJECT, variables: {\r\n        \"input\": {\r\n          \"id\": projectId\r\n        }\r\n      }}).then((response: any) => {\r\n    });\r\n    let investorId = props.projectDetail.data.project.investor\r\n    apolloClient.query({query: GET_INVESTOR_BY_ID, variables: {\r\n      \"id\": investorId\r\n      }}).then(response => {\r\n        if (!Validator.isBlank(response.data) && !Validator.isBlank(response.data.investor)) {\r\n          setInvestor(response.data.investor);\r\n        }\r\n    });\r\n  }, []);\r\n\r\n  const [dataCompare, setDataCompare] = React.useState({});\r\n  let updateCompareData = (data: CompareDataProps) => {\r\n    let dataToCompare = [];\r\n    let isAddToLocal = true;\r\n    if (localStorage.getItem(localStorageCompareKey) && !Validator.isBlank(localStorage.getItem(localStorageCompareKey))) {\r\n      dataToCompare = JSON.parse(localStorage.getItem(localStorageCompareKey) as string);\r\n      for (let index in dataToCompare) {\r\n        if (dataToCompare[index].id === data.id) {\r\n          isAddToLocal = false;\r\n        }\r\n        if (dataToCompare[index].type !== data.type) {\r\n          localStorage.removeItem(localStorageCompareKey);\r\n          dataToCompare = [];\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    if (isAddToLocal) {\r\n      dataToCompare.push(data);\r\n      // @ts-ignore\r\n      setDataCompare(dataToCompare);\r\n      localStorage.setItem(localStorageCompareKey, JSON.stringify(dataToCompare));\r\n    }\r\n  };\r\n  return (\r\n    <Layout\r\n      title={\"metaTitle\"}\r\n      description={\"metaDescription\"}\r\n      {...props}\r\n      image={\"https://www.w3schools.com/w3css/img_lights.jpg\"}\r\n      canonical={ mainURL + '/nguoi-dung/' + \"ra-hang-dot-cuoi-toa-nha-discovery-complex-so-302-cau-giay-gia-chi-tu-31trm2-1585625310485\"}\r\n      path={'nguoi-dung'}\r\n      dataCompare={{}}\r\n    >\r\n      <h1>Dai ca</h1>\r\n      {/* <DetailInvestor investor={investor} slug={\"ra-hang-dot-cuoi-toa-nha-discovery-complex-so-302-cau-giay-gia-chi-tu-31trm2-1585625310485\"} /> */}\r\n    </Layout>\r\n  );\r\n};\r\n\r\n// @ts-ignore\r\nProjectDetailPage.getInitialProps = async function(props: QueryProp) {\r\n  let projectSlug = props.query.slug;\r\n  let projectDetail = await apolloClient.query({query: GET_PROJECT_BY_SLUG, variables: {\r\n      \"slug\": projectSlug\r\n    }}).then(response => {\r\n    return response;\r\n  });\r\n  return {\r\n    projectDetail: projectDetail,\r\n    slug: projectSlug,\r\n  };\r\n};\r\n\r\nexport default ProjectDetailPage;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\toan\\\\Desktop\\\\NDM\\\\chat\\\\components\\\\Home\\\\Header.jsx\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport InfoIcon from '@material-ui/icons/Info';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { I18n } from 'react-redux-i18n';\nimport { IconButton, Icon, Tooltip, Button, Card, Grid, CardContent, CardActions, Typography, AppBar, Toolbar, Hidden, Popover } from '@material-ui/core';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport { titles } from '../../constants/index';\nimport moment from 'moment';\nimport _ from 'lodash';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    popover: {\n      pointerEvents: 'none'\n    },\n    paper: {\n      padding: theme.spacing(1)\n    }\n  };\n});\n\nvar Actions = function Actions(props) {\n  var classes = useStyles();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      indexOpen = _React$useState4[0],\n      setIndex = _React$useState4[1];\n\n  var popoverOpen = function popoverOpen(event, index) {\n    setOpen(event.currentTarget);\n    setIndex(index);\n  };\n\n  var popoverClose = function popoverClose() {\n    setOpen(null);\n    setIndex(null);\n  };\n\n  return __jsx(Grid, {\n    container: true,\n    spacing: 0,\n    style: {\n      height: 40,\n      width: '100%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    style: {\n      padding: '8px 80px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, titles.map(function (item, index) {\n    return __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }\n    }, __jsx(Typography, {\n      key: index,\n      style: {\n        display: 'inline',\n        fontWeight: 500,\n        color: '#1976d2',\n        fontSize: 16,\n        padding: '0 8px'\n      },\n      onMouseEnter: function onMouseEnter(event) {\n        return popoverOpen(event, index);\n      },\n      onMouseLeave: popoverClose,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 29\n      }\n    }, item.title), indexOpen === index && __jsx(Popover, {\n      id: \"mouse-over-popover\" + index,\n      className: classes.popover,\n      classes: {\n        paper: classes.paper\n      },\n      open: open,\n      anchorEl: open,\n      anchorOrigin: {\n        // Vị trí ghim\n        vertical: 'bottom',\n        // Theo chieu doc\n        horizontal: 'left' //  theo chieu ngang\n\n      },\n      transformOrigin: {\n        // Biến đổi\n        vertical: 'top',\n        horizontal: 'bottom'\n      },\n      onClose: popoverClose,\n      disableRestoreFocus: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 53\n      }\n    }, __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 33\n      }\n    }, item.elements.map(function (e, count) {\n      return __jsx(Typography, {\n        key: count,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 70\n        }\n      }, e.children);\n    }))));\n  })));\n};\n\nexport default Actions;","map":{"version":3,"sources":["C:/Users/toan/Desktop/NDM/chat/components/Home/Header.jsx"],"names":["React","makeStyles","GridList","GridListTile","GridListTileBar","ListSubheader","InfoIcon","PropTypes","withStyles","I18n","IconButton","Icon","Tooltip","Button","Card","Grid","CardContent","CardActions","Typography","AppBar","Toolbar","Hidden","Popover","StarBorderIcon","titles","moment","_","useStyles","theme","popover","pointerEvents","paper","padding","spacing","Actions","props","classes","useState","open","setOpen","indexOpen","setIndex","popoverOpen","event","index","currentTarget","popoverClose","height","width","map","item","display","fontWeight","color","fontSize","title","vertical","horizontal","elements","e","count","children"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport GridList from '@material-ui/core/GridList'\r\nimport GridListTile from '@material-ui/core/GridListTile'\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar'\r\nimport ListSubheader from '@material-ui/core/ListSubheader'\r\nimport InfoIcon from '@material-ui/icons/Info'\r\nimport PropTypes from 'prop-types'\r\nimport withStyles from '@material-ui/core/styles/withStyles'\r\nimport { I18n } from 'react-redux-i18n'\r\nimport {\r\n    IconButton,\r\n    Icon,\r\n    Tooltip,\r\n    Button,\r\n    Card,\r\n    Grid,\r\n    CardContent,\r\n    CardActions,\r\n    Typography,\r\n    AppBar,\r\n    Toolbar,\r\n    Hidden,\r\n    Popover,\r\n\r\n} from '@material-ui/core'\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder'\r\nimport { titles } from '../../constants/index';\r\nimport moment from 'moment'\r\nimport _ from 'lodash'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    popover: {\r\n        pointerEvents: 'none',\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n    },\r\n}));\r\n\r\n\r\nconst Actions = (props) => {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [indexOpen, setIndex] = React.useState(null);\r\n\r\n    const popoverOpen = (event, index) => {\r\n        setOpen(event.currentTarget);\r\n        setIndex(index);\r\n    };\r\n\r\n    const popoverClose = () => {\r\n        setOpen(null);\r\n        setIndex(null);\r\n    };\r\n\r\n    return (\r\n        <Grid container spacing={0} style={{ height: 40, width: '100%' }}>\r\n            <Grid item xs={12} style={{ padding: '8px 80px' }}>\r\n                {titles.map((item, index) => {\r\n                    return (\r\n                        <span>\r\n                            <Typography\r\n                                key={index} style={{ display: 'inline', fontWeight: 500, color: '#1976d2', fontSize: 16, padding: '0 8px' }}\r\n                                onMouseEnter={(event) => popoverOpen(event, index)}\r\n                                onMouseLeave={popoverClose}\r\n                            >\r\n                                {item.title}\r\n                            </Typography>\r\n                            {indexOpen === index && <Popover\r\n                                id={\"mouse-over-popover\" + index}\r\n                                className={classes.popover}\r\n                                classes={{\r\n                                    paper: classes.paper,\r\n                                }}\r\n                                open={open}\r\n                                anchorEl={open}\r\n                                anchorOrigin={{ // Vị trí ghim\r\n                                    vertical: 'bottom', // Theo chieu doc\r\n                                    horizontal: 'left', //  theo chieu ngang\r\n                                }}\r\n                                transformOrigin={{ // Biến đổi\r\n                                    vertical: 'top',\r\n                                    horizontal: 'bottom',\r\n                                }}\r\n                                onClose={popoverClose}\r\n                                disableRestoreFocus\r\n                            >\r\n                                <div>\r\n                                    {item.elements.map((e, count) => <Typography key={count}>{e.children}</Typography>)}\r\n                                </div>\r\n                            </Popover>}\r\n                        </span>\r\n                    )\r\n                })}\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n};\r\n\r\nexport default Actions;\r\n"]},"metadata":{},"sourceType":"module"}
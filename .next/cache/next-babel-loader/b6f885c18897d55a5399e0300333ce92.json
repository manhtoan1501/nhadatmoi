{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport Layout from '../../components/Layout/Layout'; //Import SCSS\n\nimport \"../../assets/scss/style.scss\";\nimport Main from \"../../components/AdSellLeases/AdSellLeasesMain\";\nimport { apolloClient } from \"../../utils\";\nimport { GET_AD_SELL_LEASES_BY_SLUG } from \"../../graphql/ad_sell_leases/queries\";\nimport { COUNT_VIEW_AD_SELL_LEASE } from \"../../graphql/ad_sell_leases/mutation\";\nimport StringProcess from \"./../../modules/stringProcess\";\nimport { localStorageCompareKey, mainURL } from \"../../constants\";\nimport urlProcess from \"../../modules/urlProcess\";\nimport Validator from \"../../modules/validator\";\nimport PriceProcess from \"../../modules/priceProcess\";\n\n// @ts-ignore\nconst AdSellLeaseDetailPage = props => {\n  let title = props.adSellLease.data.adSellLease.title ? props.adSellLease.data.adSellLease.title : 'Xem chi tiáº¿t tin rao';\n  let albumImage = props.adSellLease.data.adSellLease.image;\n  let priceUnit = props.adSellLease.data.adSellLease.price.unit;\n  let priceValue = props.adSellLease.data.adSellLease.price.value;\n\n  let sizeArea = __jsx(React.Fragment, null, props.adSellLease.data.adSellLease.width, \" x \", props.adSellLease.data.adSellLease.length, \" m\", __jsx(\"sup\", null, \"2\"));\n\n  let square = __jsx(React.Fragment, null, \"m\", __jsx(\"sup\", null, \"2\"));\n\n  let areaString = __jsx(React.Fragment, null, StringProcess.addCommas(props.adSellLease.data.adSellLease.area.value), \" \", props.adSellLease.data.adSellLease.area.unit == \"m2\" ? square : props.adSellLease.data.adSellLease.area.unit);\n\n  const freshText = input => {\n    input = StringProcess.stripProperties(input, []);\n    input = StringProcess.stripTags(input, '');\n    input = input.replace(/&nbsp;/g, ' ');\n    return input;\n  };\n\n  const convertDescription = input => {\n    return input.replace(/&#(\\d+);/g, function (match, dec) {\n      return String.fromCharCode(dec);\n    });\n  };\n\n  let metaTitle = '';\n  let metaDescription = '';\n\n  if (props.adSellLease.data.adSellLease.seo_title) {\n    metaTitle = props.adSellLease.data.adSellLease.seo_title;\n  }\n\n  if (props.adSellLease.data.adSellLease.seo_description) {\n    metaDescription = props.adSellLease.data.adSellLease.seo_description;\n  }\n\n  if (metaTitle === '' || !metaTitle) {\n    metaTitle = title;\n  }\n\n  if (metaDescription === '' || !metaDescription) {\n    metaDescription = freshText(props.adSellLease.data.adSellLease.description);\n    metaDescription = convertDescription(metaDescription);\n    metaDescription = StringProcess.truncateString(metaDescription, 255, '');\n  }\n\n  let imageAvatar = 'https://static.nhadatmoi.net/default/home_default.jpg';\n\n  if (props.adSellLease.data.adSellLease.avatar && props.adSellLease.data.adSellLease.avatar.src) {\n    imageAvatar = urlProcess.processImageUrl(props.adSellLease.data.adSellLease.avatar.src, 'ad_sell_lease');\n  } //Count Ad Sell Lease\n\n\n  useEffect(() => {\n    let adSellLeaseId = props.adSellLease.data.adSellLease.id;\n    apolloClient.mutate({\n      mutation: COUNT_VIEW_AD_SELL_LEASE,\n      variables: {\n        \"input\": {\n          \"id\": adSellLeaseId\n        }\n      }\n    }).then(response => {});\n  }, []);\n  const [dataCompare, setDataCompare] = React.useState(null);\n\n  let updateCompareData = data => {\n    let dataToCompare = [];\n    let isAddToLocal = true;\n\n    if (localStorage.getItem(localStorageCompareKey) && !Validator.isBlank(localStorage.getItem(localStorageCompareKey))) {\n      dataToCompare = JSON.parse(localStorage.getItem(localStorageCompareKey));\n\n      for (let index in dataToCompare) {\n        if (dataToCompare[index].id === data.id) {\n          isAddToLocal = false;\n        }\n\n        if (dataToCompare[index].type !== data.type) {\n          localStorage.removeItem(localStorageCompareKey);\n          dataToCompare = [];\n          break;\n        }\n      }\n    }\n\n    if (isAddToLocal) {\n      dataToCompare.push(data); // @ts-ignore\n\n      setDataCompare(dataToCompare);\n      localStorage.setItem(localStorageCompareKey, _JSON$stringify(dataToCompare));\n    }\n  };\n\n  let priceToReturn = PriceProcess.priceProcess(priceValue, priceUnit);\n  let propertyOverview = {\n    id: props.adSellLease.data.adSellLease.id,\n    building_density: '',\n    type: props.adSellLease.data.adSellLease.type.text ? props.adSellLease.data.adSellLease.type.text : '-',\n    status: props.adSellLease.data.adSellLease.status ? props.adSellLease.data.adSellLease.status : '-',\n    floor_number: props.adSellLease.data.adSellLease.floor_number,\n    living_room_number: props.adSellLease.data.adSellLease.living_room_number,\n    bed_room_number: props.adSellLease.data.adSellLease.bed_room_number,\n    toilet_room_number: props.adSellLease.data.adSellLease.toilet_room_number,\n    gara_number: props.adSellLease.data.adSellLease.gara_number,\n    material: props.adSellLease.data.adSellLease.material.text ? props.adSellLease.data.adSellLease.material.text : '-',\n    length: props.adSellLease.data.adSellLease.length,\n    width: props.adSellLease.data.adSellLease.width,\n    price: priceToReturn,\n    project: String(props.adSellLease.data.adSellLease.project),\n    area: areaString,\n    year_built: props.adSellLease.data.adSellLease.year_built.toString(),\n    address: props.adSellLease.data.adSellLease.address,\n    size: sizeArea,\n    description: props.adSellLease.data.adSellLease.description,\n    map: props.adSellLease.data.adSellLease.map,\n    title: props.adSellLease.data.adSellLease.title,\n    updated_at: props.adSellLease.data.adSellLease.updated_at,\n    created_at: props.adSellLease.data.adSellLease.created_at,\n    position_content: '',\n    view_count: props.adSellLease.data.adSellLease.view_count,\n    infrastructure_content: ''\n  };\n  return __jsx(Layout, _extends({\n    title: metaTitle,\n    description: metaDescription\n  }, props, {\n    image: imageAvatar,\n    canonical: mainURL + '/tin-rao/' + props.slug,\n    path: 'tin-rao',\n    dataCompare: dataCompare\n  }), __jsx(Main, {\n    propertyOverview: propertyOverview,\n    images: albumImage,\n    contact: props.adSellLease.data.adSellLease.contact,\n    objectUrl: mainURL + '/tin-rao/' + props.slug,\n    imageType: \"ad_sell_lease\",\n    avatar: props.adSellLease.data.adSellLease.avatar.src,\n    updateCompareData: data => updateCompareData(data)\n  }));\n}; // @ts-ignore\n\n\nAdSellLeaseDetailPage.getInitialProps = async function (props) {\n  let projectSlug = props.query.slug;\n  let adSellLeases = await apolloClient.query({\n    query: GET_AD_SELL_LEASES_BY_SLUG,\n    variables: {\n      \"slug\": projectSlug\n    }\n  }).then(response => {\n    return response;\n  });\n  return {\n    adSellLease: adSellLeases,\n    slug: projectSlug\n  };\n};\n\nexport default AdSellLeaseDetailPage;","map":null,"metadata":{},"sourceType":"module"}
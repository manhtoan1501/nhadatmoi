{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"C:\\\\Users\\\\manh nhan\\\\Desktop\\\\new_ndm\\\\pages\\\\channel\\\\[slug].tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Layout from '../../components/Layout/Layout';\nimport { apolloClient } from \"../../utils\";\nimport { GET_AD_SELL_LEASE_COMMENTS, GET_AD_SELL_LEASE_RATINGS } from \"../../graphql/reviews/queries\";\nimport { GET_USER_BY_ID } from \"../../graphql/user/queries/index\";\nimport \"../../assets/scss/style.scss\";\nimport { mainURL } from \"../../constants\";\nimport Channel from \"../../components/Channel/Index\";\n\n// @ts-ignore\nvar UserPage = function UserPage(props) {\n  var metaTitle = \"Channel\";\n  var imgBanner = \"https://static.nhadatmoi.net/project/1585911111698_chung-cu-b2-truong-sa-phuong-17-quan-binh-thanh-1.jpg\";\n  return __jsx(Layout, _extends({\n    title: metaTitle,\n    description: \"\"\n  }, props, {\n    image: imgBanner,\n    canonical: mainURL + '/channel/',\n    path: 'channel',\n    dataCompare: {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), __jsx(Channel, {\n    comments: props.comments.data.adSellLeaseComments.edges,\n    ratings: props.ratings.data.adSellLeaseRatings.edges,\n    infoUser: props.infoUser,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }));\n}; // @ts-ignore\n\n\nUserPage.getInitialProps = function _callee(props) {\n  var slug, dataFilter, comments, ratings, infoUser;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          slug = props.query.slug;\n          dataFilter = _JSON$stringify({\n            slug: slug\n          });\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(apolloClient.query({\n            query: GET_AD_SELL_LEASE_COMMENTS,\n            variables: {\n              \"page\": 1,\n              \"limit\": 15,\n              \"filter\": dataFilter\n            }\n          }).then(function (response) {\n            return response;\n          }));\n\n        case 4:\n          comments = _context.sent;\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(apolloClient.query({\n            query: GET_AD_SELL_LEASE_RATINGS,\n            variables: {\n              \"page\": 1,\n              \"limit\": 15,\n              \"filter\": dataFilter\n            }\n          }).then(function (response) {\n            return response;\n          }));\n\n        case 7:\n          ratings = _context.sent;\n          _context.next = 10;\n          return _regeneratorRuntime.awrap(apolloClient.query({\n            query: GET_USER_BY_ID,\n            variables: {\n              \"id\": id\n            }\n          }).then(function (response) {\n            return response.data.user;\n          }));\n\n        case 10:\n          infoUser = _context.sent;\n          return _context.abrupt(\"return\", {\n            comments: comments,\n            ratings: ratings,\n            infoUser: infoUser\n          });\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, _Promise);\n};\n\nexport default UserPage;","map":{"version":3,"sources":["C:/Users/manh nhan/Desktop/new_ndm/pages/channel/[slug].tsx"],"names":["React","Layout","apolloClient","GET_AD_SELL_LEASE_COMMENTS","GET_AD_SELL_LEASE_RATINGS","GET_USER_BY_ID","mainURL","Channel","UserPage","props","metaTitle","imgBanner","comments","data","adSellLeaseComments","edges","ratings","adSellLeaseRatings","infoUser","getInitialProps","slug","query","dataFilter","variables","then","response","id","user"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,SAAQC,YAAR,QAA2B,aAA3B;AACA,SAAQC,0BAAR,EAAoCC,yBAApC,QAAoE,+BAApE;AACA,SAAQC,cAAR,QAA8B,kCAA9B;AACA,OAAO,8BAAP;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,OAAP,MAAoB,gCAApB;;AAuEA;AACA,IAAMC,QAA8B,GAAG,SAAjCA,QAAiC,CAACC,KAAD,EAAuB;AAC5D,MAAIC,SAAS,YAAb;AACA,MAAIC,SAAS,GAAG,0GAAhB;AACA,SACE,MAAC,MAAD;AACE,IAAA,KAAK,EAAED,SADT;AAEE,IAAA,WAAW,EAAE;AAFf,KAGMD,KAHN;AAIE,IAAA,KAAK,EAAEE,SAJT;AAKE,IAAA,SAAS,EAAGL,OAAO,GAAG,WALxB;AAME,IAAA,IAAI,EAAE,SANR;AAOE,IAAA,WAAW,EAAE,EAPf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MASE,MAAC,OAAD;AACE,IAAA,QAAQ,EAAEG,KAAK,CAACG,QAAN,CAAeC,IAAf,CAAoBC,mBAApB,CAAwCC,KADpD;AAEE,IAAA,OAAO,EAAEN,KAAK,CAACO,OAAN,CAAcH,IAAd,CAAmBI,kBAAnB,CAAsCF,KAFjD;AAGE,IAAA,QAAQ,EAAEN,KAAK,CAACS,QAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF;AAiBD,CApBD,C,CAsBA;;;AACAV,QAAQ,CAACW,eAAT,GAA2B,iBAAeV,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACrBW,UAAAA,IADqB,GACdX,KAAK,CAACY,KAAN,CAAYD,IADE;AAErBE,UAAAA,UAFqB,GAER,gBAAe;AAAEF,YAAAA,IAAI,EAAEA;AAAR,WAAf,CAFQ;AAAA;AAAA,2CAGJlB,YAAY,CAACmB,KAAb,CAAmB;AAACA,YAAAA,KAAK,EAAElB,0BAAR;AAAoCoB,YAAAA,SAAS,EAAE;AACnF,sBAAQ,CAD2E;AAEnF,uBAAS,EAF0E;AAGnF,wBAAUD;AAHyE;AAA/C,WAAnB,EAIfE,IAJe,CAIV,UAAAC,QAAQ,EAAI;AACrB,mBAAOA,QAAP;AACD,WANoB,CAHI;;AAAA;AAGrBb,UAAAA,QAHqB;AAAA;AAAA,2CAWLV,YAAY,CAACmB,KAAb,CAAmB;AAACA,YAAAA,KAAK,EAAEjB,yBAAR;AAAmCmB,YAAAA,SAAS,EAAE;AACnF,sBAAQ,CAD2E;AAEnF,uBAAS,EAF0E;AAGnF,wBAAUD;AAHyE;AAA9C,WAAnB,EAIhBE,IAJgB,CAIX,UAAAC,QAAQ,EAAI;AACnB,mBAAOA,QAAP;AACD,WANmB,CAXK;;AAAA;AAWrBT,UAAAA,OAXqB;AAAA;AAAA,2CAmBJd,YAAY,CAACmB,KAAb,CAAmB;AAACA,YAAAA,KAAK,EAAEhB,cAAR;AAAwBkB,YAAAA,SAAS,EAAE;AACzE,oBAAMG;AADmE;AAAnC,WAAnB,EAEfF,IAFe,CAEV,UAAAC,QAAQ,EAAI;AACnB,mBAAOA,QAAQ,CAACZ,IAAT,CAAcc,IAArB;AACH,WAJoB,CAnBI;;AAAA;AAmBrBT,UAAAA,QAnBqB;AAAA,2CAyBlB;AACLN,YAAAA,QAAQ,EAAEA,QADL;AAELI,YAAAA,OAAO,EAAEA,OAFJ;AAGLE,YAAAA,QAAQ,EAAEA;AAHL,WAzBkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA3B;;AAgCA,eAAeV,QAAf","sourcesContent":["import React from 'react';\r\nimport {NextPage} from \"next\";\r\nimport Layout from '../../components/Layout/Layout';\r\nimport {apolloClient} from \"../../utils\";\r\nimport {GET_AD_SELL_LEASE_COMMENTS, GET_AD_SELL_LEASE_RATINGS} from \"../../graphql/reviews/queries\";\r\nimport {GET_USER_BY_ID } from \"../../graphql/user/queries/index\"\r\nimport \"../../assets/scss/style.scss\";\r\nimport { mainURL } from \"../../constants\";\r\nimport Channel from \"../../components/Channel/Index\"\r\n \r\ninterface IndexProps {\r\n  url: { query: { id: string }},\r\n  comments: { data: { adSellLeaseComments: { edges: CommentsProp[]}} },\r\n  ratings: { data: { adSellLeaseRatings: { edges: RatingsProp[]}} },\r\n  infoUser: UserProp\r\n}\r\n\r\ninterface QueryProp { \r\n  query: { slug: string } \r\n}\r\n\r\ninterface UserProp {\r\n  address: string\r\n  avatar: string\r\n  birthday: string\r\n  email: string\r\n  facebook: string\r\n  first_name: string\r\n  gender: string\r\n  google_id: string\r\n  intro: string\r\n  id: string\r\n  last_name: string\r\n  phone: string\r\n  mobile: string\r\n  skype: string\r\n  username: string\r\n  viber: string\r\n  website: string\r\n  zalo: string\r\n  created_at: string\r\n  updated_at: string\r\n}\r\n\r\ninterface CommentsProp {\r\n  node: {\r\n    id: string,\r\n    ad_sell_lease_id: string,\r\n    content: string,\r\n    user_id: string,\r\n    media: string,\r\n    user: {\r\n      first_name: string,\r\n      last_name: string,\r\n      avatar: string,\r\n    }\r\n    like_number: string,\r\n    created_at: string,\r\n  },\r\n}\r\n\r\ninterface RatingsProp {\r\n  node: {\r\n    id: string,\r\n    ad_sell_lease_id: string,\r\n    content: string,\r\n    user_id: string,\r\n    media: string,\r\n    user: {\r\n      first_name: string,\r\n      last_name: string,\r\n      avatar: string,\r\n    }\r\n    rate: number,\r\n    like_number: string,\r\n    created_at: string,\r\n  },\r\n}\r\n\r\n// @ts-ignore\r\nconst UserPage: NextPage<IndexProps> = (props: IndexProps) => {\r\n  let metaTitle = `Channel`\r\n  let imgBanner = \"https://static.nhadatmoi.net/project/1585911111698_chung-cu-b2-truong-sa-phuong-17-quan-binh-thanh-1.jpg\"\r\n  return (\r\n    <Layout\r\n      title={metaTitle}\r\n      description={\"\"}\r\n      {...props}\r\n      image={imgBanner}\r\n      canonical={ mainURL + '/channel/'}\r\n      path={'channel'}\r\n      dataCompare={{}}\r\n    >\r\n      <Channel \r\n        comments={props.comments.data.adSellLeaseComments.edges}\r\n        ratings={props.ratings.data.adSellLeaseRatings.edges}\r\n        infoUser={props.infoUser}\r\n      />\r\n    </Layout>\r\n  );\r\n};\r\n\r\n// @ts-ignore\r\nUserPage.getInitialProps = async function(props: QueryProp) {\r\n  let slug = props.query.slug;\r\n  let dataFilter = JSON.stringify({ slug: slug });\r\n  let comments = await apolloClient.query({query: GET_AD_SELL_LEASE_COMMENTS, variables: {\r\n      \"page\": 1,\r\n      \"limit\": 15,\r\n      \"filter\": dataFilter\r\n    }}).then(response => {\r\n    return response;\r\n  });\r\n\r\n  let ratings = await apolloClient.query({query: GET_AD_SELL_LEASE_RATINGS, variables: {\r\n    \"page\": 1,\r\n    \"limit\": 15,\r\n    \"filter\": dataFilter\r\n  }}).then(response => {\r\n    return response;\r\n  });\r\n\r\n  let infoUser = await apolloClient.query({query: GET_USER_BY_ID, variables: {\r\n    \"id\": id\r\n    }}).then(response => { \r\n      return response.data.user\r\n  })\r\n  \r\n  return {\r\n    comments: comments,\r\n    ratings: ratings,\r\n    infoUser: infoUser\r\n  };\r\n};\r\n\r\nexport default UserPage;\r\n"]},"metadata":{},"sourceType":"module"}
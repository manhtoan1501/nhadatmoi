{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\manh nhan\\\\Desktop\\\\new_ndm\\\\components\\\\Channel\\\\Index.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Header from \"./Header\";\nimport { indexStyles } from \"./Constant\";\nimport { createMuiTheme } from '@material-ui/core/styles';\nvar themeInput = createMuiTheme({\n  overrides: {\n    MuiTab: {\n      root: {\n        padding: \"6px\"\n      },\n      wrapper: {\n        fontSize: \"13px\",\n        fontWeight: 700\n      }\n    }\n  }\n});\n\nvar Index = function Index(props) {\n  var classes = indexStyles();\n\n  var _React$useState = React.useState(\"ad\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      itemTab = _React$useState2[0],\n      setItemTab = _React$useState2[1];\n\n  var _React$useState3 = React.useState(0),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      count = _React$useState4[0],\n      setCount = _React$useState4[1];\n\n  var tabs = [{\n    value: \"ad\",\n    label: \"Tin rao\"\n  }, {\n    value: \"introduce\",\n    label: \"Giới thiệu\"\n  }, {\n    value: \"agency\",\n    label: \"Môi giới\"\n  }, {\n    value: \"rating\",\n    label: \"Đánh giá\"\n  }];\n\n  var getChannel = function getChannel() {\n    var slug;\n    return _regeneratorRuntime.async(function getChannel$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            slug = \"kenh-giai-tri-1588654533689\"; // let channel = await apolloClient.query({ query: GET_CHANNEL_BY_SLUG, variables: {\n            //   \"slug\": slug,\n            // }})\n            //   .then((response: any) => {\n            //     console.log(\"response Tra ve ket qua cho anh\", response)\n            //   })\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, _Promise);\n  };\n\n  React.useEffect(function () {// getChannel()\n  });\n\n  var handleTabsChange = function handleTabsChange(event, value) {\n    setItemTab(value);\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, __jsx(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }));\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/manh nhan/Desktop/new_ndm/components/Channel/Index.tsx"],"names":["React","Header","indexStyles","createMuiTheme","themeInput","overrides","MuiTab","root","padding","wrapper","fontSize","fontWeight","Index","props","classes","useState","itemTab","setItemTab","count","setCount","tabs","value","label","getChannel","slug","useEffect","handleTabsChange","event"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAyC,OAAzC;AAKA,OAAOC,MAAP,MAAmB,UAAnB;AAgBA,SAAyBC,WAAzB,QAA4C,YAA5C;AACA,SAASC,cAAT,QAA+B,0BAA/B;AAMA,IAAMC,UAAU,GAAGD,cAAc,CAAC;AAChCE,EAAAA,SAAS,EAAE;AACTC,IAAAA,MAAM,EAAE;AACNC,MAAAA,IAAI,EAAE;AACJC,QAAAA,OAAO,EAAE;AADL,OADA;AAINC,MAAAA,OAAO,EAAE;AACPC,QAAAA,QAAQ,EAAE,MADH;AAEPC,QAAAA,UAAU,EAAE;AAFL;AAJH;AADC;AADqB,CAAD,CAAjC;;AA8EA,IAAMC,KAAoC,GAAG,SAAvCA,KAAuC,CAACC,KAAD,EAAgB;AAC3D,MAAMC,OAAO,GAAGZ,WAAW,EAA3B;;AAD2D,wBAE7BF,KAAK,CAACe,QAAN,CAAe,IAAf,CAF6B;AAAA;AAAA,MAEpDC,OAFoD;AAAA,MAE3CC,UAF2C;;AAAA,yBAGjCjB,KAAK,CAACe,QAAN,CAAuB,CAAvB,CAHiC;AAAA;AAAA,MAGpDG,KAHoD;AAAA,MAG7CC,QAH6C;;AAI3D,MAAMC,IAAI,GAAG,CACX;AAAEC,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,KAAK,EAAE;AAAtB,GADW,EAEX;AAAED,IAAAA,KAAK,EAAE,WAAT;AAAsBC,IAAAA,KAAK,EAAE;AAA7B,GAFW,EAGX;AAAED,IAAAA,KAAK,EAAE,QAAT;AAAmBC,IAAAA,KAAK,EAAE;AAA1B,GAHW,EAIX;AAAED,IAAAA,KAAK,EAAE,QAAT;AAAmBC,IAAAA,KAAK,EAAE;AAA1B,GAJW,CAAb;;AAOA,MAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AACbC,YAAAA,IADa,GACN,6BADM,EAEjB;AACA;AACA;AACA;AACA;AACA;;AAPiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AAWAxB,EAAAA,KAAK,CAACyB,SAAN,CAAgB,YAAM,CACpB;AACD,GAFD;;AAIA,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD,EAAaN,KAAb,EAA4B;AACnDJ,IAAAA,UAAU,CAACI,KAAD,CAAV;AACD,GAFD;;AAIA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAsFD,CApHD;;AAsHA,eAAeT,KAAf","sourcesContent":["import React, { FunctionComponent } from \"react\";\r\nimport Agency from \"./Tabs/Agency\";\r\nimport Rating from \"./Tabs/Rating\";\r\nimport Introduce from \"./Tabs/Introduce\";\r\nimport AdSellLeases from \"./Tabs/AdSellLeases\";\r\nimport Header from \"./Header\";\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport StyledCheckbox from \"./StyledCheckbox\";\r\nimport _ from 'lodash'\r\nimport {\r\n  Tabs,\r\n  Tab,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  Typography,\r\n  Avatar,\r\n  Hidden,\r\n} from \"@material-ui/core\";\r\nimport { relatedChannel, indexStyles } from \"./Constant\";\r\nimport { createMuiTheme } from '@material-ui/core/styles'\r\nimport { Badge } from '@material-ui/core'\r\nimport { Theme, makeStyles, withStyles, createStyles } from '@material-ui/core/styles'\r\nimport { GET_CHANNEL_BY_SLUG } from \"../../graphql/channel/queries\"\r\nimport {apolloClient} from \"../../utils\";\r\n\r\nconst themeInput = createMuiTheme({\r\n  overrides: {\r\n    MuiTab: {\r\n      root: {\r\n        padding: \"6px\",\r\n      },\r\n      wrapper: {\r\n        fontSize: \"13px\",\r\n        fontWeight: 700,\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\ninterface IndexProps {\r\n  comments: CommentsProp[];\r\n  infoUser: UserProps;\r\n  ratings: RatingsProp[];\r\n}\r\n\r\ninterface CommentsProp {\r\n  node: {\r\n    id: string;\r\n    ad_sell_lease_id: string;\r\n    content: string;\r\n    user_id: string;\r\n    media: string;\r\n    user: {\r\n      first_name: string;\r\n      last_name: string;\r\n      avatar: string;\r\n    };\r\n    like_number: string;\r\n    created_at: string;\r\n  };\r\n}\r\n\r\ninterface UserProps {\r\n  address: string;\r\n  avatar: string;\r\n  birthday: string;\r\n  email: string;\r\n  facebook: string;\r\n  first_name: string;\r\n  gender: string;\r\n  google_id: string;\r\n  intro: string;\r\n  id: string;\r\n  last_name: string;\r\n  phone: string;\r\n  mobile: string;\r\n  skype: string;\r\n  username: string;\r\n  viber: string;\r\n  website: string;\r\n  zalo: string;\r\n  created_at: string;\r\n  updated_at: string;\r\n}\r\n\r\ninterface RatingsProp {\r\n  node: {\r\n    id: string;\r\n    ad_sell_lease_id: string;\r\n    content: string;\r\n    user_id: string;\r\n    media: string;\r\n    user: {\r\n      first_name: string;\r\n      last_name: string;\r\n      avatar: string;\r\n    };\r\n    rate: number;\r\n    like_number: string;\r\n    created_at: string;\r\n  };\r\n}\r\n\r\nconst Index: FunctionComponent<IndexProps> = (props: any) => {\r\n  const classes = indexStyles();\r\n  const [itemTab, setItemTab] = React.useState(\"ad\");\r\n  const [count, setCount] = React.useState<number>(0);\r\n  const tabs = [\r\n    { value: \"ad\", label: \"Tin rao\" },\r\n    { value: \"introduce\", label: \"Giới thiệu\" },\r\n    { value: \"agency\", label: \"Môi giới\" },\r\n    { value: \"rating\", label: \"Đánh giá\" },\r\n  ];\r\n\r\n  const getChannel = async ()=> { \r\n    let slug = \"kenh-giai-tri-1588654533689\"\r\n    // let channel = await apolloClient.query({ query: GET_CHANNEL_BY_SLUG, variables: {\r\n    //   \"slug\": slug,\r\n    // }})\r\n    //   .then((response: any) => {\r\n    //     console.log(\"response Tra ve ket qua cho anh\", response)\r\n    //   })\r\n\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    // getChannel()\r\n  })\r\n\r\n  const handleTabsChange = (event: any, value: any) => {\r\n    setItemTab(value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      {/* <div className={classes.paddingIndex}>\r\n        <Paper square className={classes.rootTabs} >\r\n          <Hidden mdUp>\r\n            <ThemeProvider theme={themeInput}>\r\n              <Tabs\r\n                onChange={handleTabsChange}\r\n                scrollButtons=\"auto\"\r\n                indicatorColor=\"primary\"\r\n                textColor=\"primary\"\r\n                variant={\"fullWidth\"}\r\n                value={itemTab}\r\n              >\r\n                {tabs.map((tab) => <Tab key={tab.value} label={tab.label} value={tab.value}/> )}\r\n              </Tabs>\r\n            </ThemeProvider>\r\n          </Hidden>\r\n          <Hidden smDown>\r\n            <Tabs\r\n              onChange={handleTabsChange}\r\n              scrollButtons=\"auto\"\r\n              indicatorColor=\"primary\"\r\n              textColor=\"primary\"\r\n              variant={ \"standard\" }\r\n              value={itemTab}\r\n            >\r\n              {tabs.map((tab) => <Tab key={tab.value} label={tab.label} value={tab.value}/> )}\r\n            </Tabs>\r\n          </Hidden>\r\n        </Paper>\r\n        <Grid container spacing={0} className={classes.paddingContentTab}>\r\n          <Grid item xs={12} md={9}>\r\n            <div className={classes.contentTab}>\r\n              {itemTab === \"ad\" && <AdSellLeases userId={props.infoUser.id} />}\r\n              {itemTab === \"introduce\" && <Introduce infoUser={props.infoUser} />}\r\n              {itemTab === \"agency\" && <Agency infoUser={props.infoUser} />}\r\n              {itemTab === \"rating\" && <Rating />}\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={12} md={3}>\r\n            <div className={classes.paddingRelatedChannel}>\r\n              <Typography variant=\"h6\" className={classes.title}>\r\n                Kênh liên quan\r\n              </Typography>\r\n              {relatedChannel.map((item: any, index: number) => {\r\n                if (index < count * 6 + 6) {\r\n                  return (\r\n                    <div className={classes.contentChannel} >\r\n                      <Grid key={index} container spacing={4} alignItems=\"center\" justify=\"center\" className={classes.padingContent}>\r\n                        <Grid item xs={12}>\r\n                          <div className={classes.avatarLeft}>\r\n                            <Avatar src={item.image} className={classes.large} alt=\"\" />\r\n                          </div>\r\n                          <div className={classes.contentFollow} >\r\n                            <Typography className={classes.titleFollow}>\r\n                              {item.title}\r\n                            </Typography>\r\n                            <Typography className={classes.follow}>\r\n                              {item.numberfollow}Lượt theo dõi \r\n                            </Typography>\r\n                            {item.follow && <CheckCircleIcon style={{ color: \"#045EA8\", fontSize: \"15px\", float: \"right\" }} />}\r\n                          </div>\r\n                          <div className={classes.clearFloat}></div>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </div>\r\n                  );\r\n                } else {\r\n                  return \"\";\r\n                }\r\n              })}\r\n              <Grid container spacing={4}>\r\n                <Grid item xs={12}>\r\n                  <Button onClick={() => setCount(count + 1)} fullWidth className={classes.button}>\r\n                    Xem thêm\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}
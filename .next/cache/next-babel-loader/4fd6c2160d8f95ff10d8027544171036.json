{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manh nhan\\\\Desktop\\\\Nhadatmoi\\\\components\\\\PostCard\\\\components\\\\CommentForm\\\\CommentForm.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Avatar, Divider, IconButton, Input, Paper, Tooltip } from '@material-ui/core';\nimport SendIcon from '@material-ui/icons/Send';\nimport AddPhotoIcon from '@material-ui/icons/AddPhotoAlternate';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  paper: {\n    flexGrow: 1,\n    marginLeft: theme.spacing(2),\n    padding: theme.spacing(0.5, 2)\n  },\n  input: {\n    width: '100%'\n  },\n  divider: {\n    width: 1,\n    height: 24\n  },\n  fileInput: {\n    display: 'none'\n  }\n}));\n\nconst CommentForm = props => {\n  const {\n    className\n  } = props,\n        rest = _objectWithoutProperties(props, [\"className\"]);\n\n  const classes = useStyles();\n  const fileInputRef = useRef(null);\n  const {\n    0: value,\n    1: setValue\n  } = useState('');\n  const sender = {\n    avatar: '/images/avatars/avatar_11.png'\n  };\n\n  const handleChange = event => {\n    event.persist();\n    setValue(event.target.value);\n  };\n\n  const handleAttach = () => {\n    if (fileInputRef.current) {\n      fileInputRef.current.click();\n    }\n  };\n\n  return __jsx(\"div\", _extends({}, rest, {\n    className: clsx(classes.root, className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }), __jsx(Avatar, {\n    alt: \"Person\",\n    src: sender.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }), ' ', __jsx(Paper, {\n    className: classes.paper,\n    elevation: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, __jsx(Input, {\n    className: classes.input,\n    disableUnderline: true,\n    onChange: handleChange,\n    placeholder: \"Leave a message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  })), __jsx(Tooltip, {\n    title: \"Send\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, __jsx(IconButton, {\n    color: value.length > 0 ? 'primary' : 'default',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, __jsx(SendIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }))), __jsx(Divider, {\n    className: classes.divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }), __jsx(Tooltip, {\n    title: \"Attach image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, __jsx(IconButton, {\n    edge: \"end\",\n    onClick: handleAttach,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, __jsx(AddPhotoIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }))), __jsx(Tooltip, {\n    title: \"Attach file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, __jsx(IconButton, {\n    edge: \"end\",\n    onClick: handleAttach,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, __jsx(AttachFileIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }))), __jsx(\"input\", {\n    className: classes.fileInput,\n    ref: fileInputRef,\n    type: \"file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default CommentForm;","map":{"version":3,"sources":["C:/Users/manh nhan/Desktop/Nhadatmoi/components/PostCard/components/CommentForm/CommentForm.tsx"],"names":["React","useRef","useState","clsx","makeStyles","Avatar","Divider","IconButton","Input","Paper","Tooltip","SendIcon","AddPhotoIcon","AttachFileIcon","useStyles","theme","root","display","alignItems","paper","flexGrow","marginLeft","spacing","padding","input","width","divider","height","fileInput","CommentForm","props","className","rest","classes","fileInputRef","value","setValue","sender","avatar","handleChange","event","persist","target","handleAttach","current","click","length"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Avatar,\n  Divider,\n  IconButton,\n  Input,\n  Paper,\n  Tooltip\n} from '@material-ui/core';\nimport SendIcon from '@material-ui/icons/Send';\nimport AddPhotoIcon from '@material-ui/icons/AddPhotoAlternate';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  paper: {\n    flexGrow: 1,\n    marginLeft: theme.spacing(2),\n    padding: theme.spacing(0.5, 2)\n  },\n  input: {\n    width: '100%'\n  },\n  divider: {\n    width: 1,\n    height: 24\n  },\n  fileInput: {\n    display: 'none'\n  }\n}));\n\ninterface CommentFormProps {\n  className?:string,\n}\n\nconst CommentForm:React.FunctionComponent<CommentFormProps> = (props:CommentFormProps) => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const fileInputRef = useRef<HTMLInputElement>(null);\n\n  const [value, setValue] = useState('');\n\n  const sender = {\n    avatar: '/images/avatars/avatar_11.png'\n  };\n\n  const handleChange = (event:any) => {\n    event.persist();\n\n    setValue(event.target.value);\n  };\n\n  const handleAttach = () => {\n    if(fileInputRef.current){\n      fileInputRef.current.click();\n    }\n\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Avatar\n        alt=\"Person\"\n        src={sender.avatar}\n      />{' '}\n      <Paper\n        className={classes.paper}\n        elevation={1}\n      >\n        <Input\n          className={classes.input}\n          disableUnderline\n          onChange={handleChange}\n          placeholder=\"Leave a message\"\n        />\n      </Paper>\n      <Tooltip title=\"Send\">\n        <IconButton color={value.length > 0 ? 'primary' : 'default'}>\n          <SendIcon />\n        </IconButton>\n      </Tooltip>\n      <Divider className={classes.divider} />\n      <Tooltip title=\"Attach image\">\n        <IconButton\n          edge=\"end\"\n          onClick={handleAttach}\n        >\n          <AddPhotoIcon />\n        </IconButton>\n      </Tooltip>\n      <Tooltip title=\"Attach file\">\n        <IconButton\n          edge=\"end\"\n          onClick={handleAttach}\n        >\n          <AttachFileIcon />\n        </IconButton>\n      </Tooltip>\n      <input\n        className={classes.fileInput}\n        ref={fileInputRef}\n        type=\"file\"\n      />\n    </div>\n  );\n};\n\n\nexport default CommentForm;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport { apolloClient } from \"../../utils\";\nimport { GET_PROJECT_BY_ID } from \"../../graphql/project/queries\";\nimport Validator from \"../../modules/validator\";\nimport StringProcess from \"../../modules/stringProcess\";\nimport Button from '@material-ui/core/Button';\nimport MapIcon from \"@material-ui/icons/PinDrop\";\nimport FullScreenIcon from \"@material-ui/icons/Fullscreen\";\nimport Link from \"next/link\";\n\nvar BelongProject = function BelongProject(props) {\n  var projectId = props.project;\n  var projectDefault = {\n    id: '',\n    name: '',\n    scale: '',\n    investor: '',\n    slug: '',\n    address: {\n      text: '',\n      ward: '',\n      district: '',\n      city: ''\n    },\n    intro_content: '',\n    cover_image: '',\n    seo_description: '',\n    created_at: '',\n    updated_at: ''\n  };\n\n  var _React$useState = React.useState(projectDefault),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      projectData = _React$useState2[0],\n      setProject = _React$useState2[1];\n\n  useEffect(function () {\n    apolloClient.query({\n      query: GET_PROJECT_BY_ID,\n      variables: {\n        \"id\": projectId\n      }\n    }).then(function (response) {\n      if (typeof response.data.project !== \"undefined\") {\n        setProject(response.data.project);\n      }\n    });\n  });\n\n  if (projectData && !Validator.isBlank(projectData.id)) {\n    var freshText = function freshText(input) {\n      input = StringProcess.stripProperties(input, []);\n      input = StringProcess.stripTags(input, '');\n      input = input.replace(/&nbsp;/g, ' ');\n      return input;\n    };\n\n    var convertDescription = function convertDescription(input) {\n      return input.replace(/&#(\\d+);/g, function (match, dec) {\n        return String.fromCharCode(dec);\n      });\n    };\n\n    var projectDescription = projectData.seo_description;\n\n    if (projectDescription === '' || !projectDescription) {\n      projectDescription = freshText(projectData.intro_content);\n      projectDescription = convertDescription(projectDescription);\n      projectDescription = StringProcess.truncateString(projectDescription, 255, '...');\n    }\n\n    return __jsx(\"div\", {\n      className: \"project-info\"\n    }, __jsx(\"h2\", {\n      className: \"project-info-title text-active u-margin-bottom-small\"\n    }, \"Th\\xF4ng tin d\\u1EF1 \\xE1n\"), __jsx(Link, {\n      href: \"/du-an/[slug]\",\n      as: '/du-an/' + projectData.slug\n    }, __jsx(\"a\", null, __jsx(\"div\", {\n      className: 'project-info__belong_project'\n    }, __jsx(\"div\", {\n      className: 'project-info__belong_project__avatar'\n    }, __jsx(\"img\", {\n      src: projectData.cover_image,\n      alt: projectData.name\n    })), __jsx(\"div\", {\n      className: 'project-info__belong_project__title'\n    }, __jsx(\"div\", {\n      className: 'project-info__belong_project__title__name'\n    }, projectData.name), __jsx(\"div\", {\n      className: 'project-info__belong_project__title__description',\n      dangerouslySetInnerHTML: {\n        __html: projectDescription\n      }\n    }), __jsx(\"div\", {\n      className: 'project-info__belong_project__title__description'\n    }, __jsx(\"p\", {\n      className: 'project-info__belong_project__title__description__detail'\n    }, __jsx(\"b\", null, __jsx(MapIcon, null), \" \\u0110\\u1ECBa ch\\u1EC9: \", projectData.address.text)), __jsx(\"p\", {\n      className: 'project-info__belong_project__title__description__detail'\n    }, __jsx(\"b\", null, __jsx(FullScreenIcon, null), \" Quy m\\xF4: \", projectData.scale))), __jsx(\"div\", {\n      className: 'project-info__belong_project__title__button'\n    }, __jsx(Button, null, \"Truy c\\u1EADp d\\u1EF1 \\xE1n\")))))));\n  } else {\n    return __jsx(React.Fragment, null);\n  }\n};\n\nexport default BelongProject;","map":null,"metadata":{},"sourceType":"module"}
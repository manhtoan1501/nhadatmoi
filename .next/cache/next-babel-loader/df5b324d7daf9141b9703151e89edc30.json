{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\manh nhan\\\\Desktop\\\\new_ndm\\\\components\\\\Channel\\\\Index.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Members from \"./Tabs/Members\";\nimport Rating from \"./Tabs/Rating\";\nimport Introduce from \"./Tabs/Introduce\";\nimport AdSellLeases from \"./Tabs/AdSellLeases\";\nimport Header from \"./Header\";\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport Paper from \"@material-ui/core/Paper\";\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport _ from 'lodash';\nimport { Tabs, Tab, Grid, Button, Typography, Avatar, Hidden } from \"@material-ui/core\";\nimport { relatedChannel, indexStyles } from \"./Constant\";\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { GET_CHANNEL_BY_SLUG } from \"../../graphql/channel/queries\";\nimport { apolloClient } from \"../../utils\";\nvar themeInput = createMuiTheme({\n  overrides: {\n    MuiTab: {\n      root: {\n        padding: \"6px\"\n      },\n      wrapper: {\n        fontSize: \"13px\",\n        fontWeight: 700\n      }\n    }\n  }\n});\n\nvar Index = function Index(props) {\n  var classes = indexStyles();\n\n  var _React$useState = React.useState(\"rating\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      itemTab = _React$useState2[0],\n      setItemTab = _React$useState2[1];\n\n  var _React$useState3 = React.useState(0),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      count = _React$useState4[0],\n      setCount = _React$useState4[1];\n\n  var _React$useState5 = React.useState(),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      channel = _React$useState6[0],\n      setChannel = _React$useState6[1];\n\n  var channelId = _.get(channel, \"id\", \"\");\n\n  var tabs = [{\n    value: \"ad\",\n    label: \"Tin rao\"\n  }, {\n    value: \"introduce\",\n    label: \"Giới thiệu\"\n  }, {\n    value: \"members\",\n    label: \"Môi giới\"\n  }, {\n    value: \"rating\",\n    label: \"Đánh giá\"\n  }];\n\n  var getChannel = function getChannel() {\n    var res;\n    return _regeneratorRuntime.async(function getChannel$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(apolloClient.query({\n              query: GET_CHANNEL_BY_SLUG,\n              variables: {\n                \"slug\": props.slug\n              }\n            }).then(function (response) {\n              var channel = _.get(response, \"data.channel\", {});\n\n              setChannel(channel);\n            }));\n\n          case 2:\n            res = _context.sent;\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, _Promise);\n  };\n\n  React.useEffect(function () {\n    getChannel();\n  });\n  console.log(\"channel\", channel);\n\n  var handleTabsChange = function handleTabsChange(event, value) {\n    setItemTab(value);\n  };\n\n  var renderTabs = function renderTabs() {\n    return __jsx(Paper, {\n      square: true,\n      className: classes.rootTabs,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, __jsx(Hidden, {\n      mdUp: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, __jsx(ThemeProvider, {\n      theme: themeInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, __jsx(Tabs, {\n      onChange: handleTabsChange,\n      scrollButtons: \"auto\",\n      indicatorColor: \"primary\",\n      textColor: \"primary\",\n      variant: \"fullWidth\",\n      value: itemTab,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, tabs.map(function (tab) {\n      return __jsx(Tab, {\n        key: tab.value,\n        label: tab.label,\n        value: tab.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      });\n    })))), __jsx(Hidden, {\n      smDown: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, __jsx(Tabs, {\n      onChange: handleTabsChange,\n      scrollButtons: \"auto\",\n      indicatorColor: \"primary\",\n      textColor: \"primary\",\n      variant: \"standard\",\n      value: itemTab,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, tabs.map(function (tab) {\n      return __jsx(Tab, {\n        key: tab.value,\n        label: tab.label,\n        value: tab.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      });\n    }))));\n  };\n\n  var renderTab = function renderTab() {\n    return __jsx(\"div\", {\n      className: classes.contentTab,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, itemTab === \"ad\" && __jsx(AdSellLeases, {\n      channelId: channelId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }), itemTab === \"introduce\" && __jsx(Introduce, {\n      channelId: channelId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }), itemTab === \"members\" && __jsx(Members, {\n      channelId: channelId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }), itemTab === \"rating\" && __jsx(Rating, {\n      channelId: channelId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }));\n  };\n\n  var renderRelatedChannel = function renderRelatedChannel() {\n    return __jsx(\"div\", {\n      className: classes.paddingRelatedChannel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, __jsx(Typography, {\n      variant: \"h6\",\n      className: classes.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, \"K\\xEAnh li\\xEAn \"), relatedChannel.map(function (item, index) {\n      if (index < count * 6 + 6) {\n        return __jsx(\"div\", {\n          className: classes.contentChannel,\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210\n          },\n          __self: this\n        }, __jsx(Grid, {\n          container: true,\n          spacing: 4,\n          alignItems: \"center\",\n          justify: \"center\",\n          className: classes.padingContent,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211\n          },\n          __self: this\n        }, __jsx(Grid, {\n          item: true,\n          xs: 12,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: classes.avatarLeft,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213\n          },\n          __self: this\n        }, __jsx(Avatar, {\n          src: item.image,\n          className: classes.large,\n          alt: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214\n          },\n          __self: this\n        })), __jsx(\"div\", {\n          className: classes.contentFollow,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216\n          },\n          __self: this\n        }, __jsx(Typography, {\n          className: classes.titleFollow,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217\n          },\n          __self: this\n        }, item.title), __jsx(Typography, {\n          className: classes.follow,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220\n          },\n          __self: this\n        }, item.numberfollow, \"L\\u01B0\\u1EE3t theo d\\xF5i\"), item.follow && __jsx(CheckCircleIcon, {\n          style: {\n            color: \"#045EA8\",\n            fontSize: \"15px\",\n            \"float\": \"right\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223\n          },\n          __self: this\n        })), __jsx(\"div\", {\n          className: classes.clearFloat,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225\n          },\n          __self: this\n        }))));\n      }\n\n      return \"\";\n    }), __jsx(Grid, {\n      container: true,\n      spacing: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, __jsx(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, __jsx(Button, {\n      onClick: function onClick() {\n        return setCount(count + 1);\n      },\n      fullWidth: true,\n      className: classes.button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, \"Xem th\\xEAm\"))));\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  }, __jsx(Header, {\n    userLogin: props.userLogin,\n    channel: channel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: classes.paddingIndex,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247\n    },\n    __self: this\n  }, renderTabs(), __jsx(Grid, {\n    container: true,\n    spacing: 0,\n    className: classes.paddingContentTab,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 9,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250\n    },\n    __self: this\n  }, renderTab()), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253\n    },\n    __self: this\n  }, renderRelatedChannel()))));\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/manh nhan/Desktop/new_ndm/components/Channel/Index.tsx"],"names":["React","Members","Rating","Introduce","AdSellLeases","Header","CheckCircleIcon","Paper","ThemeProvider","_","Tabs","Tab","Grid","Button","Typography","Avatar","Hidden","relatedChannel","indexStyles","createMuiTheme","GET_CHANNEL_BY_SLUG","apolloClient","themeInput","overrides","MuiTab","root","padding","wrapper","fontSize","fontWeight","Index","props","classes","useState","itemTab","setItemTab","count","setCount","channel","setChannel","channelId","get","tabs","value","label","getChannel","query","variables","slug","then","response","res","useEffect","console","log","handleTabsChange","event","renderTabs","rootTabs","map","tab","renderTab","contentTab","renderRelatedChannel","paddingRelatedChannel","title","item","index","contentChannel","padingContent","avatarLeft","image","large","contentFollow","titleFollow","follow","numberfollow","color","clearFloat","button","userLogin","paddingIndex","paddingContentTab"],"mappings":"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","sourcesContent":["import React, { FunctionComponent } from \"react\";\r\nimport Members from \"./Tabs/Members\";\r\nimport Rating from \"./Tabs/Rating\";\r\nimport Introduce from \"./Tabs/Introduce\";\r\nimport AdSellLeases from \"./Tabs/AdSellLeases\";\r\nimport Header from \"./Header\";\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport StyledCheckbox from \"./StyledCheckbox\";\r\nimport _ from 'lodash'\r\nimport {\r\n  Tabs,\r\n  Tab,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  Typography,\r\n  Avatar,\r\n  Hidden,\r\n} from \"@material-ui/core\";\r\nimport { relatedChannel, indexStyles } from \"./Constant\";\r\nimport { createMuiTheme } from '@material-ui/core/styles'\r\nimport { Badge } from '@material-ui/core'\r\nimport { Theme, makeStyles, withStyles, createStyles } from '@material-ui/core/styles'\r\nimport { GET_CHANNEL_BY_SLUG } from \"../../graphql/channel/queries\"\r\nimport { apolloClient } from \"../../utils\";\r\n\r\nconst themeInput = createMuiTheme({\r\n  overrides: {\r\n    MuiTab: {\r\n      root: {\r\n        padding: \"6px\",\r\n      },\r\n      wrapper: {\r\n        fontSize: \"13px\",\r\n        fontWeight: 700,\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\ninterface IndexProps {\r\n  userLogin: string\r\n  slug: string\r\n}\r\n\r\ninterface ChannelProp {\r\n  id: string\r\n  name: string\r\n  slug: string\r\n  avatar: string\r\n  cover: string\r\n  description: string\r\n  nation: string\r\n  language: string\r\n  telephone: string\r\n  address: string\r\n  facebook: string\r\n  youtube: string\r\n  website: string\r\n  official_status: number\r\n  follow_value: number\r\n  followers: {\r\n    user_id: string\r\n  }[]\r\n  created_at: string\r\n}\r\n\r\ninterface CommentsProp {\r\n  node: {\r\n    id: string;\r\n    ad_sell_lease_id: string;\r\n    content: string;\r\n    user_id: string;\r\n    media: string;\r\n    user: {\r\n      first_name: string;\r\n      last_name: string;\r\n      avatar: string;\r\n    };\r\n    like_number: string;\r\n    created_at: string;\r\n  };\r\n}\r\n\r\ninterface UserProps {\r\n  address: string;\r\n  avatar: string;\r\n  birthday: string;\r\n  email: string;\r\n  facebook: string;\r\n  first_name: string;\r\n  gender: string;\r\n  google_id: string;\r\n  intro: string;\r\n  id: string;\r\n  last_name: string;\r\n  phone: string;\r\n  mobile: string;\r\n  skype: string;\r\n  username: string;\r\n  viber: string;\r\n  website: string;\r\n  zalo: string;\r\n  created_at: string;\r\n  updated_at: string;\r\n}\r\n\r\ninterface RatingsProp {\r\n  node: {\r\n    id: string;\r\n    ad_sell_lease_id: string;\r\n    content: string;\r\n    user_id: string;\r\n    media: string;\r\n    user: {\r\n      first_name: string;\r\n      last_name: string;\r\n      avatar: string;\r\n    };\r\n    rate: number;\r\n    like_number: string;\r\n    created_at: string;\r\n  };\r\n}\r\n\r\nconst Index: FunctionComponent<IndexProps> = (props: any) => {\r\n  const classes = indexStyles();\r\n  const [itemTab, setItemTab] = React.useState(\"rating\");\r\n  const [count, setCount] = React.useState<number>(0);\r\n  const [channel, setChannel] = React.useState<ChannelProp>()\r\n  const channelId = _.get(channel, \"id\", \"\")\r\n  const tabs = [\r\n    { value: \"ad\", label: \"Tin rao\" },\r\n    { value: \"introduce\", label: \"Giới thiệu\" },\r\n    { value: \"members\", label: \"Môi giới\" },\r\n    { value: \"rating\", label: \"Đánh giá\" },\r\n  ];\r\n\r\n  const getChannel = async () => {\r\n    let res = await apolloClient.query({ query: GET_CHANNEL_BY_SLUG, variables: {\r\n      \"slug\": props.slug,\r\n      }}).then((response: any) => {\r\n        let channel = _.get(response, \"data.channel\", {});\r\n        setChannel(channel)\r\n    });\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    getChannel()\r\n  })\r\n  console.log(\"channel\", channel)\r\n\r\n  const handleTabsChange = (event: any, value: any) => {\r\n    setItemTab(value);\r\n  };\r\n\r\n  const renderTabs = () => {\r\n    return (\r\n      <Paper square className={classes.rootTabs} >\r\n        <Hidden mdUp>\r\n          <ThemeProvider theme={themeInput}>\r\n            <Tabs\r\n              onChange={handleTabsChange}\r\n              scrollButtons=\"auto\"\r\n              indicatorColor=\"primary\"\r\n              textColor=\"primary\"\r\n              variant={\"fullWidth\"}\r\n              value={itemTab}\r\n            >\r\n              {tabs.map((tab) => <Tab key={tab.value} label={tab.label} value={tab.value}/> )}\r\n            </Tabs>\r\n          </ThemeProvider>\r\n        </Hidden>\r\n        <Hidden smDown>\r\n          <Tabs\r\n            onChange={handleTabsChange}\r\n            scrollButtons=\"auto\"\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            variant={ \"standard\" }\r\n            value={itemTab}\r\n          >\r\n            {tabs.map((tab) => <Tab key={tab.value} label={tab.label} value={tab.value}/> )}\r\n          </Tabs>\r\n        </Hidden>\r\n      </Paper>\r\n    )\r\n  }\r\n\r\n  const renderTab = () => {\r\n    return (\r\n      <div className={classes.contentTab}>\r\n        {itemTab === \"ad\" && <AdSellLeases channelId={channelId} />}\r\n        {itemTab === \"introduce\" && <Introduce channelId={channelId} />}\r\n        {itemTab === \"members\" && <Members channelId={channelId} />}\r\n        {itemTab === \"rating\" && <Rating channelId={channelId} />}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const renderRelatedChannel = () => {\r\n    return (\r\n      <div className={classes.paddingRelatedChannel}>\r\n        <Typography variant=\"h6\" className={classes.title}>Kênh liên </Typography>\r\n        {relatedChannel.map((item: any, index: number) => {\r\n          if ( index < count * 6 + 6 ) {\r\n            return (\r\n              <div className={classes.contentChannel} key={index} >\r\n                <Grid container spacing={4} alignItems=\"center\" justify=\"center\" className={classes.padingContent}>\r\n                  <Grid item xs={12}>\r\n                    <div className={classes.avatarLeft}>\r\n                      <Avatar src={item.image} className={classes.large} alt=\"\" />\r\n                    </div>\r\n                    <div className={classes.contentFollow} >\r\n                      <Typography className={classes.titleFollow}>\r\n                        {item.title}\r\n                      </Typography>\r\n                      <Typography className={classes.follow}>\r\n                        {item.numberfollow}Lượt theo dõi \r\n                      </Typography>\r\n                      {item.follow && <CheckCircleIcon style={{ color: \"#045EA8\", fontSize: \"15px\", float: \"right\" }} />}\r\n                    </div>\r\n                    <div className={classes.clearFloat}></div>\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n            );\r\n          }\r\n          return \"\"\r\n        })}\r\n        <Grid container spacing={4}>\r\n          <Grid item xs={12}>\r\n            <Button onClick={() => setCount(count + 1)} fullWidth className={classes.button}>\r\n              Xem thêm\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Header userLogin={props.userLogin} channel={channel} />\r\n      <div className={classes.paddingIndex}>\r\n        {renderTabs()}\r\n        <Grid container spacing={0} className={classes.paddingContentTab}>\r\n          <Grid item xs={12} md={9}>\r\n            {renderTab()}\r\n          </Grid>\r\n          <Grid item xs={12} md={3}>\r\n            {renderRelatedChannel()}\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}
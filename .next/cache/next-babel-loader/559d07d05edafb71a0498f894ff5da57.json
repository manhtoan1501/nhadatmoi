{"ast":null,"code":"import _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nvar __jsx = React.createElement;\nimport App from 'next/app';\nimport Url from 'url';\nimport React from 'react';\nimport nextCookie from \"next-cookies\";\nimport Router from \"next/router\";\nimport withGA from \"next-ga\";\nimport { googleAnalyticsCode } from '../constants';\nimport ErrorPage from \"next/error\";\nimport Validator from \"../modules/validator\";\nconst projectDetailPathname = '/chi-tiet-du-an.aspx';\nconst newLandDetailPathname = '/newland/project_detail.aspx';\nconst newLandAdSellLeasePathname = '/newland/properties_detail.aspx';\nconst adSellLeaseDetailPathname = '/chi-tiet-tin-rao.aspx';\nconst projectDetailNew = '/du-an/';\nconst adSellLeaseDetailNew = '/tin-rao/';\nconst projectCategory = '/du-an.aspx';\nconst adSellLeaseCategory = '/tin-rao.aspx';\n\nclass MyApp extends App {\n  static async getInitialProps({\n    Component,\n    ctx\n  }) {\n    if (ctx.asPath) {\n      let urlObject = Url.parse(ctx.asPath);\n      let pathName = urlObject.pathname;\n      let queryString = urlObject.query;\n\n      if (pathName === '/tin-rao' || pathName === '/tin-rao/' || pathName === '/nha-dat-ban/') {\n        let urlRedirect = '/nha-dat-ban';\n        ctx.res.writeHead(301, {\n          Location: `${urlRedirect}`\n        });\n        ctx.res.end();\n      }\n\n      if (pathName === '/du-an' || pathName === '/du-an/' || pathName === '/du-an-bat-dong-san/') {\n        let urlRedirect = '/du-an-bat-dong-san';\n        ctx.res.writeHead(301, {\n          Location: `${urlRedirect}`\n        });\n        ctx.res.end();\n      }\n\n      if (queryString && (pathName === projectDetailPathname || pathName === newLandDetailPathname)) {\n        let urlRedirect = '/';\n\n        if (queryString.indexOf('project_id=') === -1) {\n          queryString = queryString.replace('.html', '');\n          urlRedirect = projectDetailNew + queryString;\n        }\n\n        ctx.res.writeHead(301, {\n          Location: `${urlRedirect}`\n        });\n        ctx.res.end();\n      }\n\n      if (queryString && (pathName === adSellLeaseDetailPathname || pathName === newLandAdSellLeasePathname)) {\n        let urlRedirect = '/';\n\n        if (queryString.indexOf('ad_sell_lease_id=') === -1) {\n          queryString = queryString.replace('.html', '');\n          urlRedirect = adSellLeaseDetailNew + queryString;\n        }\n\n        ctx.res.writeHead(301, {\n          Location: `${urlRedirect}`\n        });\n        ctx.res.end();\n      }\n\n      if (pathName === projectCategory) {\n        let urlRedirect = '/du-an';\n        ctx.res.writeHead(301, {\n          Location: `${urlRedirect}`\n        });\n        ctx.res.end();\n      }\n\n      if (pathName === adSellLeaseCategory) {\n        let urlRedirect = '/tin-rao';\n        ctx.res.writeHead(301, {\n          Location: `${urlRedirect}`\n        });\n        ctx.res.end();\n      }\n    }\n\n    let pageProps = {\n      statusCode: 200\n    };\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx);\n    }\n\n    let {\n      user\n    } = nextCookie(ctx);\n    pageProps = _Object$assign(pageProps, {\n      user: user\n    });\n    return {\n      pageProps\n    };\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props;\n\n    if (!Validator.isBlank(pageProps.statusCode) && pageProps.statusCode !== 200) {\n      return __jsx(ErrorPage, {\n        statusCode: pageProps.statusCode\n      });\n    }\n\n    return __jsx(React.Fragment, null, __jsx(Component, pageProps));\n  }\n\n}\n\nexport default withGA(googleAnalyticsCode, Router)(MyApp);","map":null,"metadata":{},"sourceType":"module"}
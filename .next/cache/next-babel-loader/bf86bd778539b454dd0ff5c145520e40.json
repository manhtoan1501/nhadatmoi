{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\manh nhan\\\\Desktop\\\\new_ndm\\\\components\\\\Channel\\\\Index.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Members from \"./Tabs/Members\";\nimport Rating from \"./Tabs/Rating\";\nimport Introduce from \"./Tabs/Introduce\";\nimport AdSellLeases from \"./Tabs/AdSellLeases\";\nimport Header from \"./Header\";\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport Paper from \"@material-ui/core/Paper\";\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport _ from 'lodash';\nimport { Tabs, Tab, Grid, Button, Typography, Avatar, Hidden } from \"@material-ui/core\";\nimport { indexStyles } from \"./Constant\";\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { GET_CHANNELS } from \"../../graphql/channel/queries\";\nimport { apolloClient } from \"../../utils\";\nimport LoadingCircle from \"./LoadingCircle\";\nvar themeInput = createMuiTheme({\n  overrides: {\n    MuiTab: {\n      root: {\n        padding: \"6px\"\n      },\n      wrapper: {\n        fontSize: \"13px\",\n        fontWeight: 700\n      }\n    }\n  }\n});\n;\n;\n;\nvar tabs = [{\n  value: \"ad\",\n  label: \"Tin rao\"\n}, {\n  value: \"introduce\",\n  label: \"Giới thiệu\"\n}, {\n  value: \"members\",\n  label: \"Môi giới\"\n}, {\n  value: \"rating\",\n  label: \"Đánh giá\"\n}];\n\nvar Index = function Index(props) {\n  var classes = indexStyles();\n\n  var _React$useState = React.useState(\"rating\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      itemTab = _React$useState2[0],\n      setItemTab = _React$useState2[1];\n\n  var _React$useState3 = React.useState(0),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      page = _React$useState4[0],\n      setPage = _React$useState4[1];\n\n  var _React$useState5 = React.useState([]),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      channels = _React$useState6[0],\n      setChannels = _React$useState6[1];\n\n  var _React$useState7 = React.useState(true),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      loading = _React$useState8[0],\n      setLoading = _React$useState8[1];\n\n  var channelId = _.get(props, \"channel.id\", \"\");\n\n  var handleTabsChange = function handleTabsChange(event, value) {\n    setItemTab(value);\n  };\n\n  React.useEffect(function () {\n    getChannels();\n  });\n\n  var getChannels = function getChannels() {\n    var limit, channels;\n    return _regeneratorRuntime.async(function getChannels$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            limit = 8 + 8 * page;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(apolloClient.query({\n              query: GET_CHANNELS,\n              variables: {\n                \"limit\": limit,\n                \"page\": 1,\n                \"filter\": \"{}\"\n              }\n            }).then(function (response) {\n              var edges = _.get(response, \"data.channels.edges\", []);\n\n              setChannels(edges);\n              setLoading(false);\n            }));\n\n          case 3:\n            channels = _context.sent;\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, _Promise);\n  };\n\n  var renderTabs = function renderTabs() {\n    return __jsx(Paper, {\n      square: true,\n      className: classes.rootTabs,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, __jsx(Hidden, {\n      mdUp: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, __jsx(ThemeProvider, {\n      theme: themeInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, __jsx(Tabs, {\n      onChange: handleTabsChange,\n      scrollButtons: \"auto\",\n      indicatorColor: \"primary\",\n      textColor: \"primary\",\n      variant: \"fullWidth\",\n      value: itemTab,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, tabs.map(function (tab) {\n      return __jsx(Tab, {\n        key: tab.value,\n        label: tab.label,\n        value: tab.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      });\n    })))), __jsx(Hidden, {\n      smDown: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, __jsx(Tabs, {\n      onChange: handleTabsChange,\n      scrollButtons: \"auto\",\n      indicatorColor: \"primary\",\n      textColor: \"primary\" // variant=\"standard\" \n      ,\n      variant: \"scrollable\",\n      value: itemTab,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, tabs.map(function (tab) {\n      return __jsx(Tab, {\n        key: tab.value,\n        label: tab.label,\n        value: tab.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      });\n    }))));\n  };\n\n  var renderTab = function renderTab() {\n    return __jsx(\"div\", {\n      className: classes.contentTab,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, itemTab === \"ad\" && __jsx(AdSellLeases, {\n      channelId: channelId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }), itemTab === \"introduce\" && __jsx(Introduce, {\n      channelId: channelId,\n      slug: props.slug,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }), itemTab === \"members\" && __jsx(Members, {\n      channelId: channelId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), itemTab === \"rating\" && __jsx(Rating, {\n      channelId: channelId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }));\n  };\n\n  var viewMore = function viewMore(page) {\n    setPage(page);\n    getChannels();\n  };\n\n  var renderRelatedChannel = function renderRelatedChannel() {\n    return __jsx(\"div\", {\n      className: classes.relatedChannel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, __jsx(Typography, {\n      variant: \"h6\",\n      className: classes.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"K\\xEAnh li\\xEAn quan \"), loading ? __jsx(LoadingCircle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }) : \"\", channels.map(function (element, index) {\n      return __jsx(\"div\", {\n        className: classes.itemRelatedChannel,\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, __jsx(Grid, {\n        container: true,\n        spacing: 0,\n        alignItems: \"center\",\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, __jsx(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: classes.avatarRelatedChannel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, element.node.avatar ? __jsx(Avatar, {\n        src: element.node.avatar,\n        className: classes.sizeAvatar,\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }) : __jsx(Avatar, {\n        src: element.node.avatar,\n        className: classes.sizeAvatar,\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, _.get(element, \"node.name[0]\", \"\"))), __jsx(\"div\", {\n        className: classes.contentFollow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, __jsx(Typography, {\n        className: classes.titleFollow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, element.node.name), __jsx(Typography, {\n        className: classes.numberFollow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, element.node.follow_value, \" L\\u01B0\\u1EE3t theo d\\xF5i\"), !element.node.official_status ? __jsx(CheckCircleIcon, {\n        style: {\n          color: \"#045EA8\",\n          fontSize: \"15px\",\n          \"float\": \"right\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }) : \"\"), __jsx(\"div\", {\n        className: classes.clearFloat,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }))));\n    }), __jsx(Grid, {\n      container: true,\n      spacing: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, __jsx(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, __jsx(Button, {\n      onClick: function onClick() {\n        return viewMore(page + 1);\n      },\n      fullWidth: true,\n      className: classes.button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, \"Xem th\\xEAm\"))));\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, __jsx(Header, {\n    userLogin: props.userLogin,\n    channel: props.channel,\n    slug: props.slug,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: classes.paddingIndex,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, renderTabs(), __jsx(Grid, {\n    container: true,\n    alignItems: \"center\",\n    justify: \"center\",\n    spacing: 0,\n    className: classes.paddingContentTab,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 9,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, renderTab()), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }, renderRelatedChannel()))));\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/manh nhan/Desktop/new_ndm/components/Channel/Index.tsx"],"names":["React","Members","Rating","Introduce","AdSellLeases","Header","CheckCircleIcon","Paper","ThemeProvider","_","Tabs","Tab","Grid","Button","Typography","Avatar","Hidden","indexStyles","createMuiTheme","GET_CHANNELS","apolloClient","LoadingCircle","themeInput","overrides","MuiTab","root","padding","wrapper","fontSize","fontWeight","tabs","value","label","Index","props","classes","useState","itemTab","setItemTab","page","setPage","channels","setChannels","loading","setLoading","channelId","get","handleTabsChange","event","useEffect","getChannels","limit","query","variables","then","response","edges","renderTabs","rootTabs","map","tab","renderTab","contentTab","slug","viewMore","renderRelatedChannel","relatedChannel","title","element","index","itemRelatedChannel","avatarRelatedChannel","node","avatar","sizeAvatar","contentFollow","titleFollow","name","numberFollow","follow_value","official_status","color","clearFloat","button","userLogin","channel","paddingIndex","paddingContentTab"],"mappings":"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","sourcesContent":["import React, { FunctionComponent } from \"react\";\r\nimport Members from \"./Tabs/Members\";\r\nimport Rating from \"./Tabs/Rating\";\r\nimport Introduce from \"./Tabs/Introduce\";\r\nimport AdSellLeases from \"./Tabs/AdSellLeases\";\r\nimport Header from \"./Header\";\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport _ from 'lodash';\r\nimport { Tabs, Tab, Grid, Button, Typography, Avatar, Hidden } from \"@material-ui/core\";\r\nimport { relatedChannel, indexStyles } from \"./Constant\";\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { GET_CHANNELS } from \"../../graphql/channel/queries\";\r\nimport { apolloClient } from \"../../utils\";\r\nimport LoadingCircle from \"./LoadingCircle\"\r\n\r\nconst themeInput = createMuiTheme({\r\n  overrides: {\r\n    MuiTab: {\r\n      root: {\r\n        padding: \"6px\",\r\n      },\r\n      wrapper: {\r\n        fontSize: \"13px\",\r\n        fontWeight: 700,\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\ninterface IndexProps {\r\n  userLogin: string\r\n  channel: ChannelProp\r\n  slug: string\r\n};\r\n\r\ninterface Channels {\r\n  edges: {\r\n    node: {\r\n      id: string\r\n      name: string\r\n      slug: string\r\n      avatar: string \r\n      cover: string  \r\n      official_status: number \r\n      follow_value: number\r\n    }\r\n  }\r\n};\r\n\r\ninterface ChannelProp {\r\n  id: string\r\n  name: string\r\n  slug: string\r\n  avatar: string\r\n  cover: string\r\n  description: string\r\n  nation: string\r\n  language: string\r\n  telephone: string\r\n  address: string\r\n  facebook: string\r\n  youtube: string\r\n  website: string\r\n  official_status: number\r\n  follow_value: number\r\n  followers: {\r\n    user_id: string\r\n  }[]\r\n  created_at: string\r\n};\r\n\r\n\r\nconst tabs = [\r\n  { value: \"ad\", label: \"Tin rao\" },\r\n  { value: \"introduce\", label: \"Giới thiệu\" },\r\n  { value: \"members\", label: \"Môi giới\" },\r\n  { value: \"rating\", label: \"Đánh giá\" },\r\n];\r\n\r\nconst Index: FunctionComponent<IndexProps> = (props: any) => {\r\n  const classes = indexStyles();\r\n  const [itemTab, setItemTab] = React.useState(\"rating\");\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [channels, setChannels] = React.useState<Channels[]>([]);\r\n  const [loading, setLoading] = React.useState(true);\r\n  const channelId = _.get(props, \"channel.id\", \"\");\r\n  const handleTabsChange = (event: any, value: any) => {\r\n    setItemTab(value);\r\n  };\r\n\r\n  React.useEffect(()=> {\r\n    getChannels()\r\n  })\r\n\r\n  const getChannels = async () => { \r\n    let limit = 8 + 8*page\r\n    let channels = await apolloClient.query({ query: GET_CHANNELS, variables: {\r\n      \"limit\": limit,\r\n      \"page\": 1,\r\n      \"filter\": \"{}\",\r\n    }})\r\n    .then((response: any) => {\r\n      let edges = _.get(response, \"data.channels.edges\", [])\r\n      setChannels(edges)\r\n      setLoading(false)\r\n    });\r\n  };\r\n\r\n  const renderTabs = () => {\r\n    return (\r\n      <Paper square className={classes.rootTabs} >\r\n        <Hidden mdUp>\r\n          <ThemeProvider theme={themeInput}>\r\n            <Tabs\r\n              onChange={handleTabsChange}\r\n              scrollButtons=\"auto\"\r\n              indicatorColor=\"primary\"\r\n              textColor=\"primary\"\r\n              variant={\"fullWidth\"}\r\n              value={itemTab}\r\n            >\r\n              {tabs.map((tab) => <Tab key={tab.value} label={tab.label} value={tab.value}/> )}\r\n            </Tabs>\r\n          </ThemeProvider>\r\n        </Hidden>\r\n        <Hidden smDown>\r\n          <Tabs\r\n            onChange={handleTabsChange}\r\n            scrollButtons=\"auto\"\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            // variant=\"standard\" \r\n            variant=\"scrollable\"\r\n            value={itemTab}\r\n          >\r\n            {tabs.map((tab) => <Tab key={tab.value} label={tab.label} value={tab.value}/> )}\r\n          </Tabs>\r\n        </Hidden>\r\n      </Paper>\r\n    );\r\n  };\r\n\r\n  const renderTab = () => {\r\n    return (\r\n      <div className={classes.contentTab}>\r\n        {itemTab === \"ad\" && <AdSellLeases channelId={channelId} />}\r\n        {itemTab === \"introduce\" && <Introduce channelId={channelId} slug={props.slug}/>}\r\n        {itemTab === \"members\" && <Members channelId={channelId}  />}\r\n        {itemTab === \"rating\" && <Rating channelId={channelId} />}\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  const viewMore = (page) => {\r\n    setPage(page)\r\n    getChannels()\r\n  }\r\n\r\n  const renderRelatedChannel = () => {\r\n    return (\r\n      <div className={classes.relatedChannel}>\r\n        <Typography variant=\"h6\" className={classes.title}>Kênh liên quan </Typography>\r\n        {loading ? <LoadingCircle /> : \"\"}\r\n        {channels.map((element: any, index: number) => {\r\n          return (\r\n            <div className={classes.itemRelatedChannel} key={index} >\r\n              <Grid container spacing={0} alignItems=\"center\" justify=\"center\">\r\n                <Grid item xs={12}>\r\n                  <div className={classes.avatarRelatedChannel}>\r\n                    {element.node.avatar \r\n                    ? <Avatar src={element.node.avatar} className={classes.sizeAvatar} alt=\"\" />\r\n                    : <Avatar src={element.node.avatar} className={classes.sizeAvatar} alt=\"\" >{_.get(element, \"node.name[0]\", \"\") }</Avatar>}\r\n                  </div>\r\n                  <div className={classes.contentFollow}>\r\n                    <Typography className={classes.titleFollow}>\r\n                      {element.node.name}\r\n                    </Typography>\r\n                    <Typography className={classes.numberFollow}>\r\n                      {element.node.follow_value} Lượt theo dõi \r\n                    </Typography>\r\n                    {!element.node.official_status ? <CheckCircleIcon style={{ color: \"#045EA8\", fontSize: \"15px\", float: \"right\" }} /> : \"\"}\r\n                  </div>\r\n                  <div className={classes.clearFloat}></div>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          )\r\n        })}\r\n        <Grid container spacing={4}>\r\n          <Grid item xs={12}>\r\n            <Button onClick={() => viewMore(page + 1)} fullWidth className={classes.button}>\r\n              Xem thêm\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Header userLogin={props.userLogin} channel={props.channel} slug={props.slug}/>\r\n      <div className={classes.paddingIndex}>\r\n        {renderTabs()}\r\n        <Grid container alignItems=\"center\" justify=\"center\" spacing={0} className={classes.paddingContentTab}>\r\n          <Grid item xs={12} md={9}>\r\n            {renderTab()}\r\n          </Grid>\r\n          <Grid item xs={12} md={3}>\r\n            {renderRelatedChannel()}\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}
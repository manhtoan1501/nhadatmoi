{"ast":null,"code":"import _Array$isArray from \"@babel/runtime-corejs2/core-js/array/is-array\";\nvar _jsxFileName = \"C:\\\\Users\\\\manh nhan\\\\Desktop\\\\new_ndm\\\\components\\\\Channel\\\\Header.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Avatar, Typography, Button, Grid } from \"@material-ui/core\";\nimport { headerStyles } from './Constant';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport { FOLLOW_CHANNEL, UNFOLLOW_CHANNEL } from \"../../graphql/channel/mutation\";\nimport { apolloClient } from \"../../utils\";\nimport _ from \"lodash\";\n\nconst Header = props => {\n  const classes = headerStyles();\n  const avatar = \"https://sf.co.ua/14/07/wallpaper-117233.jpg\"; // \"https://news.mogi.vn/wp-content/uploads/2018/08/anh-nha-dep-13.jpg\"\n\n  let follow_value = _.get(props, \"channel.follow_value\", \"\");\n\n  let [followValue, setFollowValue] = React.useState(0);\n  const [checkFollow, setCheckFollow] = React.useState(false);\n\n  const addFollow = async () => {\n    let follow = await apolloClient.mutate({\n      mutation: FOLLOW_CHANNEL,\n      variables: {\n        \"input\": {\n          \"id\": _.get(props, \"channel.id\", \"\")\n        }\n      }\n    }).then(response => {\n      setFollowValue(follow_value + 1);\n    });\n  };\n\n  const unfollow = async () => {\n    let follow = await apolloClient.mutate({\n      mutation: UNFOLLOW_CHANNEL,\n      variables: {\n        \"input\": {\n          \"id\": _.get(props, \"channel.id\", \"\")\n        }\n      }\n    }).then(response => {\n      setFollowValue(follow_value - 1);\n    });\n  };\n\n  const follow = followValue || follow_value;\n\n  let followers = _.get(props, \"channel.followers\", []);\n\n  if (_Array$isArray(followers)) {\n    followers.map((item, index) => {\n      if (props.userLogin === item.user_id) {\n        setCheckFollow(true);\n      }\n    });\n  }\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.cover,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: classes.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, __jsx(Avatar, {\n    alt: \"nhadatmoi.net\",\n    className: classes.avatar,\n    src: avatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), __jsx(Grid, {\n    container: true,\n    spacing: 0,\n    alignContent: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    xs: 8,\n    sm: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.titleFollow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, __jsx(Typography, {\n    component: \"h2\",\n    className: classes.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, _.get(props, \"channel.name\", \"\"), \" \", _.get(props, \"channel.official_status\", \"\") ? __jsx(CheckCircleIcon, {\n    className: classes.ratingColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }) : \"\"), __jsx(Typography, {\n    component: \"h3\",\n    variant: \"body2\",\n    className: classes.follow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, follow > 0 ? follow : 0, \" l\\u01B0\\u1EE3t theo d\\xF5i\"))), __jsx(Grid, {\n    item: true,\n    xs: 4,\n    sm: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.followStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, checkFollow ? __jsx(Button, {\n    onClick: () => unfollow(),\n    fullWidth: true,\n    color: \"primary\",\n    variant: \"contained\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"B\\u1ECF theo d\\xF5i\") : __jsx(Button, {\n    onClick: () => addFollow(),\n    fullWidth: true,\n    color: \"primary\",\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Theo d\\xF5i\"))))));\n};\n\nexport default Header;","map":{"version":3,"sources":["C:/Users/manh nhan/Desktop/new_ndm/components/Channel/Header.tsx"],"names":["React","Avatar","Typography","Button","Grid","headerStyles","CheckCircleIcon","FOLLOW_CHANNEL","UNFOLLOW_CHANNEL","apolloClient","_","Header","props","classes","avatar","follow_value","get","followValue","setFollowValue","useState","checkFollow","setCheckFollow","addFollow","follow","mutate","mutation","variables","then","response","unfollow","followers","map","item","index","userLogin","user_id","cover","container","titleFollow","title","ratingColor","followStyle"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Avatar, Typography, Button, Grid } from \"@material-ui/core\";\r\nimport StyledCheckbox from './StyledCheckbox'\r\nimport { headerStyles } from './Constant'\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport { FOLLOW_CHANNEL, UNFOLLOW_CHANNEL } from \"../../graphql/channel/mutation\"\r\nimport { apolloClient } from \"../../utils\";\r\nimport _ from \"lodash\"\r\n\r\ninterface HearderProps {\r\n  userLogin: string\r\n  slug: string\r\n  channel: ChannelProp\r\n}\r\n\r\ninterface ChannelProp {\r\n  id: string\r\n  name: string\r\n  slug: string\r\n  avatar: string\r\n  cover: string\r\n  description: string\r\n  nation: string\r\n  language: string\r\n  telephone: string\r\n  address: string\r\n  facebook: string\r\n  youtube: string\r\n  website: string\r\n  official_status: number\r\n  follow_value: number\r\n  followers: {\r\n    user_id: string\r\n  }[]\r\n  created_at: string\r\n}\r\n\r\nconst Header: React.FunctionComponent<HearderProps> = (props: HearderProps) => {\r\n  const classes = headerStyles();\r\n  const avatar = \"https://sf.co.ua/14/07/wallpaper-117233.jpg\"; // \"https://news.mogi.vn/wp-content/uploads/2018/08/anh-nha-dep-13.jpg\"\r\n  let follow_value = _.get(props, \"channel.follow_value\", \"\");\r\n  let [followValue, setFollowValue] = React.useState(0);\r\n  const [checkFollow, setCheckFollow] = React.useState(false)\r\n\r\n  const addFollow = async ()=> { \r\n    let follow = await apolloClient.mutate({ mutation: FOLLOW_CHANNEL, variables: {\r\n      \"input\": {\r\n        \"id\": _.get(props, \"channel.id\", \"\")\r\n      }\r\n    }})\r\n    .then((response: any) => {\r\n      setFollowValue(follow_value + 1 )\r\n    })\r\n  };\r\n\r\n  const unfollow = async ()=> { \r\n    let follow = await apolloClient.mutate({ mutation: UNFOLLOW_CHANNEL, variables: {\r\n      \"input\": {\r\n        \"id\": _.get(props, \"channel.id\", \"\")\r\n      }\r\n    }})\r\n    .then((response: any) => {\r\n      setFollowValue(follow_value - 1)\r\n    })\r\n  };\r\n\r\n  const follow = followValue || follow_value\r\n  let followers = _.get(props, \"channel.followers\", [])\r\n  if(Array.isArray(followers)){\r\n    followers.map((item: any, index) => {\r\n      if(props.userLogin === item.user_id) {\r\n        setCheckFollow(true)\r\n      }\r\n    })\r\n  }\r\n  return (\r\n    <div>\r\n      <div className={classes.cover}></div>\r\n      <div className={classes.container}>\r\n        <Avatar\r\n          alt=\"nhadatmoi.net\"\r\n          className={classes.avatar}\r\n          src={avatar}\r\n        />   \r\n        <Grid container spacing={0} alignContent=\"center\">\r\n          <Grid item xs={8} sm={6}>\r\n            <div className={classes.titleFollow}>\r\n              <Typography component=\"h2\" className={classes.title}> \r\n                {_.get(props, \"channel.name\", \"\")} { _.get(props, \"channel.official_status\", \"\") ? <CheckCircleIcon className={classes.ratingColor}/> : \"\"} \r\n              </Typography>\r\n              <Typography component=\"h3\" variant=\"body2\" className={classes.follow}>\r\n                {follow > 0 ? follow : 0} lượt theo dõi\r\n              </Typography>\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={4} sm={6}>\r\n            <div className={classes.followStyle}>\r\n              {checkFollow \r\n                ? <Button onClick={() => unfollow()} fullWidth color=\"primary\" variant=\"contained\">Bỏ theo dõi</Button>\r\n                : <Button onClick={() => addFollow()} fullWidth color=\"primary\" variant=\"outlined\">Theo dõi</Button>\r\n              }\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n"]},"metadata":{},"sourceType":"module"}